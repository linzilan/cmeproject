<?xml version="1.0" encoding="UTF-8" ?>
<Graph version="2014.1.1 (simulation only)" pxg_version="1" maxfile_name="Simple" design_name="SimpleKernel" compilation_phase="final-simulation" has_longest_path="false">
	<Node group="[]" id="2601" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="io_y_force_disabled" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_y_force_disabled)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:816)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:139)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Name>io_y_force_disabled</Name>
	</Node>
	<Edge dst_node_id="2602" dst_node_input="a" src_node_id="2601" src_node_output="io_y_force_disabled" />
	<Node group="[]" id="2602" isControl="true" isVisible="false" pipelineFactor="0.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:816)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:139)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2604" dst_node_input="output_control" src_node_id="2602" src_node_output="result" />
	<Node group="[]" id="0" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="S" type="dfeFloat(8, 24)" />
		<Text>Scalar input (S)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:65)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Name>S</Name>
	</Node>
	<Edge dst_node_id="1700" dst_node_input="a" src_node_id="0" src_node_output="S" />
	<Edge dst_node_id="1849" dst_node_input="a" src_node_id="0" src_node_output="S" />
	<Edge dst_node_id="2463" dst_node_input="a" src_node_id="0" src_node_output="S" />
	<Node group="[]" id="3" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="q" type="dfeFloat(8, 24)" />
		<Text>Scalar input (q)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:68)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Name>q</Name>
	</Node>
	<Edge dst_node_id="603" dst_node_input="b" src_node_id="3" src_node_output="q" />
	<Edge dst_node_id="618" dst_node_input="a" src_node_id="3" src_node_output="q" />
	<Edge dst_node_id="1756" dst_node_input="b" src_node_id="3" src_node_output="q" />
	<Edge dst_node_id="1771" dst_node_input="a" src_node_id="3" src_node_output="q" />
	<Node group="[]" id="1771" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1772" dst_node_input="a" src_node_id="1771" src_node_output="result" />
	<Node group="[]" id="5" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="time" type="dfeFloat(8, 24)" />
		<Text>Scalar input (time)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:70)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Name>time</Name>
	</Node>
	<Edge dst_node_id="8" dst_node_input="a" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="16" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="543" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="608" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="610" dst_node_input="a" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="614" dst_node_input="a" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="619" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="826" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="1044" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="1256" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="1467" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="1761" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="1763" dst_node_input="a" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="1767" dst_node_input="a" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="1772" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="1979" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="2249" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Edge dst_node_id="2254" dst_node_input="b" src_node_id="5" src_node_output="time" />
	<Node group="[]" id="1772" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1774" dst_node_input="input" src_node_id="1772" src_node_output="result" />
	<Edge dst_node_id="1779" dst_node_input="a" src_node_id="1772" src_node_output="result" />
	<Edge dst_node_id="1783" dst_node_input="a" src_node_id="1772" src_node_output="result" />
	<Node group="[]" id="1773" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1774" dst_node_input="doubt" src_node_id="1773" src_node_output="value" />
	<Node group="[]" id="1774" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1775" dst_node_input="i" src_node_id="1774" src_node_output="output" />
	<Node group="[]" id="1775" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1777" dst_node_input="a" src_node_id="1775" src_node_output="o" />
	<Node group="[]" id="2887" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="1777" dst_node_input="b" src_node_id="2887" src_node_output="value" />
	<Node group="[]" id="1777" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1780" dst_node_input="input" src_node_id="1777" src_node_output="result" />
	<Edge dst_node_id="1784" dst_node_input="input" src_node_id="1777" src_node_output="result" />
	<Edge dst_node_id="1786" dst_node_input="input" src_node_id="1777" src_node_output="result" />
	<Node group="[]" id="1786" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1787" dst_node_input="i" src_node_id="1786" src_node_output="output" />
	<Edge dst_node_id="1788" dst_node_input="i" src_node_id="1786" src_node_output="output" />
	<Edge dst_node_id="1789" dst_node_input="i" src_node_id="1786" src_node_output="output" />
	<Edge dst_node_id="1790" dst_node_input="i" src_node_id="1786" src_node_output="output" />
	<Node group="[]" id="1787" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1808" dst_node_input="i" src_node_id="1787" src_node_output="o" />
	<Node group="[]" id="1808" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1810" dst_node_input="a" src_node_id="1808" src_node_output="o" />
	<Node group="[]" id="2886" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="1810" dst_node_input="b" src_node_id="2886" src_node_output="value" />
	<Node group="[]" id="1810" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1814" dst_node_input="a" src_node_id="1810" src_node_output="result" />
	<Node group="[]" id="1789" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1846" dst_node_input="input" src_node_id="1789" src_node_output="o" />
	<Node group="[]" id="1846" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1847" dst_node_input="input" src_node_id="1846" src_node_output="output" />
	<Node group="[]" id="1847" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1848" dst_node_input="addr" src_node_id="1847" src_node_output="output" />
	<Node group="[]" id="1848" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="1798" dst_node_input="a" src_node_id="1848" src_node_output="dout" />
	<Edge dst_node_id="1799" dst_node_input="b" src_node_id="1848" src_node_output="dout" />
	<Node group="[]" id="1788" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1843" dst_node_input="input" src_node_id="1788" src_node_output="o" />
	<Node group="[]" id="1843" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1844" dst_node_input="input" src_node_id="1843" src_node_output="output" />
	<Node group="[]" id="1844" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1845" dst_node_input="addr" src_node_id="1844" src_node_output="output" />
	<Node group="[]" id="1845" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="1794" dst_node_input="a" src_node_id="1845" src_node_output="dout" />
	<Edge dst_node_id="1795" dst_node_input="b" src_node_id="1845" src_node_output="dout" />
	<Node group="[]" id="1791" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="1792" dst_node_input="a" src_node_id="1791" src_node_output="value" />
	<Node group="[]" id="1790" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1792" dst_node_input="b" src_node_id="1790" src_node_output="o" />
	<Node group="[]" id="1792" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1793" dst_node_input="i" src_node_id="1792" src_node_output="result" />
	<Node group="[]" id="1793" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1794" dst_node_input="b" src_node_id="1793" src_node_output="o" />
	<Edge dst_node_id="1795" dst_node_input="a" src_node_id="1793" src_node_output="o" />
	<Node group="[]" id="1794" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1796" dst_node_input="a" src_node_id="1794" src_node_output="result" />
	<Node group="[]" id="1795" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1796" dst_node_input="b" src_node_id="1795" src_node_output="result" />
	<Node group="[]" id="1796" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1797" dst_node_input="i" src_node_id="1796" src_node_output="result" />
	<Node group="[]" id="1797" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1798" dst_node_input="b" src_node_id="1797" src_node_output="o" />
	<Edge dst_node_id="1799" dst_node_input="a" src_node_id="1797" src_node_output="o" />
	<Node group="[]" id="1798" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1800" dst_node_input="a" src_node_id="1798" src_node_output="result" />
	<Node group="[]" id="1799" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1800" dst_node_input="b" src_node_id="1799" src_node_output="result" />
	<Node group="[]" id="1800" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1801" dst_node_input="i" src_node_id="1800" src_node_output="result" />
	<Node group="[]" id="1801" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1802" dst_node_input="i" src_node_id="1801" src_node_output="o" />
	<Node group="[]" id="1802" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1804" dst_node_input="a" src_node_id="1802" src_node_output="o" />
	<Edge dst_node_id="1806" dst_node_input="option0" src_node_id="1802" src_node_output="o" />
	<Node group="[]" id="2885" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1804" dst_node_input="b" src_node_id="2885" src_node_output="value" />
	<Node group="[]" id="1804" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1806" dst_node_input="sel" src_node_id="1804" src_node_output="result" />
	<Edge dst_node_id="1813" dst_node_input="sel" src_node_id="1804" src_node_output="result" />
	<Node group="[]" id="1812" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1813" dst_node_input="option0" src_node_id="1812" src_node_output="value" />
	<Node group="[]" id="1811" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1813" dst_node_input="option1" src_node_id="1811" src_node_output="value" />
	<Node group="[]" id="1813" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1814" dst_node_input="b" src_node_id="1813" src_node_output="result" />
	<Node group="[]" id="1814" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1816" dst_node_input="a" src_node_id="1814" src_node_output="result" />
	<Edge dst_node_id="1821" dst_node_input="a" src_node_id="1814" src_node_output="result" />
	<Edge dst_node_id="1825" dst_node_input="i" src_node_id="1814" src_node_output="result" />
	<Node group="[]" id="2884" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1816" dst_node_input="b" src_node_id="2884" src_node_output="value" />
	<Node group="[]" id="1816" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1818" dst_node_input="a" src_node_id="1816" src_node_output="result" />
	<Node group="[]" id="2883" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1779" dst_node_input="b" src_node_id="2883" src_node_output="value" />
	<Node group="[]" id="1779" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1781" dst_node_input="a" src_node_id="1779" src_node_output="result" />
	<Node group="[]" id="1780" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1781" dst_node_input="b" src_node_id="1780" src_node_output="output" />
	<Node group="[]" id="1781" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1817" dst_node_input="a" src_node_id="1781" src_node_output="result" />
	<Edge dst_node_id="1824" dst_node_input="b" src_node_id="1781" src_node_output="result" />
	<Node group="[]" id="1817" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1818" dst_node_input="b" src_node_id="1817" src_node_output="result" />
	<Node group="[]" id="1818" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1819" dst_node_input="a" src_node_id="1818" src_node_output="result" />
	<Node group="[]" id="2882" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1783" dst_node_input="b" src_node_id="2882" src_node_output="value" />
	<Node group="[]" id="1783" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1785" dst_node_input="a" src_node_id="1783" src_node_output="result" />
	<Node group="[]" id="1784" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1785" dst_node_input="b" src_node_id="1784" src_node_output="output" />
	<Node group="[]" id="1785" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1819" dst_node_input="b" src_node_id="1785" src_node_output="result" />
	<Edge dst_node_id="1822" dst_node_input="a" src_node_id="1785" src_node_output="result" />
	<Node group="[]" id="1819" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1833" dst_node_input="in0" src_node_id="1819" src_node_output="result" />
	<Node group="[]" id="2881" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1821" dst_node_input="b" src_node_id="2881" src_node_output="value" />
	<Node group="[]" id="1821" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1823" dst_node_input="a" src_node_id="1821" src_node_output="result" />
	<Node group="[]" id="1822" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1823" dst_node_input="b" src_node_id="1822" src_node_output="result" />
	<Node group="[]" id="1823" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1824" dst_node_input="a" src_node_id="1823" src_node_output="result" />
	<Node group="[]" id="1824" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1833" dst_node_input="in1" src_node_id="1824" src_node_output="result" />
	<Node group="[]" id="1833" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1841" dst_node_input="sel" src_node_id="1833" src_node_output="result" />
	<Node group="[]" id="2617" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1829" dst_node_input="in0" src_node_id="2617" src_node_output="value" />
	<Node group="[]" id="1825" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1828" dst_node_input="input" src_node_id="1825" src_node_output="o" />
	<Node group="[]" id="1828" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1829" dst_node_input="in1" src_node_id="1828" src_node_output="output" />
	<Node group="[]" id="1829" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1831" dst_node_input="in0" src_node_id="1829" src_node_output="result" />
	<Node group="[]" id="1805" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1806" dst_node_input="option1" src_node_id="1805" src_node_output="value" />
	<Node group="[]" id="1806" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1807" dst_node_input="i" src_node_id="1806" src_node_output="result" />
	<Node group="[]" id="1807" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1830" dst_node_input="input" src_node_id="1807" src_node_output="o" />
	<Node group="[]" id="1830" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1831" dst_node_input="in1" src_node_id="1830" src_node_output="output" />
	<Node group="[]" id="1831" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1832" dst_node_input="input" src_node_id="1831" src_node_output="result" />
	<Node group="[]" id="1832" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1841" dst_node_input="option0" src_node_id="1832" src_node_output="output" />
	<Node group="[]" id="1834" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1836" dst_node_input="in0" src_node_id="1834" src_node_output="value" />
	<Node group="[]" id="1835" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1836" dst_node_input="in1" src_node_id="1835" src_node_output="value" />
	<Node group="[]" id="1836" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1838" dst_node_input="in0" src_node_id="1836" src_node_output="result" />
	<Node group="[]" id="1837" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1838" dst_node_input="in1" src_node_id="1837" src_node_output="value" />
	<Node group="[]" id="1838" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1839" dst_node_input="input" src_node_id="1838" src_node_output="result" />
	<Node group="[]" id="1839" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1841" dst_node_input="option1" src_node_id="1839" src_node_output="output" />
	<Edge dst_node_id="1841" dst_node_input="option3" src_node_id="1839" src_node_output="output" />
	<Node group="[]" id="1840" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1841" dst_node_input="option2" src_node_id="1840" src_node_output="value" />
	<Node group="[]" id="1841" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1849" dst_node_input="b" src_node_id="1841" src_node_output="result" />
	<Node group="[]" id="1849" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1977" dst_node_input="a" src_node_id="1849" src_node_output="result" />
	<Node group="[]" id="1717" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1718" dst_node_input="in0" src_node_id="1717" src_node_output="value" />
	<Node group="[]" id="1" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="K" type="dfeFloat(8, 24)" />
		<Text>Scalar input (K)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:66)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Name>K</Name>
	</Node>
	<Edge dst_node_id="392" dst_node_input="a" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="398" dst_node_input="a" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="400" dst_node_input="b" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="480" dst_node_input="a" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="485" dst_node_input="b" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="547" dst_node_input="b" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="903" dst_node_input="a" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="1038" dst_node_input="b" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="1700" dst_node_input="b" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="2056" dst_node_input="a" src_node_id="1" src_node_output="K" />
	<Edge dst_node_id="2191" dst_node_input="b" src_node_id="1" src_node_output="K" />
	<Node group="[]" id="1700" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1701" dst_node_input="a" src_node_id="1700" src_node_output="result" />
	<Edge dst_node_id="1716" dst_node_input="a" src_node_id="1700" src_node_output="result" />
	<Node group="[]" id="1716" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge dst_node_id="1718" dst_node_input="in1" src_node_id="1716" src_node_output="result" />
	<Node group="[]" id="1718" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1719" dst_node_input="input" src_node_id="1718" src_node_output="result" />
	<Node group="[]" id="1719" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(9)" />
		<Output latency="0" name="output" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:9, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1721" dst_node_input="a" src_node_id="1719" src_node_output="output" />
	<Node group="[]" id="2880" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="1721" dst_node_input="b" src_node_id="2880" src_node_output="value" />
	<Node group="[]" id="1721" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1725" dst_node_input="a" src_node_id="1721" src_node_output="result" />
	<Node group="[]" id="1701" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge dst_node_id="1702" dst_node_input="input" src_node_id="1701" src_node_output="result" />
	<Node group="[]" id="1702" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(23)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:23, -23, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1704" dst_node_input="input" src_node_id="1702" src_node_output="output" />
	<Node group="[]" id="1703" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1704" dst_node_input="doubt" src_node_id="1703" src_node_output="value" />
	<Node group="[]" id="1704" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1705" dst_node_input="i" src_node_id="1704" src_node_output="output" />
	<Node group="[]" id="1705" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1706" dst_node_input="input" src_node_id="1705" src_node_output="o" />
	<Edge dst_node_id="1708" dst_node_input="a" src_node_id="1705" src_node_output="o" />
	<Edge dst_node_id="1710" dst_node_input="input" src_node_id="1705" src_node_output="o" />
	<Node group="[]" id="1706" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1709" dst_node_input="a" src_node_id="1706" src_node_output="output" />
	<Node group="[]" id="2879" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1708" dst_node_input="b" src_node_id="2879" src_node_output="value" />
	<Node group="[]" id="1708" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1709" dst_node_input="b" src_node_id="1708" src_node_output="result" />
	<Node group="[]" id="1709" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1711" dst_node_input="input" src_node_id="1709" src_node_output="result" />
	<Node group="[]" id="1711" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1714" dst_node_input="sel" src_node_id="1711" src_node_output="output" />
	<Edge dst_node_id="1724" dst_node_input="sel" src_node_id="1711" src_node_output="output" />
	<Node group="[]" id="1723" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1724" dst_node_input="option0" src_node_id="1723" src_node_output="value" />
	<Node group="[]" id="1722" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1724" dst_node_input="option1" src_node_id="1722" src_node_output="value" />
	<Node group="[]" id="1724" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1725" dst_node_input="b" src_node_id="1724" src_node_output="result" />
	<Node group="[]" id="1725" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1751" dst_node_input="a" src_node_id="1725" src_node_output="result" />
	<Node group="[]" id="1710" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1715" dst_node_input="a" src_node_id="1710" src_node_output="output" />
	<Node group="[]" id="1713" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x0000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0000000000000000000000000000</Value>
		<HexValue>0x0000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1714" dst_node_input="option0" src_node_id="1713" src_node_output="value" />
	<Node group="[]" id="1712" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1714" dst_node_input="option1" src_node_id="1712" src_node_output="value" />
	<Node group="[]" id="1714" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1715" dst_node_input="b" src_node_id="1714" src_node_output="result" />
	<Node group="[]" id="1715" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1728" dst_node_input="input" src_node_id="1715" src_node_output="result" />
	<Node group="[]" id="1728" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(28)" />
		<Text>&lt;{HWRawBits:28}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1729" dst_node_input="input" src_node_id="1728" src_node_output="output" />
	<Node group="[]" id="1729" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(28)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:28, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1730" dst_node_input="a" src_node_id="1729" src_node_output="output" />
	<Edge dst_node_id="1731" dst_node_input="a" src_node_id="1729" src_node_output="output" />
	<Node group="[]" id="1731" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[25:19]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>19</Base>
		<Width>7</Width>
	</Node>
	<Edge dst_node_id="1732" dst_node_input="input" src_node_id="1731" src_node_output="result" />
	<Node group="[]" id="1732" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1735" dst_node_input="addr" src_node_id="1732" src_node_output="output" />
	<Edge dst_node_id="1736" dst_node_input="addr" src_node_id="1732" src_node_output="output" />
	<Edge dst_node_id="1737" dst_node_input="addr" src_node_id="1732" src_node_output="output" />
	<Edge dst_node_id="1738" dst_node_input="addr" src_node_id="1732" src_node_output="output" />
	<Node group="[]" id="1735" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x79ae1d8
0x76e20af
0x742bc04
0x718a6b1
0x6efd426
0x6c83865
0x6a1c7f5
0x67c77e1
0x6583dab
0x6350f4a
0x612e324
0x5f1b010
0x5d16d39
0x5b21234
0x59396ed
0x575f3a7
0x55920f4
0x53d17b7
0x521d11c
0x5074694
0x4ed71d8
0x4d44cd9
0x4bbd1cf
0x4a3fb23
0x48cc380
0x47625bc
0x4601ce5
0x44aa43a
0x435b726
0x4215145
0x40d6e58
0x3fa0a4a
0x3e7212e
0x3d4af3b
0x3c2b0cd
0x3b12262
0x3a00096
0x38f4826
0x37ef5ee
0x36f06e6
0x35f7820
0x35046c9
0x3417027
0x332f19b
0x324c89b
0x316f2b2
0x3096d83
0x2fc36c5
0x2ef4c40
0x2e2abd4
0x2d65370
0x2ca4116
0x2be72d4
0x2b2e6d3
0x2a79b3e
0x29c8e5b
0x291be78
0x28729f0
0x27ccf33
0x272acb4
0x268c0f8
0x25f0a91
0x2558819
0x24c3836
0x243199b
0x23a2b02
0x2316b32
0x228d8fb
0x2207333
0x21838be
0x2102884
0x2084179
0x2008297
0x1f8eadf
0x1f1795c
0x1ea2d1e
0x1e3053e
0x1dc00da
0x1d51f15
0x1ce5f1f
0x1c7c025
0x1c14161
0x1bae20e
0x1b4a171
0x1ae7ed1
0x1a8797c
0x1a290c1
0x19cc3f9
0x1971281
0x1917bb6
0x18bfefb
0x1869bc2
0x181516c
0x17c1f70
0x1770543
0x172025a
0x16d1634
0x168404f
0x163802c
0x15ed552
0x15a3f4f
0x155bdaa
0x1514ff3
0x14cf5bf
0x148ae9f
0x1447a2e
0x1405805
0x13c47c3
0x1384905
0x1345b6e
0x1307ea4
0x12cb24a
0x128f60b
0x1254994
0x121ac8e
0x11e1eab
0x11a9f9a
0x1172f10
0x113ccc0
0x1107864
0x10d31b1
0x109f863
0x106cc34
0x103ace4
0x1009a2f
0x0fd93d8
0x0fa99a1
0x0f7ab4d</MemoryData>
	</Node>
	<Edge dst_node_id="1739" dst_node_input="a" src_node_id="1735" src_node_output="dout" />
	<Node group="[]" id="1730" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>[18:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>19</Width>
	</Node>
	<Edge dst_node_id="1734" dst_node_input="input" src_node_id="1730" src_node_output="result" />
	<Node group="[]" id="1734" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(19)" />
		<Output latency="0" name="output" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:19, -19, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1739" dst_node_input="b" src_node_id="1734" src_node_output="output" />
	<Edge dst_node_id="1742" dst_node_input="b" src_node_id="1734" src_node_output="output" />
	<Edge dst_node_id="1745" dst_node_input="b" src_node_id="1734" src_node_output="output" />
	<Node group="[]" id="1739" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1740" dst_node_input="a" src_node_id="1739" src_node_output="result" />
	<Node group="[]" id="1736" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xa3abc67
0xa518cb6
0xa67d6c5
0xa7d9ea9
0xa92e850
0xaa7b782
0xabc0fe4
0xacff4f6
0xae36a1c
0xaf67294
0xb091184
0xb1b49f2
0xb2d1ec9
0xb3e92d9
0xb4fa8da
0xb60636b
0xb70c514
0xb80d047
0xb90875f
0xb9feca6
0xbaf024e
0xbbdca79
0xbcc4737
0xbda7a85
0xbe86650
0xbf60c76
0xc036ec3
0xc108ef7
0xc1d6ec3
0xc2a0fc8
0xc36739c
0xc429bc9
0xc4e89ca
0xc5a3f11
0xc65bd03
0xc7104fa
0xc7c1847
0xc86f830
0xc91a5f0
0xc9c22ba
0xca66fb7
0xcb08e09
0xcba7ec8
0xcc44303
0xccddbc3
0xcd74a09
0xce08ece
0xce9ab04
0xcf29f96
0xcfb6d69
0xd04155b
0xd0c9844
0xd14f6f7
0xd1d3240
0xd254ae5
0xd2d41a7
0xd351744
0xd3ccc71
0xd4461e1
0xd4bd841
0xd53303a
0xd5a6a70
0xd618783
0xd68880f
0xd6f6cac
0xd7635ed
0xd7ce463
0xd83789a
0xd89f31a
0xd905469
0xd969d09
0xd9ccd79
0xda2e634
0xda8e7b2
0xdaed269
0xdb4a6cc
0xdba654b
0xdc00e52
0xdc5a24c
0xdcb21a1
0xdd08cb7
0xdd5e3f0
0xddb27ac
0xde0584b
0xde57628
0xdea819d
0xdef7b03
0xdf462ae
0xdf938f4
0xdfdfe25
0xe02b292
0xe075689
0xe0bea56
0xe106e44
0xe14e29d
0xe1947a7
0xe1d9da9
0xe21e4e6
0xe261da2
0xe2a481d
0xe2e6498
0xe327351
0xe367485
0xe3a6870
0xe3e4f4d
0xe422954
0xe45f6be
0xe49b7c2
0xe4d6c95
0xe51156c
0xe54b27a
0xe5843f2
0xe5bca05
0xe5f44e4
0xe62b4bd
0xe6619bf
0xe697417
0xe6cc3f2
0xe70097c
0xe7344df
0xe767645
0xe799dd7
0xe7cbbbd
0xe7fd01e
0xe82db22
0xe85dced
0xe88d5a6
0xe8bc570</MemoryData>
	</Node>
	<Edge dst_node_id="1740" dst_node_input="b" src_node_id="1736" src_node_output="dout" />
	<Node group="[]" id="1740" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1741" dst_node_input="i" src_node_id="1740" src_node_output="result" />
	<Node group="[]" id="1741" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -41, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1742" dst_node_input="a" src_node_id="1741" src_node_output="o" />
	<Node group="[]" id="1742" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1743" dst_node_input="a" src_node_id="1742" src_node_output="result" />
	<Node group="[]" id="1737" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x5c551d6
0x5b9de1a
0x5ae9779
0x5a37ce9
0x5988d6b
0x58dc807
0x5832bc9
0x578b7ca
0x56e6b25
0x56444fd
0x55a447d
0x55068d5
0x546b13a
0x53d1ce8
0x533ab20
0x52a5b29
0x5212c4e
0x5181de0
0x50f2f34
0x5065fa5
0x4fdae91
0x4f51b5b
0x4eca569
0x4e44c28
0x4dc0f06
0x4d3ed76
0x4cbe6ef
0x4c3faea
0x4bc28e6
0x4b47062
0x4acd0e3
0x4a549f0
0x49ddb13
0x49683da
0x48f43d4
0x4881a94
0x48107af
0x47a0abd
0x4732359
0x46c5120
0x46593b1
0x45eeaad
0x45855b8
0x451d478
0x44b6695
0x4450bb9
0x43ec390
0x4388dc9
0x4326a12
0x42c581d
0x426579e
0x420684b
0x41a89d8
0x414bc00
0x40efe7c
0x4095107
0x403b35f
0x3fe2541
0x3f8a66e
0x3f336a7
0x3edd5af
0x3e88348
0x3e33f39
0x3de0947
0x3d8e13b
0x3d3c6dc
0x3ceb9f6
0x3c9ba52
0x3c4c7bc
0x3bfe203
0x3bb08f3
0x3b63c5d
0x3b17c10
0x3acc7dd
0x3a81f96
0x3a3830e
0x39ef219
0x39a6c8c
0x395f23c
0x39182ff
0x38d1ead
0x388c51d
0x3847627
0x38031a7
0x37bf774
0x377c76b
0x373a167
0x36f8544
0x36b72df
0x3676a16
0x3636ac6
0x35f74ce
0x35b880e
0x357a466
0x353c9b7
0x34ff7e0
0x34c2ec5
0x3486e47
0x344b649
0x34106ae
0x33d5f5a
0x339c032
0x3362919
0x33299f5
0x32f12ad
0x32b9325
0x3281b44
0x324aaf2
0x3214216
0x31de098
0x31a865f
0x3173355
0x313e763
0x310a271
0x30d646a
0x30a2d38
0x306fcc6
0x303d2fd
0x300afca
0x2fd9318
0x2fa7cd3
0x2f76ce7
0x2f46340
0x2f15fcb
0x2ee6276
0x2eb6b2e
0x2e879e0
0x2e58e7b</MemoryData>
	</Node>
	<Edge dst_node_id="1743" dst_node_input="b" src_node_id="1737" src_node_output="dout" />
	<Node group="[]" id="1743" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1744" dst_node_input="i" src_node_id="1743" src_node_output="result" />
	<Node group="[]" id="1744" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -33, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1745" dst_node_input="a" src_node_id="1744" src_node_output="o" />
	<Node group="[]" id="1745" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1746" dst_node_input="a" src_node_id="1745" src_node_output="result" />
	<Node group="[]" id="1738" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x0000000
0x016fe51
0x02dcf2d
0x0447347
0x05aeb4e
0x07137eb
0x08759c5
0x09d517f
0x0b31fb8
0x0c8c50b
0x0de4212
0x0f39761
0x108c589
0x11dcd19
0x132ae9e
0x1476aa0
0x15c01a4
0x170742d
0x184c2bd
0x198edd0
0x1acf5e3
0x1c0db6d
0x1d49ee5
0x1e840be
0x1fbc16c
0x20f215b
0x22260fb
0x23580b6
0x24880f5
0x25b6220
0x26e249a
0x280c8c7
0x2934f09
0x2a5b7c0
0x2b80347
0x2ca31fd
0x2dc443a
0x2ee3a57
0x30014ac
0x311d38e
0x3237751
0x3350047
0x3466ec1
0x357c30f
0x368fd7f
0x37a1e5d
0x38b25f6
0x39c1492
0x3acea7c
0x3bda7fb
0x3ce4d54
0x3dedace
0x3ef50ad
0x3ffaf33
0x40ff6a3
0x420273d
0x4304140
0x44044ec
0x450327f
0x4600a34
0x46fcc48
0x47f78f5
0x48f1075
0x49e9301
0x4ae00d2
0x4bd5a1d
0x4cc9f1b
0x4dbcfff
0x4eaecff
0x4f9f64e
0x508ec20
0x517cea6
0x5269e13
0x5355a97
0x5440462
0x5529ba3
0x561208a
0x56f9343
0x57df3fd
0x58c42e4
0x59a8024
0x5a8abe8
0x5b6c65b
0x5c4cfa7
0x5d2c7f6
0x5e0af70
0x5ee863e
0x5fc4c88
0x60a0275
0x617a82c
0x6253dd3
0x632c38f
0x6403986
0x64d9fdb
0x65af6b5
0x6683e35
0x675767f
0x6829fb7
0x68fb9fd
0x69cc574
0x6a9c23d
0x6b6b07a
0x6c3904a
0x6d061cd
0x6dd2524
0x6e9da6d
0x6f681c7
0x7031b51
0x70fa729
0x71c256c
0x7289637
0x734f9a8
0x7414fdb
0x74d98ed
0x759d4f8
0x7660419
0x772266b
0x77e3c08
0x78a450c
0x796418f
0x7a231ad
0x7ae157e
0x7b9ed1c
0x7c5b8a0
0x7d17823
0x7dd2bbc
0x7e8d384
0x7f46f93</MemoryData>
	</Node>
	<Edge dst_node_id="1746" dst_node_input="b" src_node_id="1738" src_node_output="dout" />
	<Node group="[]" id="1746" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1747" dst_node_input="i" src_node_id="1746" src_node_output="result" />
	<Node group="[]" id="1747" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1751" dst_node_input="b" src_node_id="1747" src_node_output="o" />
	<Node group="[]" id="1751" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1752" dst_node_input="i" src_node_id="1751" src_node_output="result" />
	<Node group="[]" id="1752" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1755" dst_node_input="a" src_node_id="1752" src_node_output="o" />
	<Node group="[]" id="2878" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f317218; 0.6931471824645996</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111001100010111001000011000</Value>
		<HexValue>0x3f317218</HexValue>
		<NumericValue>0.6931471824645996</NumericValue>
	</Node>
	<Edge dst_node_id="1755" dst_node_input="b" src_node_id="2878" src_node_output="value" />
	<Node group="[]" id="1755" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1762" dst_node_input="a" src_node_id="1755" src_node_output="result" />
	<Node group="[]" id="2" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="r" type="dfeFloat(8, 24)" />
		<Text>Scalar input (r)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:67)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Name>r</Name>
	</Node>
	<Edge dst_node_id="15" dst_node_input="a" src_node_id="2" src_node_output="r" />
	<Edge dst_node_id="603" dst_node_input="a" src_node_id="2" src_node_output="r" />
	<Edge dst_node_id="825" dst_node_input="a" src_node_id="2" src_node_output="r" />
	<Edge dst_node_id="1043" dst_node_input="a" src_node_id="2" src_node_output="r" />
	<Edge dst_node_id="1255" dst_node_input="a" src_node_id="2" src_node_output="r" />
	<Edge dst_node_id="1466" dst_node_input="a" src_node_id="2" src_node_output="r" />
	<Edge dst_node_id="1756" dst_node_input="a" src_node_id="2" src_node_output="r" />
	<Edge dst_node_id="1978" dst_node_input="a" src_node_id="2" src_node_output="r" />
	<Edge dst_node_id="2253" dst_node_input="a" src_node_id="2" src_node_output="r" />
	<Edge dst_node_id="2644" dst_node_input="floatIn" src_node_id="2" src_node_output="r" />
	<Node group="[]" id="1756" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1760" dst_node_input="a" src_node_id="1756" src_node_output="result" />
	<Node group="[]" id="4" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="sigma" type="dfeFloat(8, 24)" />
		<Text>Scalar input (sigma)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:69)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Name>sigma</Name>
	</Node>
	<Edge dst_node_id="7" dst_node_input="a" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="7" dst_node_input="b" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="545" dst_node_input="a" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="606" dst_node_input="b" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="612" dst_node_input="a" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="616" dst_node_input="a" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="1673" dst_node_input="a" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="1759" dst_node_input="b" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="1765" dst_node_input="a" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="1769" dst_node_input="a" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="2251" dst_node_input="a" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="2640" dst_node_input="floatIn" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="2647" dst_node_input="floatIn" src_node_id="4" src_node_output="sigma" />
	<Edge dst_node_id="2651" dst_node_input="floatIn" src_node_id="4" src_node_output="sigma" />
	<Node group="[]" id="2640" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1759" dst_node_input="a" src_node_id="2640" src_node_output="floatOut" />
	<Node group="[]" id="1759" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1760" dst_node_input="b" src_node_id="1759" src_node_output="result" />
	<Node group="[]" id="1760" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1761" dst_node_input="a" src_node_id="1760" src_node_output="result" />
	<Node group="[]" id="1761" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1762" dst_node_input="b" src_node_id="1761" src_node_output="result" />
	<Node group="[]" id="1762" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1766" dst_node_input="a" src_node_id="1762" src_node_output="result" />
	<Node group="[]" id="1763" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1765" dst_node_input="b" src_node_id="1763" src_node_output="result" />
	<Node group="[]" id="1765" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1766" dst_node_input="b" src_node_id="1765" src_node_output="result" />
	<Node group="[]" id="1766" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1770" dst_node_input="a" src_node_id="1766" src_node_output="result" />
	<Edge dst_node_id="1871" dst_node_input="a" src_node_id="1766" src_node_output="result" />
	<Edge dst_node_id="1879" dst_node_input="a" src_node_id="1766" src_node_output="result" />
	<Edge dst_node_id="1973" dst_node_input="a" src_node_id="1766" src_node_output="result" />
	<Edge dst_node_id="2641" dst_node_input="floatIn" src_node_id="1766" src_node_output="result" />
	<Node group="[]" id="2877" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1973" dst_node_input="b" src_node_id="2877" src_node_output="value" />
	<Node group="[]" id="1973" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1976" dst_node_input="sel" src_node_id="1973" src_node_output="result" />
	<Node group="[]" id="2876" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1971" dst_node_input="a" src_node_id="2876" src_node_output="value" />
	<Node group="[]" id="1856" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ecc422a; 0.3989422917366028</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:21)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110110011000100001000101010</Value>
		<HexValue>0x3ecc422a</HexValue>
		<NumericValue>0.3989422917366028</NumericValue>
	</Node>
	<Edge dst_node_id="1959" dst_node_input="a" src_node_id="1856" src_node_output="value" />
	<Node group="[]" id="1879" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1882" dst_node_input="a" src_node_id="1879" src_node_output="result" />
	<Node group="[]" id="2641" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1882" dst_node_input="b" src_node_id="2641" src_node_output="floatOut" />
	<Node group="[]" id="1882" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1884" dst_node_input="input" src_node_id="1882" src_node_output="result" />
	<Edge dst_node_id="1889" dst_node_input="a" src_node_id="1882" src_node_output="result" />
	<Edge dst_node_id="1893" dst_node_input="a" src_node_id="1882" src_node_output="result" />
	<Node group="[]" id="1883" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1884" dst_node_input="doubt" src_node_id="1883" src_node_output="value" />
	<Node group="[]" id="1884" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1885" dst_node_input="i" src_node_id="1884" src_node_output="output" />
	<Node group="[]" id="1885" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1887" dst_node_input="a" src_node_id="1885" src_node_output="o" />
	<Node group="[]" id="2875" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="1887" dst_node_input="b" src_node_id="2875" src_node_output="value" />
	<Node group="[]" id="1887" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1890" dst_node_input="input" src_node_id="1887" src_node_output="result" />
	<Edge dst_node_id="1894" dst_node_input="input" src_node_id="1887" src_node_output="result" />
	<Edge dst_node_id="1896" dst_node_input="input" src_node_id="1887" src_node_output="result" />
	<Node group="[]" id="1896" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1897" dst_node_input="i" src_node_id="1896" src_node_output="output" />
	<Edge dst_node_id="1898" dst_node_input="i" src_node_id="1896" src_node_output="output" />
	<Edge dst_node_id="1899" dst_node_input="i" src_node_id="1896" src_node_output="output" />
	<Edge dst_node_id="1900" dst_node_input="i" src_node_id="1896" src_node_output="output" />
	<Node group="[]" id="1897" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1918" dst_node_input="i" src_node_id="1897" src_node_output="o" />
	<Node group="[]" id="1918" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1920" dst_node_input="a" src_node_id="1918" src_node_output="o" />
	<Node group="[]" id="2874" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="1920" dst_node_input="b" src_node_id="2874" src_node_output="value" />
	<Node group="[]" id="1920" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1924" dst_node_input="a" src_node_id="1920" src_node_output="result" />
	<Node group="[]" id="1899" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1956" dst_node_input="input" src_node_id="1899" src_node_output="o" />
	<Node group="[]" id="1956" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1957" dst_node_input="input" src_node_id="1956" src_node_output="output" />
	<Node group="[]" id="1957" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1958" dst_node_input="addr" src_node_id="1957" src_node_output="output" />
	<Node group="[]" id="1958" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="1908" dst_node_input="a" src_node_id="1958" src_node_output="dout" />
	<Edge dst_node_id="1909" dst_node_input="b" src_node_id="1958" src_node_output="dout" />
	<Node group="[]" id="1898" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1953" dst_node_input="input" src_node_id="1898" src_node_output="o" />
	<Node group="[]" id="1953" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1954" dst_node_input="input" src_node_id="1953" src_node_output="output" />
	<Node group="[]" id="1954" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1955" dst_node_input="addr" src_node_id="1954" src_node_output="output" />
	<Node group="[]" id="1955" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="1904" dst_node_input="a" src_node_id="1955" src_node_output="dout" />
	<Edge dst_node_id="1905" dst_node_input="b" src_node_id="1955" src_node_output="dout" />
	<Node group="[]" id="1901" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="1902" dst_node_input="a" src_node_id="1901" src_node_output="value" />
	<Node group="[]" id="1900" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1902" dst_node_input="b" src_node_id="1900" src_node_output="o" />
	<Node group="[]" id="1902" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1903" dst_node_input="i" src_node_id="1902" src_node_output="result" />
	<Node group="[]" id="1903" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1904" dst_node_input="b" src_node_id="1903" src_node_output="o" />
	<Edge dst_node_id="1905" dst_node_input="a" src_node_id="1903" src_node_output="o" />
	<Node group="[]" id="1904" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1906" dst_node_input="a" src_node_id="1904" src_node_output="result" />
	<Node group="[]" id="1905" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1906" dst_node_input="b" src_node_id="1905" src_node_output="result" />
	<Node group="[]" id="1906" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1907" dst_node_input="i" src_node_id="1906" src_node_output="result" />
	<Node group="[]" id="1907" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1908" dst_node_input="b" src_node_id="1907" src_node_output="o" />
	<Edge dst_node_id="1909" dst_node_input="a" src_node_id="1907" src_node_output="o" />
	<Node group="[]" id="1908" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1910" dst_node_input="a" src_node_id="1908" src_node_output="result" />
	<Node group="[]" id="1909" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1910" dst_node_input="b" src_node_id="1909" src_node_output="result" />
	<Node group="[]" id="1910" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1911" dst_node_input="i" src_node_id="1910" src_node_output="result" />
	<Node group="[]" id="1911" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1912" dst_node_input="i" src_node_id="1911" src_node_output="o" />
	<Node group="[]" id="1912" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1914" dst_node_input="a" src_node_id="1912" src_node_output="o" />
	<Edge dst_node_id="1916" dst_node_input="option0" src_node_id="1912" src_node_output="o" />
	<Node group="[]" id="2873" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1914" dst_node_input="b" src_node_id="2873" src_node_output="value" />
	<Node group="[]" id="1914" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1916" dst_node_input="sel" src_node_id="1914" src_node_output="result" />
	<Edge dst_node_id="1923" dst_node_input="sel" src_node_id="1914" src_node_output="result" />
	<Node group="[]" id="1922" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1923" dst_node_input="option0" src_node_id="1922" src_node_output="value" />
	<Node group="[]" id="1921" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1923" dst_node_input="option1" src_node_id="1921" src_node_output="value" />
	<Node group="[]" id="1923" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1924" dst_node_input="b" src_node_id="1923" src_node_output="result" />
	<Node group="[]" id="1924" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1926" dst_node_input="a" src_node_id="1924" src_node_output="result" />
	<Edge dst_node_id="1931" dst_node_input="a" src_node_id="1924" src_node_output="result" />
	<Edge dst_node_id="1935" dst_node_input="i" src_node_id="1924" src_node_output="result" />
	<Node group="[]" id="2872" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1926" dst_node_input="b" src_node_id="2872" src_node_output="value" />
	<Node group="[]" id="1926" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1928" dst_node_input="a" src_node_id="1926" src_node_output="result" />
	<Node group="[]" id="2871" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1889" dst_node_input="b" src_node_id="2871" src_node_output="value" />
	<Node group="[]" id="1889" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1891" dst_node_input="a" src_node_id="1889" src_node_output="result" />
	<Node group="[]" id="1890" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1891" dst_node_input="b" src_node_id="1890" src_node_output="output" />
	<Node group="[]" id="1891" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1927" dst_node_input="a" src_node_id="1891" src_node_output="result" />
	<Edge dst_node_id="1934" dst_node_input="b" src_node_id="1891" src_node_output="result" />
	<Node group="[]" id="1927" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1928" dst_node_input="b" src_node_id="1927" src_node_output="result" />
	<Node group="[]" id="1928" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1929" dst_node_input="a" src_node_id="1928" src_node_output="result" />
	<Node group="[]" id="2870" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1893" dst_node_input="b" src_node_id="2870" src_node_output="value" />
	<Node group="[]" id="1893" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1895" dst_node_input="a" src_node_id="1893" src_node_output="result" />
	<Node group="[]" id="1894" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1895" dst_node_input="b" src_node_id="1894" src_node_output="output" />
	<Node group="[]" id="1895" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1929" dst_node_input="b" src_node_id="1895" src_node_output="result" />
	<Edge dst_node_id="1932" dst_node_input="a" src_node_id="1895" src_node_output="result" />
	<Node group="[]" id="1929" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1943" dst_node_input="in0" src_node_id="1929" src_node_output="result" />
	<Node group="[]" id="2869" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1931" dst_node_input="b" src_node_id="2869" src_node_output="value" />
	<Node group="[]" id="1931" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1933" dst_node_input="a" src_node_id="1931" src_node_output="result" />
	<Node group="[]" id="1932" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1933" dst_node_input="b" src_node_id="1932" src_node_output="result" />
	<Node group="[]" id="1933" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1934" dst_node_input="a" src_node_id="1933" src_node_output="result" />
	<Node group="[]" id="1934" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1943" dst_node_input="in1" src_node_id="1934" src_node_output="result" />
	<Node group="[]" id="1943" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1951" dst_node_input="sel" src_node_id="1943" src_node_output="result" />
	<Node group="[]" id="2618" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1939" dst_node_input="in0" src_node_id="2618" src_node_output="value" />
	<Node group="[]" id="1935" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1938" dst_node_input="input" src_node_id="1935" src_node_output="o" />
	<Node group="[]" id="1938" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1939" dst_node_input="in1" src_node_id="1938" src_node_output="output" />
	<Node group="[]" id="1939" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1941" dst_node_input="in0" src_node_id="1939" src_node_output="result" />
	<Node group="[]" id="1915" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1916" dst_node_input="option1" src_node_id="1915" src_node_output="value" />
	<Node group="[]" id="1916" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1917" dst_node_input="i" src_node_id="1916" src_node_output="result" />
	<Node group="[]" id="1917" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1940" dst_node_input="input" src_node_id="1917" src_node_output="o" />
	<Node group="[]" id="1940" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1941" dst_node_input="in1" src_node_id="1940" src_node_output="output" />
	<Node group="[]" id="1941" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1942" dst_node_input="input" src_node_id="1941" src_node_output="result" />
	<Node group="[]" id="1942" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1951" dst_node_input="option0" src_node_id="1942" src_node_output="output" />
	<Node group="[]" id="1944" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1946" dst_node_input="in0" src_node_id="1944" src_node_output="value" />
	<Node group="[]" id="1945" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1946" dst_node_input="in1" src_node_id="1945" src_node_output="value" />
	<Node group="[]" id="1946" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1948" dst_node_input="in0" src_node_id="1946" src_node_output="result" />
	<Node group="[]" id="1947" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1948" dst_node_input="in1" src_node_id="1947" src_node_output="value" />
	<Node group="[]" id="1948" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1949" dst_node_input="input" src_node_id="1948" src_node_output="result" />
	<Node group="[]" id="1949" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1951" dst_node_input="option1" src_node_id="1949" src_node_output="output" />
	<Edge dst_node_id="1951" dst_node_input="option3" src_node_id="1949" src_node_output="output" />
	<Node group="[]" id="1950" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1951" dst_node_input="option2" src_node_id="1950" src_node_output="value" />
	<Node group="[]" id="1951" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1959" dst_node_input="b" src_node_id="1951" src_node_output="result" />
	<Node group="[]" id="1959" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1969" dst_node_input="a" src_node_id="1959" src_node_output="result" />
	<Node group="[]" id="1854" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3faa466f; 1.3302744626998901</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:19)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111101010100100011001101111</Value>
		<HexValue>0x3faa466f</HexValue>
		<NumericValue>1.3302744626998901</NumericValue>
	</Node>
	<Edge dst_node_id="1960" dst_node_input="a" src_node_id="1854" src_node_output="value" />
	<Node group="[]" id="2868" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1878" dst_node_input="a" src_node_id="2868" src_node_output="value" />
	<Node group="[]" id="2867" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1876" dst_node_input="a" src_node_id="2867" src_node_output="value" />
	<Node group="[]" id="1870" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:336)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1872" dst_node_input="in0" src_node_id="1870" src_node_output="value" />
	<Node group="[]" id="1871" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:337)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge dst_node_id="1872" dst_node_input="in1" src_node_id="1871" src_node_output="result" />
	<Node group="[]" id="1872" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:338)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1873" dst_node_input="input" src_node_id="1872" src_node_output="result" />
	<Node group="[]" id="1873" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:339)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1874" dst_node_input="a" src_node_id="1873" src_node_output="output" />
	<Node group="[]" id="1855" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3e6d3389; 0.23164190351963043</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:20)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110011011010011001110001001</Value>
		<HexValue>0x3e6d3389</HexValue>
		<NumericValue>0.23164190351963043</NumericValue>
	</Node>
	<Edge dst_node_id="1874" dst_node_input="b" src_node_id="1855" src_node_output="value" />
	<Node group="[]" id="1874" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1876" dst_node_input="b" src_node_id="1874" src_node_output="result" />
	<Node group="[]" id="1876" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1878" dst_node_input="b" src_node_id="1876" src_node_output="result" />
	<Node group="[]" id="1878" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1960" dst_node_input="b" src_node_id="1878" src_node_output="result" />
	<Edge dst_node_id="1962" dst_node_input="b" src_node_id="1878" src_node_output="result" />
	<Edge dst_node_id="1964" dst_node_input="b" src_node_id="1878" src_node_output="result" />
	<Edge dst_node_id="1966" dst_node_input="b" src_node_id="1878" src_node_output="result" />
	<Edge dst_node_id="1968" dst_node_input="b" src_node_id="1878" src_node_output="result" />
	<Node group="[]" id="1960" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1961" dst_node_input="a" src_node_id="1960" src_node_output="result" />
	<Node group="[]" id="1853" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbfe91eea; -1.8212559223175049</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:18)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111111111010010001111011101010</Value>
		<HexValue>0xbfe91eea</HexValue>
		<NumericValue>-1.8212559223175049</NumericValue>
	</Node>
	<Edge dst_node_id="1961" dst_node_input="b" src_node_id="1853" src_node_output="value" />
	<Node group="[]" id="1961" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1962" dst_node_input="a" src_node_id="1961" src_node_output="result" />
	<Node group="[]" id="1962" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1963" dst_node_input="a" src_node_id="1962" src_node_output="result" />
	<Node group="[]" id="1852" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3fe40778; 1.781477928161621</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:17)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111111001000000011101111000</Value>
		<HexValue>0x3fe40778</HexValue>
		<NumericValue>1.781477928161621</NumericValue>
	</Node>
	<Edge dst_node_id="1963" dst_node_input="b" src_node_id="1852" src_node_output="value" />
	<Node group="[]" id="1963" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1964" dst_node_input="a" src_node_id="1963" src_node_output="result" />
	<Node group="[]" id="1964" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1965" dst_node_input="a" src_node_id="1964" src_node_output="result" />
	<Node group="[]" id="1851" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbeb68f87; -0.3565637767314911</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:16)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111110101101101000111110000111</Value>
		<HexValue>0xbeb68f87</HexValue>
		<NumericValue>-0.3565637767314911</NumericValue>
	</Node>
	<Edge dst_node_id="1965" dst_node_input="b" src_node_id="1851" src_node_output="value" />
	<Node group="[]" id="1965" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1966" dst_node_input="a" src_node_id="1965" src_node_output="result" />
	<Node group="[]" id="1966" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1967" dst_node_input="a" src_node_id="1966" src_node_output="result" />
	<Node group="[]" id="1850" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ea385fa; 0.3193815350532532</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:15)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110101000111000010111111010</Value>
		<HexValue>0x3ea385fa</HexValue>
		<NumericValue>0.3193815350532532</NumericValue>
	</Node>
	<Edge dst_node_id="1967" dst_node_input="b" src_node_id="1850" src_node_output="value" />
	<Node group="[]" id="1967" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1968" dst_node_input="a" src_node_id="1967" src_node_output="result" />
	<Node group="[]" id="1968" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1969" dst_node_input="b" src_node_id="1968" src_node_output="result" />
	<Node group="[]" id="1969" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1971" dst_node_input="b" src_node_id="1969" src_node_output="result" />
	<Node group="[]" id="1971" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1975" dst_node_input="b" src_node_id="1971" src_node_output="result" />
	<Edge dst_node_id="1976" dst_node_input="option0" src_node_id="1971" src_node_output="result" />
	<Node group="[]" id="2866" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1975" dst_node_input="a" src_node_id="2866" src_node_output="value" />
	<Node group="[]" id="1975" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1976" dst_node_input="option1" src_node_id="1975" src_node_output="result" />
	<Node group="[]" id="1976" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1977" dst_node_input="b" src_node_id="1976" src_node_output="result" />
	<Node group="[]" id="1977" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2185" dst_node_input="a" src_node_id="1977" src_node_output="result" />
	<Node group="[]" id="1978" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1979" dst_node_input="a" src_node_id="1978" src_node_output="result" />
	<Node group="[]" id="1979" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1981" dst_node_input="input" src_node_id="1979" src_node_output="result" />
	<Edge dst_node_id="1986" dst_node_input="a" src_node_id="1979" src_node_output="result" />
	<Edge dst_node_id="1990" dst_node_input="a" src_node_id="1979" src_node_output="result" />
	<Node group="[]" id="1980" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1981" dst_node_input="doubt" src_node_id="1980" src_node_output="value" />
	<Node group="[]" id="1981" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1982" dst_node_input="i" src_node_id="1981" src_node_output="output" />
	<Node group="[]" id="1982" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1984" dst_node_input="a" src_node_id="1982" src_node_output="o" />
	<Node group="[]" id="2865" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="1984" dst_node_input="b" src_node_id="2865" src_node_output="value" />
	<Node group="[]" id="1984" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1987" dst_node_input="input" src_node_id="1984" src_node_output="result" />
	<Edge dst_node_id="1991" dst_node_input="input" src_node_id="1984" src_node_output="result" />
	<Edge dst_node_id="1993" dst_node_input="input" src_node_id="1984" src_node_output="result" />
	<Node group="[]" id="1993" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1994" dst_node_input="i" src_node_id="1993" src_node_output="output" />
	<Edge dst_node_id="1995" dst_node_input="i" src_node_id="1993" src_node_output="output" />
	<Edge dst_node_id="1996" dst_node_input="i" src_node_id="1993" src_node_output="output" />
	<Edge dst_node_id="1997" dst_node_input="i" src_node_id="1993" src_node_output="output" />
	<Node group="[]" id="1994" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2015" dst_node_input="i" src_node_id="1994" src_node_output="o" />
	<Node group="[]" id="2015" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2017" dst_node_input="a" src_node_id="2015" src_node_output="o" />
	<Node group="[]" id="2864" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="2017" dst_node_input="b" src_node_id="2864" src_node_output="value" />
	<Node group="[]" id="2017" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2021" dst_node_input="a" src_node_id="2017" src_node_output="result" />
	<Node group="[]" id="1996" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2053" dst_node_input="input" src_node_id="1996" src_node_output="o" />
	<Node group="[]" id="2053" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2054" dst_node_input="input" src_node_id="2053" src_node_output="output" />
	<Node group="[]" id="2054" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2055" dst_node_input="addr" src_node_id="2054" src_node_output="output" />
	<Node group="[]" id="2055" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="2005" dst_node_input="a" src_node_id="2055" src_node_output="dout" />
	<Edge dst_node_id="2006" dst_node_input="b" src_node_id="2055" src_node_output="dout" />
	<Node group="[]" id="1995" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2050" dst_node_input="input" src_node_id="1995" src_node_output="o" />
	<Node group="[]" id="2050" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2051" dst_node_input="input" src_node_id="2050" src_node_output="output" />
	<Node group="[]" id="2051" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2052" dst_node_input="addr" src_node_id="2051" src_node_output="output" />
	<Node group="[]" id="2052" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="2001" dst_node_input="a" src_node_id="2052" src_node_output="dout" />
	<Edge dst_node_id="2002" dst_node_input="b" src_node_id="2052" src_node_output="dout" />
	<Node group="[]" id="1998" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="1999" dst_node_input="a" src_node_id="1998" src_node_output="value" />
	<Node group="[]" id="1997" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1999" dst_node_input="b" src_node_id="1997" src_node_output="o" />
	<Node group="[]" id="1999" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2000" dst_node_input="i" src_node_id="1999" src_node_output="result" />
	<Node group="[]" id="2000" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2001" dst_node_input="b" src_node_id="2000" src_node_output="o" />
	<Edge dst_node_id="2002" dst_node_input="a" src_node_id="2000" src_node_output="o" />
	<Node group="[]" id="2001" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2003" dst_node_input="a" src_node_id="2001" src_node_output="result" />
	<Node group="[]" id="2002" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2003" dst_node_input="b" src_node_id="2002" src_node_output="result" />
	<Node group="[]" id="2003" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2004" dst_node_input="i" src_node_id="2003" src_node_output="result" />
	<Node group="[]" id="2004" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2005" dst_node_input="b" src_node_id="2004" src_node_output="o" />
	<Edge dst_node_id="2006" dst_node_input="a" src_node_id="2004" src_node_output="o" />
	<Node group="[]" id="2005" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2007" dst_node_input="a" src_node_id="2005" src_node_output="result" />
	<Node group="[]" id="2006" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2007" dst_node_input="b" src_node_id="2006" src_node_output="result" />
	<Node group="[]" id="2007" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2008" dst_node_input="i" src_node_id="2007" src_node_output="result" />
	<Node group="[]" id="2008" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2009" dst_node_input="i" src_node_id="2008" src_node_output="o" />
	<Node group="[]" id="2009" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2011" dst_node_input="a" src_node_id="2009" src_node_output="o" />
	<Edge dst_node_id="2013" dst_node_input="option0" src_node_id="2009" src_node_output="o" />
	<Node group="[]" id="2863" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2011" dst_node_input="b" src_node_id="2863" src_node_output="value" />
	<Node group="[]" id="2011" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2013" dst_node_input="sel" src_node_id="2011" src_node_output="result" />
	<Edge dst_node_id="2020" dst_node_input="sel" src_node_id="2011" src_node_output="result" />
	<Node group="[]" id="2019" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2020" dst_node_input="option0" src_node_id="2019" src_node_output="value" />
	<Node group="[]" id="2018" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2020" dst_node_input="option1" src_node_id="2018" src_node_output="value" />
	<Node group="[]" id="2020" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2021" dst_node_input="b" src_node_id="2020" src_node_output="result" />
	<Node group="[]" id="2021" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2023" dst_node_input="a" src_node_id="2021" src_node_output="result" />
	<Edge dst_node_id="2028" dst_node_input="a" src_node_id="2021" src_node_output="result" />
	<Edge dst_node_id="2032" dst_node_input="i" src_node_id="2021" src_node_output="result" />
	<Node group="[]" id="2862" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2023" dst_node_input="b" src_node_id="2862" src_node_output="value" />
	<Node group="[]" id="2023" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2025" dst_node_input="a" src_node_id="2023" src_node_output="result" />
	<Node group="[]" id="2861" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1986" dst_node_input="b" src_node_id="2861" src_node_output="value" />
	<Node group="[]" id="1986" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1988" dst_node_input="a" src_node_id="1986" src_node_output="result" />
	<Node group="[]" id="1987" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1988" dst_node_input="b" src_node_id="1987" src_node_output="output" />
	<Node group="[]" id="1988" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2024" dst_node_input="a" src_node_id="1988" src_node_output="result" />
	<Edge dst_node_id="2031" dst_node_input="b" src_node_id="1988" src_node_output="result" />
	<Node group="[]" id="2024" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2025" dst_node_input="b" src_node_id="2024" src_node_output="result" />
	<Node group="[]" id="2025" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2026" dst_node_input="a" src_node_id="2025" src_node_output="result" />
	<Node group="[]" id="2860" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1990" dst_node_input="b" src_node_id="2860" src_node_output="value" />
	<Node group="[]" id="1990" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1992" dst_node_input="a" src_node_id="1990" src_node_output="result" />
	<Node group="[]" id="1991" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1992" dst_node_input="b" src_node_id="1991" src_node_output="output" />
	<Node group="[]" id="1992" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2026" dst_node_input="b" src_node_id="1992" src_node_output="result" />
	<Edge dst_node_id="2029" dst_node_input="a" src_node_id="1992" src_node_output="result" />
	<Node group="[]" id="2026" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2040" dst_node_input="in0" src_node_id="2026" src_node_output="result" />
	<Node group="[]" id="2859" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2028" dst_node_input="b" src_node_id="2859" src_node_output="value" />
	<Node group="[]" id="2028" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2030" dst_node_input="a" src_node_id="2028" src_node_output="result" />
	<Node group="[]" id="2029" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2030" dst_node_input="b" src_node_id="2029" src_node_output="result" />
	<Node group="[]" id="2030" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2031" dst_node_input="a" src_node_id="2030" src_node_output="result" />
	<Node group="[]" id="2031" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2040" dst_node_input="in1" src_node_id="2031" src_node_output="result" />
	<Node group="[]" id="2040" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2048" dst_node_input="sel" src_node_id="2040" src_node_output="result" />
	<Node group="[]" id="2619" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="2036" dst_node_input="in0" src_node_id="2619" src_node_output="value" />
	<Node group="[]" id="2032" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2035" dst_node_input="input" src_node_id="2032" src_node_output="o" />
	<Node group="[]" id="2035" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2036" dst_node_input="in1" src_node_id="2035" src_node_output="output" />
	<Node group="[]" id="2036" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2038" dst_node_input="in0" src_node_id="2036" src_node_output="result" />
	<Node group="[]" id="2012" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2013" dst_node_input="option1" src_node_id="2012" src_node_output="value" />
	<Node group="[]" id="2013" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2014" dst_node_input="i" src_node_id="2013" src_node_output="result" />
	<Node group="[]" id="2014" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2037" dst_node_input="input" src_node_id="2014" src_node_output="o" />
	<Node group="[]" id="2037" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2038" dst_node_input="in1" src_node_id="2037" src_node_output="output" />
	<Node group="[]" id="2038" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2039" dst_node_input="input" src_node_id="2038" src_node_output="result" />
	<Node group="[]" id="2039" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2048" dst_node_input="option0" src_node_id="2039" src_node_output="output" />
	<Node group="[]" id="2041" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2043" dst_node_input="in0" src_node_id="2041" src_node_output="value" />
	<Node group="[]" id="2042" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2043" dst_node_input="in1" src_node_id="2042" src_node_output="value" />
	<Node group="[]" id="2043" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2045" dst_node_input="in0" src_node_id="2043" src_node_output="result" />
	<Node group="[]" id="2044" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2045" dst_node_input="in1" src_node_id="2044" src_node_output="value" />
	<Node group="[]" id="2045" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2046" dst_node_input="input" src_node_id="2045" src_node_output="result" />
	<Node group="[]" id="2046" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2048" dst_node_input="option1" src_node_id="2046" src_node_output="output" />
	<Edge dst_node_id="2048" dst_node_input="option3" src_node_id="2046" src_node_output="output" />
	<Node group="[]" id="2047" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2048" dst_node_input="option2" src_node_id="2047" src_node_output="value" />
	<Node group="[]" id="2048" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2056" dst_node_input="b" src_node_id="2048" src_node_output="result" />
	<Node group="[]" id="2056" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2184" dst_node_input="a" src_node_id="2056" src_node_output="result" />
	<Node group="[]" id="1767" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:56)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1769" dst_node_input="b" src_node_id="1767" src_node_output="result" />
	<Node group="[]" id="1769" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:56)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1770" dst_node_input="b" src_node_id="1769" src_node_output="result" />
	<Node group="[]" id="1770" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:56)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2078" dst_node_input="a" src_node_id="1770" src_node_output="result" />
	<Edge dst_node_id="2086" dst_node_input="a" src_node_id="1770" src_node_output="result" />
	<Edge dst_node_id="2180" dst_node_input="a" src_node_id="1770" src_node_output="result" />
	<Edge dst_node_id="2642" dst_node_input="floatIn" src_node_id="1770" src_node_output="result" />
	<Node group="[]" id="2858" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2180" dst_node_input="b" src_node_id="2858" src_node_output="value" />
	<Node group="[]" id="2180" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2183" dst_node_input="sel" src_node_id="2180" src_node_output="result" />
	<Node group="[]" id="2857" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2178" dst_node_input="a" src_node_id="2857" src_node_output="value" />
	<Node group="[]" id="2063" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ecc422a; 0.3989422917366028</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:21)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110110011000100001000101010</Value>
		<HexValue>0x3ecc422a</HexValue>
		<NumericValue>0.3989422917366028</NumericValue>
	</Node>
	<Edge dst_node_id="2166" dst_node_input="a" src_node_id="2063" src_node_output="value" />
	<Node group="[]" id="2086" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2089" dst_node_input="a" src_node_id="2086" src_node_output="result" />
	<Node group="[]" id="2642" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2089" dst_node_input="b" src_node_id="2642" src_node_output="floatOut" />
	<Node group="[]" id="2089" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2091" dst_node_input="input" src_node_id="2089" src_node_output="result" />
	<Edge dst_node_id="2096" dst_node_input="a" src_node_id="2089" src_node_output="result" />
	<Edge dst_node_id="2100" dst_node_input="a" src_node_id="2089" src_node_output="result" />
	<Node group="[]" id="2090" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2091" dst_node_input="doubt" src_node_id="2090" src_node_output="value" />
	<Node group="[]" id="2091" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2092" dst_node_input="i" src_node_id="2091" src_node_output="output" />
	<Node group="[]" id="2092" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2094" dst_node_input="a" src_node_id="2092" src_node_output="o" />
	<Node group="[]" id="2856" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="2094" dst_node_input="b" src_node_id="2856" src_node_output="value" />
	<Node group="[]" id="2094" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2097" dst_node_input="input" src_node_id="2094" src_node_output="result" />
	<Edge dst_node_id="2101" dst_node_input="input" src_node_id="2094" src_node_output="result" />
	<Edge dst_node_id="2103" dst_node_input="input" src_node_id="2094" src_node_output="result" />
	<Node group="[]" id="2103" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2104" dst_node_input="i" src_node_id="2103" src_node_output="output" />
	<Edge dst_node_id="2105" dst_node_input="i" src_node_id="2103" src_node_output="output" />
	<Edge dst_node_id="2106" dst_node_input="i" src_node_id="2103" src_node_output="output" />
	<Edge dst_node_id="2107" dst_node_input="i" src_node_id="2103" src_node_output="output" />
	<Node group="[]" id="2104" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2125" dst_node_input="i" src_node_id="2104" src_node_output="o" />
	<Node group="[]" id="2125" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2127" dst_node_input="a" src_node_id="2125" src_node_output="o" />
	<Node group="[]" id="2855" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="2127" dst_node_input="b" src_node_id="2855" src_node_output="value" />
	<Node group="[]" id="2127" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2131" dst_node_input="a" src_node_id="2127" src_node_output="result" />
	<Node group="[]" id="2106" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2163" dst_node_input="input" src_node_id="2106" src_node_output="o" />
	<Node group="[]" id="2163" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2164" dst_node_input="input" src_node_id="2163" src_node_output="output" />
	<Node group="[]" id="2164" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2165" dst_node_input="addr" src_node_id="2164" src_node_output="output" />
	<Node group="[]" id="2165" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="2115" dst_node_input="a" src_node_id="2165" src_node_output="dout" />
	<Edge dst_node_id="2116" dst_node_input="b" src_node_id="2165" src_node_output="dout" />
	<Node group="[]" id="2105" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2160" dst_node_input="input" src_node_id="2105" src_node_output="o" />
	<Node group="[]" id="2160" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2161" dst_node_input="input" src_node_id="2160" src_node_output="output" />
	<Node group="[]" id="2161" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2162" dst_node_input="addr" src_node_id="2161" src_node_output="output" />
	<Node group="[]" id="2162" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="2111" dst_node_input="a" src_node_id="2162" src_node_output="dout" />
	<Edge dst_node_id="2112" dst_node_input="b" src_node_id="2162" src_node_output="dout" />
	<Node group="[]" id="2108" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="2109" dst_node_input="a" src_node_id="2108" src_node_output="value" />
	<Node group="[]" id="2107" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2109" dst_node_input="b" src_node_id="2107" src_node_output="o" />
	<Node group="[]" id="2109" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2110" dst_node_input="i" src_node_id="2109" src_node_output="result" />
	<Node group="[]" id="2110" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2111" dst_node_input="b" src_node_id="2110" src_node_output="o" />
	<Edge dst_node_id="2112" dst_node_input="a" src_node_id="2110" src_node_output="o" />
	<Node group="[]" id="2111" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2113" dst_node_input="a" src_node_id="2111" src_node_output="result" />
	<Node group="[]" id="2112" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2113" dst_node_input="b" src_node_id="2112" src_node_output="result" />
	<Node group="[]" id="2113" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2114" dst_node_input="i" src_node_id="2113" src_node_output="result" />
	<Node group="[]" id="2114" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2115" dst_node_input="b" src_node_id="2114" src_node_output="o" />
	<Edge dst_node_id="2116" dst_node_input="a" src_node_id="2114" src_node_output="o" />
	<Node group="[]" id="2115" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2117" dst_node_input="a" src_node_id="2115" src_node_output="result" />
	<Node group="[]" id="2116" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2117" dst_node_input="b" src_node_id="2116" src_node_output="result" />
	<Node group="[]" id="2117" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2118" dst_node_input="i" src_node_id="2117" src_node_output="result" />
	<Node group="[]" id="2118" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2119" dst_node_input="i" src_node_id="2118" src_node_output="o" />
	<Node group="[]" id="2119" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2121" dst_node_input="a" src_node_id="2119" src_node_output="o" />
	<Edge dst_node_id="2123" dst_node_input="option0" src_node_id="2119" src_node_output="o" />
	<Node group="[]" id="2854" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2121" dst_node_input="b" src_node_id="2854" src_node_output="value" />
	<Node group="[]" id="2121" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2123" dst_node_input="sel" src_node_id="2121" src_node_output="result" />
	<Edge dst_node_id="2130" dst_node_input="sel" src_node_id="2121" src_node_output="result" />
	<Node group="[]" id="2129" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2130" dst_node_input="option0" src_node_id="2129" src_node_output="value" />
	<Node group="[]" id="2128" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2130" dst_node_input="option1" src_node_id="2128" src_node_output="value" />
	<Node group="[]" id="2130" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2131" dst_node_input="b" src_node_id="2130" src_node_output="result" />
	<Node group="[]" id="2131" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2133" dst_node_input="a" src_node_id="2131" src_node_output="result" />
	<Edge dst_node_id="2138" dst_node_input="a" src_node_id="2131" src_node_output="result" />
	<Edge dst_node_id="2142" dst_node_input="i" src_node_id="2131" src_node_output="result" />
	<Node group="[]" id="2853" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2133" dst_node_input="b" src_node_id="2853" src_node_output="value" />
	<Node group="[]" id="2133" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2135" dst_node_input="a" src_node_id="2133" src_node_output="result" />
	<Node group="[]" id="2852" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2096" dst_node_input="b" src_node_id="2852" src_node_output="value" />
	<Node group="[]" id="2096" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2098" dst_node_input="a" src_node_id="2096" src_node_output="result" />
	<Node group="[]" id="2097" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2098" dst_node_input="b" src_node_id="2097" src_node_output="output" />
	<Node group="[]" id="2098" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2134" dst_node_input="a" src_node_id="2098" src_node_output="result" />
	<Edge dst_node_id="2141" dst_node_input="b" src_node_id="2098" src_node_output="result" />
	<Node group="[]" id="2134" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2135" dst_node_input="b" src_node_id="2134" src_node_output="result" />
	<Node group="[]" id="2135" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2136" dst_node_input="a" src_node_id="2135" src_node_output="result" />
	<Node group="[]" id="2851" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2100" dst_node_input="b" src_node_id="2851" src_node_output="value" />
	<Node group="[]" id="2100" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2102" dst_node_input="a" src_node_id="2100" src_node_output="result" />
	<Node group="[]" id="2101" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2102" dst_node_input="b" src_node_id="2101" src_node_output="output" />
	<Node group="[]" id="2102" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2136" dst_node_input="b" src_node_id="2102" src_node_output="result" />
	<Edge dst_node_id="2139" dst_node_input="a" src_node_id="2102" src_node_output="result" />
	<Node group="[]" id="2136" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2150" dst_node_input="in0" src_node_id="2136" src_node_output="result" />
	<Node group="[]" id="2850" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2138" dst_node_input="b" src_node_id="2850" src_node_output="value" />
	<Node group="[]" id="2138" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2140" dst_node_input="a" src_node_id="2138" src_node_output="result" />
	<Node group="[]" id="2139" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2140" dst_node_input="b" src_node_id="2139" src_node_output="result" />
	<Node group="[]" id="2140" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2141" dst_node_input="a" src_node_id="2140" src_node_output="result" />
	<Node group="[]" id="2141" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2150" dst_node_input="in1" src_node_id="2141" src_node_output="result" />
	<Node group="[]" id="2150" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2158" dst_node_input="sel" src_node_id="2150" src_node_output="result" />
	<Node group="[]" id="2620" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="2146" dst_node_input="in0" src_node_id="2620" src_node_output="value" />
	<Node group="[]" id="2142" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2145" dst_node_input="input" src_node_id="2142" src_node_output="o" />
	<Node group="[]" id="2145" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2146" dst_node_input="in1" src_node_id="2145" src_node_output="output" />
	<Node group="[]" id="2146" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2148" dst_node_input="in0" src_node_id="2146" src_node_output="result" />
	<Node group="[]" id="2122" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2123" dst_node_input="option1" src_node_id="2122" src_node_output="value" />
	<Node group="[]" id="2123" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2124" dst_node_input="i" src_node_id="2123" src_node_output="result" />
	<Node group="[]" id="2124" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2147" dst_node_input="input" src_node_id="2124" src_node_output="o" />
	<Node group="[]" id="2147" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2148" dst_node_input="in1" src_node_id="2147" src_node_output="output" />
	<Node group="[]" id="2148" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2149" dst_node_input="input" src_node_id="2148" src_node_output="result" />
	<Node group="[]" id="2149" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2158" dst_node_input="option0" src_node_id="2149" src_node_output="output" />
	<Node group="[]" id="2151" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2153" dst_node_input="in0" src_node_id="2151" src_node_output="value" />
	<Node group="[]" id="2152" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2153" dst_node_input="in1" src_node_id="2152" src_node_output="value" />
	<Node group="[]" id="2153" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2155" dst_node_input="in0" src_node_id="2153" src_node_output="result" />
	<Node group="[]" id="2154" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2155" dst_node_input="in1" src_node_id="2154" src_node_output="value" />
	<Node group="[]" id="2155" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2156" dst_node_input="input" src_node_id="2155" src_node_output="result" />
	<Node group="[]" id="2156" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2158" dst_node_input="option1" src_node_id="2156" src_node_output="output" />
	<Edge dst_node_id="2158" dst_node_input="option3" src_node_id="2156" src_node_output="output" />
	<Node group="[]" id="2157" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2158" dst_node_input="option2" src_node_id="2157" src_node_output="value" />
	<Node group="[]" id="2158" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2166" dst_node_input="b" src_node_id="2158" src_node_output="result" />
	<Node group="[]" id="2166" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2176" dst_node_input="a" src_node_id="2166" src_node_output="result" />
	<Node group="[]" id="2061" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3faa466f; 1.3302744626998901</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:19)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111101010100100011001101111</Value>
		<HexValue>0x3faa466f</HexValue>
		<NumericValue>1.3302744626998901</NumericValue>
	</Node>
	<Edge dst_node_id="2167" dst_node_input="a" src_node_id="2061" src_node_output="value" />
	<Node group="[]" id="2849" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2085" dst_node_input="a" src_node_id="2849" src_node_output="value" />
	<Node group="[]" id="2848" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2083" dst_node_input="a" src_node_id="2848" src_node_output="value" />
	<Node group="[]" id="2077" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:336)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="2079" dst_node_input="in0" src_node_id="2077" src_node_output="value" />
	<Node group="[]" id="2078" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:337)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge dst_node_id="2079" dst_node_input="in1" src_node_id="2078" src_node_output="result" />
	<Node group="[]" id="2079" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:338)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2080" dst_node_input="input" src_node_id="2079" src_node_output="result" />
	<Node group="[]" id="2080" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:339)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2081" dst_node_input="a" src_node_id="2080" src_node_output="output" />
	<Node group="[]" id="2062" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3e6d3389; 0.23164190351963043</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:20)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110011011010011001110001001</Value>
		<HexValue>0x3e6d3389</HexValue>
		<NumericValue>0.23164190351963043</NumericValue>
	</Node>
	<Edge dst_node_id="2081" dst_node_input="b" src_node_id="2062" src_node_output="value" />
	<Node group="[]" id="2081" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2083" dst_node_input="b" src_node_id="2081" src_node_output="result" />
	<Node group="[]" id="2083" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2085" dst_node_input="b" src_node_id="2083" src_node_output="result" />
	<Node group="[]" id="2085" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2167" dst_node_input="b" src_node_id="2085" src_node_output="result" />
	<Edge dst_node_id="2169" dst_node_input="b" src_node_id="2085" src_node_output="result" />
	<Edge dst_node_id="2171" dst_node_input="b" src_node_id="2085" src_node_output="result" />
	<Edge dst_node_id="2173" dst_node_input="b" src_node_id="2085" src_node_output="result" />
	<Edge dst_node_id="2175" dst_node_input="b" src_node_id="2085" src_node_output="result" />
	<Node group="[]" id="2167" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2168" dst_node_input="a" src_node_id="2167" src_node_output="result" />
	<Node group="[]" id="2060" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbfe91eea; -1.8212559223175049</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:18)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111111111010010001111011101010</Value>
		<HexValue>0xbfe91eea</HexValue>
		<NumericValue>-1.8212559223175049</NumericValue>
	</Node>
	<Edge dst_node_id="2168" dst_node_input="b" src_node_id="2060" src_node_output="value" />
	<Node group="[]" id="2168" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2169" dst_node_input="a" src_node_id="2168" src_node_output="result" />
	<Node group="[]" id="2169" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2170" dst_node_input="a" src_node_id="2169" src_node_output="result" />
	<Node group="[]" id="2059" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3fe40778; 1.781477928161621</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:17)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111111001000000011101111000</Value>
		<HexValue>0x3fe40778</HexValue>
		<NumericValue>1.781477928161621</NumericValue>
	</Node>
	<Edge dst_node_id="2170" dst_node_input="b" src_node_id="2059" src_node_output="value" />
	<Node group="[]" id="2170" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2171" dst_node_input="a" src_node_id="2170" src_node_output="result" />
	<Node group="[]" id="2171" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2172" dst_node_input="a" src_node_id="2171" src_node_output="result" />
	<Node group="[]" id="2058" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbeb68f87; -0.3565637767314911</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:16)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111110101101101000111110000111</Value>
		<HexValue>0xbeb68f87</HexValue>
		<NumericValue>-0.3565637767314911</NumericValue>
	</Node>
	<Edge dst_node_id="2172" dst_node_input="b" src_node_id="2058" src_node_output="value" />
	<Node group="[]" id="2172" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2173" dst_node_input="a" src_node_id="2172" src_node_output="result" />
	<Node group="[]" id="2173" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2174" dst_node_input="a" src_node_id="2173" src_node_output="result" />
	<Node group="[]" id="2057" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ea385fa; 0.3193815350532532</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:15)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110101000111000010111111010</Value>
		<HexValue>0x3ea385fa</HexValue>
		<NumericValue>0.3193815350532532</NumericValue>
	</Node>
	<Edge dst_node_id="2174" dst_node_input="b" src_node_id="2057" src_node_output="value" />
	<Node group="[]" id="2174" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2175" dst_node_input="a" src_node_id="2174" src_node_output="result" />
	<Node group="[]" id="2175" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2176" dst_node_input="b" src_node_id="2175" src_node_output="result" />
	<Node group="[]" id="2176" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2178" dst_node_input="b" src_node_id="2176" src_node_output="result" />
	<Node group="[]" id="2178" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2182" dst_node_input="b" src_node_id="2178" src_node_output="result" />
	<Edge dst_node_id="2183" dst_node_input="option0" src_node_id="2178" src_node_output="result" />
	<Node group="[]" id="2847" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2182" dst_node_input="a" src_node_id="2847" src_node_output="value" />
	<Node group="[]" id="2182" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2183" dst_node_input="option1" src_node_id="2182" src_node_output="result" />
	<Node group="[]" id="2183" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2184" dst_node_input="b" src_node_id="2183" src_node_output="result" />
	<Node group="[]" id="2184" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2185" dst_node_input="b" src_node_id="2184" src_node_output="result" />
	<Node group="[]" id="2185" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:122)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2597" dst_node_input="a" src_node_id="2185" src_node_output="result" />
	<Edge dst_node_id="2598" dst_node_input="b" src_node_id="2185" src_node_output="result" />
	<Edge dst_node_id="2599" dst_node_input="option0" src_node_id="2185" src_node_output="result" />
	<Node group="[]" id="2846" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2460" dst_node_input="a" src_node_id="2846" src_node_output="value" />
	<Node group="[]" id="2253" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2254" dst_node_input="a" src_node_id="2253" src_node_output="result" />
	<Node group="[]" id="2254" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2256" dst_node_input="input" src_node_id="2254" src_node_output="result" />
	<Edge dst_node_id="2261" dst_node_input="a" src_node_id="2254" src_node_output="result" />
	<Edge dst_node_id="2265" dst_node_input="a" src_node_id="2254" src_node_output="result" />
	<Node group="[]" id="2255" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2256" dst_node_input="doubt" src_node_id="2255" src_node_output="value" />
	<Node group="[]" id="2256" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2257" dst_node_input="i" src_node_id="2256" src_node_output="output" />
	<Node group="[]" id="2257" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2259" dst_node_input="a" src_node_id="2257" src_node_output="o" />
	<Node group="[]" id="2845" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="2259" dst_node_input="b" src_node_id="2845" src_node_output="value" />
	<Node group="[]" id="2259" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2262" dst_node_input="input" src_node_id="2259" src_node_output="result" />
	<Edge dst_node_id="2266" dst_node_input="input" src_node_id="2259" src_node_output="result" />
	<Edge dst_node_id="2268" dst_node_input="input" src_node_id="2259" src_node_output="result" />
	<Node group="[]" id="2268" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2269" dst_node_input="i" src_node_id="2268" src_node_output="output" />
	<Edge dst_node_id="2270" dst_node_input="i" src_node_id="2268" src_node_output="output" />
	<Edge dst_node_id="2271" dst_node_input="i" src_node_id="2268" src_node_output="output" />
	<Edge dst_node_id="2272" dst_node_input="i" src_node_id="2268" src_node_output="output" />
	<Node group="[]" id="2269" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2290" dst_node_input="i" src_node_id="2269" src_node_output="o" />
	<Node group="[]" id="2290" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2292" dst_node_input="a" src_node_id="2290" src_node_output="o" />
	<Node group="[]" id="2844" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="2292" dst_node_input="b" src_node_id="2844" src_node_output="value" />
	<Node group="[]" id="2292" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2296" dst_node_input="a" src_node_id="2292" src_node_output="result" />
	<Node group="[]" id="2271" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2328" dst_node_input="input" src_node_id="2271" src_node_output="o" />
	<Node group="[]" id="2328" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2329" dst_node_input="input" src_node_id="2328" src_node_output="output" />
	<Node group="[]" id="2329" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2330" dst_node_input="addr" src_node_id="2329" src_node_output="output" />
	<Node group="[]" id="2330" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="2280" dst_node_input="a" src_node_id="2330" src_node_output="dout" />
	<Edge dst_node_id="2281" dst_node_input="b" src_node_id="2330" src_node_output="dout" />
	<Node group="[]" id="2270" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2325" dst_node_input="input" src_node_id="2270" src_node_output="o" />
	<Node group="[]" id="2325" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2326" dst_node_input="input" src_node_id="2325" src_node_output="output" />
	<Node group="[]" id="2326" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2327" dst_node_input="addr" src_node_id="2326" src_node_output="output" />
	<Node group="[]" id="2327" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="2276" dst_node_input="a" src_node_id="2327" src_node_output="dout" />
	<Edge dst_node_id="2277" dst_node_input="b" src_node_id="2327" src_node_output="dout" />
	<Node group="[]" id="2273" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="2274" dst_node_input="a" src_node_id="2273" src_node_output="value" />
	<Node group="[]" id="2272" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2274" dst_node_input="b" src_node_id="2272" src_node_output="o" />
	<Node group="[]" id="2274" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2275" dst_node_input="i" src_node_id="2274" src_node_output="result" />
	<Node group="[]" id="2275" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2276" dst_node_input="b" src_node_id="2275" src_node_output="o" />
	<Edge dst_node_id="2277" dst_node_input="a" src_node_id="2275" src_node_output="o" />
	<Node group="[]" id="2276" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2278" dst_node_input="a" src_node_id="2276" src_node_output="result" />
	<Node group="[]" id="2277" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2278" dst_node_input="b" src_node_id="2277" src_node_output="result" />
	<Node group="[]" id="2278" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2279" dst_node_input="i" src_node_id="2278" src_node_output="result" />
	<Node group="[]" id="2279" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2280" dst_node_input="b" src_node_id="2279" src_node_output="o" />
	<Edge dst_node_id="2281" dst_node_input="a" src_node_id="2279" src_node_output="o" />
	<Node group="[]" id="2280" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2282" dst_node_input="a" src_node_id="2280" src_node_output="result" />
	<Node group="[]" id="2281" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2282" dst_node_input="b" src_node_id="2281" src_node_output="result" />
	<Node group="[]" id="2282" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2283" dst_node_input="i" src_node_id="2282" src_node_output="result" />
	<Node group="[]" id="2283" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2284" dst_node_input="i" src_node_id="2283" src_node_output="o" />
	<Node group="[]" id="2284" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2286" dst_node_input="a" src_node_id="2284" src_node_output="o" />
	<Edge dst_node_id="2288" dst_node_input="option0" src_node_id="2284" src_node_output="o" />
	<Node group="[]" id="2843" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2286" dst_node_input="b" src_node_id="2843" src_node_output="value" />
	<Node group="[]" id="2286" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2288" dst_node_input="sel" src_node_id="2286" src_node_output="result" />
	<Edge dst_node_id="2295" dst_node_input="sel" src_node_id="2286" src_node_output="result" />
	<Node group="[]" id="2294" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2295" dst_node_input="option0" src_node_id="2294" src_node_output="value" />
	<Node group="[]" id="2293" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2295" dst_node_input="option1" src_node_id="2293" src_node_output="value" />
	<Node group="[]" id="2295" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2296" dst_node_input="b" src_node_id="2295" src_node_output="result" />
	<Node group="[]" id="2296" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2298" dst_node_input="a" src_node_id="2296" src_node_output="result" />
	<Edge dst_node_id="2303" dst_node_input="a" src_node_id="2296" src_node_output="result" />
	<Edge dst_node_id="2307" dst_node_input="i" src_node_id="2296" src_node_output="result" />
	<Node group="[]" id="2842" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2298" dst_node_input="b" src_node_id="2842" src_node_output="value" />
	<Node group="[]" id="2298" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2300" dst_node_input="a" src_node_id="2298" src_node_output="result" />
	<Node group="[]" id="2841" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2261" dst_node_input="b" src_node_id="2841" src_node_output="value" />
	<Node group="[]" id="2261" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2263" dst_node_input="a" src_node_id="2261" src_node_output="result" />
	<Node group="[]" id="2262" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2263" dst_node_input="b" src_node_id="2262" src_node_output="output" />
	<Node group="[]" id="2263" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2299" dst_node_input="a" src_node_id="2263" src_node_output="result" />
	<Edge dst_node_id="2306" dst_node_input="b" src_node_id="2263" src_node_output="result" />
	<Node group="[]" id="2299" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2300" dst_node_input="b" src_node_id="2299" src_node_output="result" />
	<Node group="[]" id="2300" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2301" dst_node_input="a" src_node_id="2300" src_node_output="result" />
	<Node group="[]" id="2840" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2265" dst_node_input="b" src_node_id="2840" src_node_output="value" />
	<Node group="[]" id="2265" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2267" dst_node_input="a" src_node_id="2265" src_node_output="result" />
	<Node group="[]" id="2266" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2267" dst_node_input="b" src_node_id="2266" src_node_output="output" />
	<Node group="[]" id="2267" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2301" dst_node_input="b" src_node_id="2267" src_node_output="result" />
	<Edge dst_node_id="2304" dst_node_input="a" src_node_id="2267" src_node_output="result" />
	<Node group="[]" id="2301" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2315" dst_node_input="in0" src_node_id="2301" src_node_output="result" />
	<Node group="[]" id="2839" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2303" dst_node_input="b" src_node_id="2839" src_node_output="value" />
	<Node group="[]" id="2303" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2305" dst_node_input="a" src_node_id="2303" src_node_output="result" />
	<Node group="[]" id="2304" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2305" dst_node_input="b" src_node_id="2304" src_node_output="result" />
	<Node group="[]" id="2305" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2306" dst_node_input="a" src_node_id="2305" src_node_output="result" />
	<Node group="[]" id="2306" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2315" dst_node_input="in1" src_node_id="2306" src_node_output="result" />
	<Node group="[]" id="2315" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2323" dst_node_input="sel" src_node_id="2315" src_node_output="result" />
	<Node group="[]" id="2621" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="2311" dst_node_input="in0" src_node_id="2621" src_node_output="value" />
	<Node group="[]" id="2307" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2310" dst_node_input="input" src_node_id="2307" src_node_output="o" />
	<Node group="[]" id="2310" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2311" dst_node_input="in1" src_node_id="2310" src_node_output="output" />
	<Node group="[]" id="2311" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2313" dst_node_input="in0" src_node_id="2311" src_node_output="result" />
	<Node group="[]" id="2287" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2288" dst_node_input="option1" src_node_id="2287" src_node_output="value" />
	<Node group="[]" id="2288" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2289" dst_node_input="i" src_node_id="2288" src_node_output="result" />
	<Node group="[]" id="2289" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2312" dst_node_input="input" src_node_id="2289" src_node_output="o" />
	<Node group="[]" id="2312" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2313" dst_node_input="in1" src_node_id="2312" src_node_output="output" />
	<Node group="[]" id="2313" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2314" dst_node_input="input" src_node_id="2313" src_node_output="result" />
	<Node group="[]" id="2314" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2323" dst_node_input="option0" src_node_id="2314" src_node_output="output" />
	<Node group="[]" id="2316" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2318" dst_node_input="in0" src_node_id="2316" src_node_output="value" />
	<Node group="[]" id="2317" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2318" dst_node_input="in1" src_node_id="2317" src_node_output="value" />
	<Node group="[]" id="2318" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2320" dst_node_input="in0" src_node_id="2318" src_node_output="result" />
	<Node group="[]" id="2319" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2320" dst_node_input="in1" src_node_id="2319" src_node_output="value" />
	<Node group="[]" id="2320" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2321" dst_node_input="input" src_node_id="2320" src_node_output="result" />
	<Node group="[]" id="2321" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2323" dst_node_input="option1" src_node_id="2321" src_node_output="output" />
	<Edge dst_node_id="2323" dst_node_input="option3" src_node_id="2321" src_node_output="output" />
	<Node group="[]" id="2322" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2323" dst_node_input="option2" src_node_id="2322" src_node_output="value" />
	<Node group="[]" id="2323" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2458" dst_node_input="a" src_node_id="2323" src_node_output="result" />
	<Node group="[]" id="2208" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="2209" dst_node_input="in0" src_node_id="2208" src_node_output="value" />
	<Node group="[]" id="2838" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:82)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="391" dst_node_input="a" src_node_id="2838" src_node_output="value" />
	<Node group="[]" id="2837" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:82)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="389" dst_node_input="a" src_node_id="2837" src_node_output="value" />
	<Node group="[]" id="2836" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2638" dst_node_input="a" src_node_id="2836" src_node_output="value" />
	<Node group="[]" id="2835" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x40000000; 2.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:77)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>01000000000000000000000000000000</Value>
		<HexValue>0x40000000</HexValue>
		<NumericValue>2.0</NumericValue>
	</Node>
	<Edge dst_node_id="11" dst_node_input="a" src_node_id="2835" src_node_output="value" />
	<Node group="[]" id="7" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:75)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="11" dst_node_input="b" src_node_id="7" src_node_output="result" />
	<Edge dst_node_id="14" dst_node_input="b" src_node_id="7" src_node_output="result" />
	<Edge dst_node_id="2654" dst_node_input="floatIn" src_node_id="7" src_node_output="result" />
	<Edge dst_node_id="2658" dst_node_input="floatIn" src_node_id="7" src_node_output="result" />
	<Node group="[]" id="11" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:77)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="99" dst_node_input="a" src_node_id="11" src_node_output="result" />
	<Edge dst_node_id="246" dst_node_input="a" src_node_id="11" src_node_output="result" />
	<Edge dst_node_id="2638" dst_node_input="b" src_node_id="11" src_node_output="result" />
	<Edge dst_node_id="2639" dst_node_input="b" src_node_id="11" src_node_output="result" />
	<Node group="[]" id="2638" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="385" dst_node_input="a" src_node_id="2638" src_node_output="result" />
	<Node group="[]" id="263" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="264" dst_node_input="in0" src_node_id="263" src_node_output="value" />
	<Node group="[]" id="2834" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="246" dst_node_input="b" src_node_id="2834" src_node_output="value" />
	<Node group="[]" id="246" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="247" dst_node_input="a" src_node_id="246" src_node_output="result" />
	<Edge dst_node_id="262" dst_node_input="a" src_node_id="246" src_node_output="result" />
	<Node group="[]" id="262" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge dst_node_id="264" dst_node_input="in1" src_node_id="262" src_node_output="result" />
	<Node group="[]" id="264" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="265" dst_node_input="input" src_node_id="264" src_node_output="result" />
	<Node group="[]" id="265" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(9)" />
		<Output latency="0" name="output" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:9, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="267" dst_node_input="a" src_node_id="265" src_node_output="output" />
	<Node group="[]" id="2833" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="267" dst_node_input="b" src_node_id="2833" src_node_output="value" />
	<Node group="[]" id="267" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="271" dst_node_input="a" src_node_id="267" src_node_output="result" />
	<Node group="[]" id="247" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge dst_node_id="248" dst_node_input="input" src_node_id="247" src_node_output="result" />
	<Node group="[]" id="248" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(23)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:23, -23, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="250" dst_node_input="input" src_node_id="248" src_node_output="output" />
	<Node group="[]" id="249" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="250" dst_node_input="doubt" src_node_id="249" src_node_output="value" />
	<Node group="[]" id="250" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="i" src_node_id="250" src_node_output="output" />
	<Node group="[]" id="251" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="252" dst_node_input="input" src_node_id="251" src_node_output="o" />
	<Edge dst_node_id="254" dst_node_input="a" src_node_id="251" src_node_output="o" />
	<Edge dst_node_id="256" dst_node_input="input" src_node_id="251" src_node_output="o" />
	<Node group="[]" id="252" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="255" dst_node_input="a" src_node_id="252" src_node_output="output" />
	<Node group="[]" id="2832" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="254" dst_node_input="b" src_node_id="2832" src_node_output="value" />
	<Node group="[]" id="254" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="255" dst_node_input="b" src_node_id="254" src_node_output="result" />
	<Node group="[]" id="255" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="257" dst_node_input="input" src_node_id="255" src_node_output="result" />
	<Node group="[]" id="257" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="260" dst_node_input="sel" src_node_id="257" src_node_output="output" />
	<Edge dst_node_id="270" dst_node_input="sel" src_node_id="257" src_node_output="output" />
	<Node group="[]" id="269" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="270" dst_node_input="option0" src_node_id="269" src_node_output="value" />
	<Node group="[]" id="268" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="270" dst_node_input="option1" src_node_id="268" src_node_output="value" />
	<Node group="[]" id="270" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="271" dst_node_input="b" src_node_id="270" src_node_output="result" />
	<Node group="[]" id="271" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="297" dst_node_input="a" src_node_id="271" src_node_output="result" />
	<Node group="[]" id="256" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="261" dst_node_input="a" src_node_id="256" src_node_output="output" />
	<Node group="[]" id="259" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x0000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0000000000000000000000000000</Value>
		<HexValue>0x0000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="260" dst_node_input="option0" src_node_id="259" src_node_output="value" />
	<Node group="[]" id="258" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="260" dst_node_input="option1" src_node_id="258" src_node_output="value" />
	<Node group="[]" id="260" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="261" dst_node_input="b" src_node_id="260" src_node_output="result" />
	<Node group="[]" id="261" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="274" dst_node_input="input" src_node_id="261" src_node_output="result" />
	<Node group="[]" id="274" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(28)" />
		<Text>&lt;{HWRawBits:28}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="275" dst_node_input="input" src_node_id="274" src_node_output="output" />
	<Node group="[]" id="275" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(28)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:28, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="276" dst_node_input="a" src_node_id="275" src_node_output="output" />
	<Edge dst_node_id="277" dst_node_input="a" src_node_id="275" src_node_output="output" />
	<Node group="[]" id="277" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[25:19]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>19</Base>
		<Width>7</Width>
	</Node>
	<Edge dst_node_id="278" dst_node_input="input" src_node_id="277" src_node_output="result" />
	<Node group="[]" id="278" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="281" dst_node_input="addr" src_node_id="278" src_node_output="output" />
	<Edge dst_node_id="282" dst_node_input="addr" src_node_id="278" src_node_output="output" />
	<Edge dst_node_id="283" dst_node_input="addr" src_node_id="278" src_node_output="output" />
	<Edge dst_node_id="284" dst_node_input="addr" src_node_id="278" src_node_output="output" />
	<Node group="[]" id="281" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x79ae1d8
0x76e20af
0x742bc04
0x718a6b1
0x6efd426
0x6c83865
0x6a1c7f5
0x67c77e1
0x6583dab
0x6350f4a
0x612e324
0x5f1b010
0x5d16d39
0x5b21234
0x59396ed
0x575f3a7
0x55920f4
0x53d17b7
0x521d11c
0x5074694
0x4ed71d8
0x4d44cd9
0x4bbd1cf
0x4a3fb23
0x48cc380
0x47625bc
0x4601ce5
0x44aa43a
0x435b726
0x4215145
0x40d6e58
0x3fa0a4a
0x3e7212e
0x3d4af3b
0x3c2b0cd
0x3b12262
0x3a00096
0x38f4826
0x37ef5ee
0x36f06e6
0x35f7820
0x35046c9
0x3417027
0x332f19b
0x324c89b
0x316f2b2
0x3096d83
0x2fc36c5
0x2ef4c40
0x2e2abd4
0x2d65370
0x2ca4116
0x2be72d4
0x2b2e6d3
0x2a79b3e
0x29c8e5b
0x291be78
0x28729f0
0x27ccf33
0x272acb4
0x268c0f8
0x25f0a91
0x2558819
0x24c3836
0x243199b
0x23a2b02
0x2316b32
0x228d8fb
0x2207333
0x21838be
0x2102884
0x2084179
0x2008297
0x1f8eadf
0x1f1795c
0x1ea2d1e
0x1e3053e
0x1dc00da
0x1d51f15
0x1ce5f1f
0x1c7c025
0x1c14161
0x1bae20e
0x1b4a171
0x1ae7ed1
0x1a8797c
0x1a290c1
0x19cc3f9
0x1971281
0x1917bb6
0x18bfefb
0x1869bc2
0x181516c
0x17c1f70
0x1770543
0x172025a
0x16d1634
0x168404f
0x163802c
0x15ed552
0x15a3f4f
0x155bdaa
0x1514ff3
0x14cf5bf
0x148ae9f
0x1447a2e
0x1405805
0x13c47c3
0x1384905
0x1345b6e
0x1307ea4
0x12cb24a
0x128f60b
0x1254994
0x121ac8e
0x11e1eab
0x11a9f9a
0x1172f10
0x113ccc0
0x1107864
0x10d31b1
0x109f863
0x106cc34
0x103ace4
0x1009a2f
0x0fd93d8
0x0fa99a1
0x0f7ab4d</MemoryData>
	</Node>
	<Edge dst_node_id="285" dst_node_input="a" src_node_id="281" src_node_output="dout" />
	<Node group="[]" id="276" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>[18:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>19</Width>
	</Node>
	<Edge dst_node_id="280" dst_node_input="input" src_node_id="276" src_node_output="result" />
	<Node group="[]" id="280" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(19)" />
		<Output latency="0" name="output" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:19, -19, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="285" dst_node_input="b" src_node_id="280" src_node_output="output" />
	<Edge dst_node_id="288" dst_node_input="b" src_node_id="280" src_node_output="output" />
	<Edge dst_node_id="291" dst_node_input="b" src_node_id="280" src_node_output="output" />
	<Node group="[]" id="285" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="286" dst_node_input="a" src_node_id="285" src_node_output="result" />
	<Node group="[]" id="282" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xa3abc67
0xa518cb6
0xa67d6c5
0xa7d9ea9
0xa92e850
0xaa7b782
0xabc0fe4
0xacff4f6
0xae36a1c
0xaf67294
0xb091184
0xb1b49f2
0xb2d1ec9
0xb3e92d9
0xb4fa8da
0xb60636b
0xb70c514
0xb80d047
0xb90875f
0xb9feca6
0xbaf024e
0xbbdca79
0xbcc4737
0xbda7a85
0xbe86650
0xbf60c76
0xc036ec3
0xc108ef7
0xc1d6ec3
0xc2a0fc8
0xc36739c
0xc429bc9
0xc4e89ca
0xc5a3f11
0xc65bd03
0xc7104fa
0xc7c1847
0xc86f830
0xc91a5f0
0xc9c22ba
0xca66fb7
0xcb08e09
0xcba7ec8
0xcc44303
0xccddbc3
0xcd74a09
0xce08ece
0xce9ab04
0xcf29f96
0xcfb6d69
0xd04155b
0xd0c9844
0xd14f6f7
0xd1d3240
0xd254ae5
0xd2d41a7
0xd351744
0xd3ccc71
0xd4461e1
0xd4bd841
0xd53303a
0xd5a6a70
0xd618783
0xd68880f
0xd6f6cac
0xd7635ed
0xd7ce463
0xd83789a
0xd89f31a
0xd905469
0xd969d09
0xd9ccd79
0xda2e634
0xda8e7b2
0xdaed269
0xdb4a6cc
0xdba654b
0xdc00e52
0xdc5a24c
0xdcb21a1
0xdd08cb7
0xdd5e3f0
0xddb27ac
0xde0584b
0xde57628
0xdea819d
0xdef7b03
0xdf462ae
0xdf938f4
0xdfdfe25
0xe02b292
0xe075689
0xe0bea56
0xe106e44
0xe14e29d
0xe1947a7
0xe1d9da9
0xe21e4e6
0xe261da2
0xe2a481d
0xe2e6498
0xe327351
0xe367485
0xe3a6870
0xe3e4f4d
0xe422954
0xe45f6be
0xe49b7c2
0xe4d6c95
0xe51156c
0xe54b27a
0xe5843f2
0xe5bca05
0xe5f44e4
0xe62b4bd
0xe6619bf
0xe697417
0xe6cc3f2
0xe70097c
0xe7344df
0xe767645
0xe799dd7
0xe7cbbbd
0xe7fd01e
0xe82db22
0xe85dced
0xe88d5a6
0xe8bc570</MemoryData>
	</Node>
	<Edge dst_node_id="286" dst_node_input="b" src_node_id="282" src_node_output="dout" />
	<Node group="[]" id="286" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="287" dst_node_input="i" src_node_id="286" src_node_output="result" />
	<Node group="[]" id="287" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -41, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="288" dst_node_input="a" src_node_id="287" src_node_output="o" />
	<Node group="[]" id="288" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="289" dst_node_input="a" src_node_id="288" src_node_output="result" />
	<Node group="[]" id="283" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x5c551d6
0x5b9de1a
0x5ae9779
0x5a37ce9
0x5988d6b
0x58dc807
0x5832bc9
0x578b7ca
0x56e6b25
0x56444fd
0x55a447d
0x55068d5
0x546b13a
0x53d1ce8
0x533ab20
0x52a5b29
0x5212c4e
0x5181de0
0x50f2f34
0x5065fa5
0x4fdae91
0x4f51b5b
0x4eca569
0x4e44c28
0x4dc0f06
0x4d3ed76
0x4cbe6ef
0x4c3faea
0x4bc28e6
0x4b47062
0x4acd0e3
0x4a549f0
0x49ddb13
0x49683da
0x48f43d4
0x4881a94
0x48107af
0x47a0abd
0x4732359
0x46c5120
0x46593b1
0x45eeaad
0x45855b8
0x451d478
0x44b6695
0x4450bb9
0x43ec390
0x4388dc9
0x4326a12
0x42c581d
0x426579e
0x420684b
0x41a89d8
0x414bc00
0x40efe7c
0x4095107
0x403b35f
0x3fe2541
0x3f8a66e
0x3f336a7
0x3edd5af
0x3e88348
0x3e33f39
0x3de0947
0x3d8e13b
0x3d3c6dc
0x3ceb9f6
0x3c9ba52
0x3c4c7bc
0x3bfe203
0x3bb08f3
0x3b63c5d
0x3b17c10
0x3acc7dd
0x3a81f96
0x3a3830e
0x39ef219
0x39a6c8c
0x395f23c
0x39182ff
0x38d1ead
0x388c51d
0x3847627
0x38031a7
0x37bf774
0x377c76b
0x373a167
0x36f8544
0x36b72df
0x3676a16
0x3636ac6
0x35f74ce
0x35b880e
0x357a466
0x353c9b7
0x34ff7e0
0x34c2ec5
0x3486e47
0x344b649
0x34106ae
0x33d5f5a
0x339c032
0x3362919
0x33299f5
0x32f12ad
0x32b9325
0x3281b44
0x324aaf2
0x3214216
0x31de098
0x31a865f
0x3173355
0x313e763
0x310a271
0x30d646a
0x30a2d38
0x306fcc6
0x303d2fd
0x300afca
0x2fd9318
0x2fa7cd3
0x2f76ce7
0x2f46340
0x2f15fcb
0x2ee6276
0x2eb6b2e
0x2e879e0
0x2e58e7b</MemoryData>
	</Node>
	<Edge dst_node_id="289" dst_node_input="b" src_node_id="283" src_node_output="dout" />
	<Node group="[]" id="289" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="290" dst_node_input="i" src_node_id="289" src_node_output="result" />
	<Node group="[]" id="290" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -33, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="291" dst_node_input="a" src_node_id="290" src_node_output="o" />
	<Node group="[]" id="291" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="292" dst_node_input="a" src_node_id="291" src_node_output="result" />
	<Node group="[]" id="284" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x0000000
0x016fe51
0x02dcf2d
0x0447347
0x05aeb4e
0x07137eb
0x08759c5
0x09d517f
0x0b31fb8
0x0c8c50b
0x0de4212
0x0f39761
0x108c589
0x11dcd19
0x132ae9e
0x1476aa0
0x15c01a4
0x170742d
0x184c2bd
0x198edd0
0x1acf5e3
0x1c0db6d
0x1d49ee5
0x1e840be
0x1fbc16c
0x20f215b
0x22260fb
0x23580b6
0x24880f5
0x25b6220
0x26e249a
0x280c8c7
0x2934f09
0x2a5b7c0
0x2b80347
0x2ca31fd
0x2dc443a
0x2ee3a57
0x30014ac
0x311d38e
0x3237751
0x3350047
0x3466ec1
0x357c30f
0x368fd7f
0x37a1e5d
0x38b25f6
0x39c1492
0x3acea7c
0x3bda7fb
0x3ce4d54
0x3dedace
0x3ef50ad
0x3ffaf33
0x40ff6a3
0x420273d
0x4304140
0x44044ec
0x450327f
0x4600a34
0x46fcc48
0x47f78f5
0x48f1075
0x49e9301
0x4ae00d2
0x4bd5a1d
0x4cc9f1b
0x4dbcfff
0x4eaecff
0x4f9f64e
0x508ec20
0x517cea6
0x5269e13
0x5355a97
0x5440462
0x5529ba3
0x561208a
0x56f9343
0x57df3fd
0x58c42e4
0x59a8024
0x5a8abe8
0x5b6c65b
0x5c4cfa7
0x5d2c7f6
0x5e0af70
0x5ee863e
0x5fc4c88
0x60a0275
0x617a82c
0x6253dd3
0x632c38f
0x6403986
0x64d9fdb
0x65af6b5
0x6683e35
0x675767f
0x6829fb7
0x68fb9fd
0x69cc574
0x6a9c23d
0x6b6b07a
0x6c3904a
0x6d061cd
0x6dd2524
0x6e9da6d
0x6f681c7
0x7031b51
0x70fa729
0x71c256c
0x7289637
0x734f9a8
0x7414fdb
0x74d98ed
0x759d4f8
0x7660419
0x772266b
0x77e3c08
0x78a450c
0x796418f
0x7a231ad
0x7ae157e
0x7b9ed1c
0x7c5b8a0
0x7d17823
0x7dd2bbc
0x7e8d384
0x7f46f93</MemoryData>
	</Node>
	<Edge dst_node_id="292" dst_node_input="b" src_node_id="284" src_node_output="dout" />
	<Node group="[]" id="292" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="293" dst_node_input="i" src_node_id="292" src_node_output="result" />
	<Node group="[]" id="293" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="297" dst_node_input="b" src_node_id="293" src_node_output="o" />
	<Node group="[]" id="297" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="298" dst_node_input="i" src_node_id="297" src_node_output="result" />
	<Node group="[]" id="298" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="301" dst_node_input="a" src_node_id="298" src_node_output="o" />
	<Node group="[]" id="2831" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f317218; 0.6931471824645996</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111001100010111001000011000</Value>
		<HexValue>0x3f317218</HexValue>
		<NumericValue>0.6931471824645996</NumericValue>
	</Node>
	<Edge dst_node_id="301" dst_node_input="b" src_node_id="2831" src_node_output="value" />
	<Node group="[]" id="301" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2643" dst_node_input="floatIn" src_node_id="301" src_node_output="result" />
	<Node group="[]" id="2643" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="305" dst_node_input="input" src_node_id="2643" src_node_output="floatOut" />
	<Edge dst_node_id="310" dst_node_input="a" src_node_id="2643" src_node_output="floatOut" />
	<Edge dst_node_id="314" dst_node_input="a" src_node_id="2643" src_node_output="floatOut" />
	<Node group="[]" id="304" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="305" dst_node_input="doubt" src_node_id="304" src_node_output="value" />
	<Node group="[]" id="305" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="306" dst_node_input="i" src_node_id="305" src_node_output="output" />
	<Node group="[]" id="306" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="308" dst_node_input="a" src_node_id="306" src_node_output="o" />
	<Node group="[]" id="2830" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="308" dst_node_input="b" src_node_id="2830" src_node_output="value" />
	<Node group="[]" id="308" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="311" dst_node_input="input" src_node_id="308" src_node_output="result" />
	<Edge dst_node_id="315" dst_node_input="input" src_node_id="308" src_node_output="result" />
	<Edge dst_node_id="317" dst_node_input="input" src_node_id="308" src_node_output="result" />
	<Node group="[]" id="317" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="318" dst_node_input="i" src_node_id="317" src_node_output="output" />
	<Edge dst_node_id="319" dst_node_input="i" src_node_id="317" src_node_output="output" />
	<Edge dst_node_id="320" dst_node_input="i" src_node_id="317" src_node_output="output" />
	<Edge dst_node_id="321" dst_node_input="i" src_node_id="317" src_node_output="output" />
	<Node group="[]" id="318" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="339" dst_node_input="i" src_node_id="318" src_node_output="o" />
	<Node group="[]" id="339" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="341" dst_node_input="a" src_node_id="339" src_node_output="o" />
	<Node group="[]" id="2829" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="341" dst_node_input="b" src_node_id="2829" src_node_output="value" />
	<Node group="[]" id="341" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="345" dst_node_input="a" src_node_id="341" src_node_output="result" />
	<Node group="[]" id="320" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="377" dst_node_input="input" src_node_id="320" src_node_output="o" />
	<Node group="[]" id="377" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="input" src_node_id="377" src_node_output="output" />
	<Node group="[]" id="378" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="379" dst_node_input="addr" src_node_id="378" src_node_output="output" />
	<Node group="[]" id="379" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="329" dst_node_input="a" src_node_id="379" src_node_output="dout" />
	<Edge dst_node_id="330" dst_node_input="b" src_node_id="379" src_node_output="dout" />
	<Node group="[]" id="319" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="374" dst_node_input="input" src_node_id="319" src_node_output="o" />
	<Node group="[]" id="374" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="375" dst_node_input="input" src_node_id="374" src_node_output="output" />
	<Node group="[]" id="375" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="376" dst_node_input="addr" src_node_id="375" src_node_output="output" />
	<Node group="[]" id="376" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="325" dst_node_input="a" src_node_id="376" src_node_output="dout" />
	<Edge dst_node_id="326" dst_node_input="b" src_node_id="376" src_node_output="dout" />
	<Node group="[]" id="322" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="323" dst_node_input="a" src_node_id="322" src_node_output="value" />
	<Node group="[]" id="321" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="323" dst_node_input="b" src_node_id="321" src_node_output="o" />
	<Node group="[]" id="323" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="324" dst_node_input="i" src_node_id="323" src_node_output="result" />
	<Node group="[]" id="324" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="325" dst_node_input="b" src_node_id="324" src_node_output="o" />
	<Edge dst_node_id="326" dst_node_input="a" src_node_id="324" src_node_output="o" />
	<Node group="[]" id="325" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="327" dst_node_input="a" src_node_id="325" src_node_output="result" />
	<Node group="[]" id="326" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="327" dst_node_input="b" src_node_id="326" src_node_output="result" />
	<Node group="[]" id="327" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="328" dst_node_input="i" src_node_id="327" src_node_output="result" />
	<Node group="[]" id="328" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="329" dst_node_input="b" src_node_id="328" src_node_output="o" />
	<Edge dst_node_id="330" dst_node_input="a" src_node_id="328" src_node_output="o" />
	<Node group="[]" id="329" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="331" dst_node_input="a" src_node_id="329" src_node_output="result" />
	<Node group="[]" id="330" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="331" dst_node_input="b" src_node_id="330" src_node_output="result" />
	<Node group="[]" id="331" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="332" dst_node_input="i" src_node_id="331" src_node_output="result" />
	<Node group="[]" id="332" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="333" dst_node_input="i" src_node_id="332" src_node_output="o" />
	<Node group="[]" id="333" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="335" dst_node_input="a" src_node_id="333" src_node_output="o" />
	<Edge dst_node_id="337" dst_node_input="option0" src_node_id="333" src_node_output="o" />
	<Node group="[]" id="2828" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="335" dst_node_input="b" src_node_id="2828" src_node_output="value" />
	<Node group="[]" id="335" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="337" dst_node_input="sel" src_node_id="335" src_node_output="result" />
	<Edge dst_node_id="344" dst_node_input="sel" src_node_id="335" src_node_output="result" />
	<Node group="[]" id="343" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="344" dst_node_input="option0" src_node_id="343" src_node_output="value" />
	<Node group="[]" id="342" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="344" dst_node_input="option1" src_node_id="342" src_node_output="value" />
	<Node group="[]" id="344" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="345" dst_node_input="b" src_node_id="344" src_node_output="result" />
	<Node group="[]" id="345" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="347" dst_node_input="a" src_node_id="345" src_node_output="result" />
	<Edge dst_node_id="352" dst_node_input="a" src_node_id="345" src_node_output="result" />
	<Edge dst_node_id="356" dst_node_input="i" src_node_id="345" src_node_output="result" />
	<Node group="[]" id="2827" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="347" dst_node_input="b" src_node_id="2827" src_node_output="value" />
	<Node group="[]" id="347" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="349" dst_node_input="a" src_node_id="347" src_node_output="result" />
	<Node group="[]" id="2826" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="310" dst_node_input="b" src_node_id="2826" src_node_output="value" />
	<Node group="[]" id="310" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="312" dst_node_input="a" src_node_id="310" src_node_output="result" />
	<Node group="[]" id="311" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="312" dst_node_input="b" src_node_id="311" src_node_output="output" />
	<Node group="[]" id="312" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="348" dst_node_input="a" src_node_id="312" src_node_output="result" />
	<Edge dst_node_id="355" dst_node_input="b" src_node_id="312" src_node_output="result" />
	<Node group="[]" id="348" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="349" dst_node_input="b" src_node_id="348" src_node_output="result" />
	<Node group="[]" id="349" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="350" dst_node_input="a" src_node_id="349" src_node_output="result" />
	<Node group="[]" id="2825" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="314" dst_node_input="b" src_node_id="2825" src_node_output="value" />
	<Node group="[]" id="314" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="316" dst_node_input="a" src_node_id="314" src_node_output="result" />
	<Node group="[]" id="315" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="316" dst_node_input="b" src_node_id="315" src_node_output="output" />
	<Node group="[]" id="316" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="350" dst_node_input="b" src_node_id="316" src_node_output="result" />
	<Edge dst_node_id="353" dst_node_input="a" src_node_id="316" src_node_output="result" />
	<Node group="[]" id="350" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="364" dst_node_input="in0" src_node_id="350" src_node_output="result" />
	<Node group="[]" id="2824" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="352" dst_node_input="b" src_node_id="2824" src_node_output="value" />
	<Node group="[]" id="352" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="354" dst_node_input="a" src_node_id="352" src_node_output="result" />
	<Node group="[]" id="353" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="354" dst_node_input="b" src_node_id="353" src_node_output="result" />
	<Node group="[]" id="354" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="355" dst_node_input="a" src_node_id="354" src_node_output="result" />
	<Node group="[]" id="355" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="364" dst_node_input="in1" src_node_id="355" src_node_output="result" />
	<Node group="[]" id="364" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="372" dst_node_input="sel" src_node_id="364" src_node_output="result" />
	<Node group="[]" id="2622" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="360" dst_node_input="in0" src_node_id="2622" src_node_output="value" />
	<Node group="[]" id="356" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="359" dst_node_input="input" src_node_id="356" src_node_output="o" />
	<Node group="[]" id="359" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="360" dst_node_input="in1" src_node_id="359" src_node_output="output" />
	<Node group="[]" id="360" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="362" dst_node_input="in0" src_node_id="360" src_node_output="result" />
	<Node group="[]" id="336" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="337" dst_node_input="option1" src_node_id="336" src_node_output="value" />
	<Node group="[]" id="337" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="338" dst_node_input="i" src_node_id="337" src_node_output="result" />
	<Node group="[]" id="338" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="361" dst_node_input="input" src_node_id="338" src_node_output="o" />
	<Node group="[]" id="361" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="362" dst_node_input="in1" src_node_id="361" src_node_output="output" />
	<Node group="[]" id="362" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="363" dst_node_input="input" src_node_id="362" src_node_output="result" />
	<Node group="[]" id="363" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="372" dst_node_input="option0" src_node_id="363" src_node_output="output" />
	<Node group="[]" id="365" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="367" dst_node_input="in0" src_node_id="365" src_node_output="value" />
	<Node group="[]" id="366" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="367" dst_node_input="in1" src_node_id="366" src_node_output="value" />
	<Node group="[]" id="367" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="369" dst_node_input="in0" src_node_id="367" src_node_output="result" />
	<Node group="[]" id="368" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="369" dst_node_input="in1" src_node_id="368" src_node_output="value" />
	<Node group="[]" id="369" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="370" dst_node_input="input" src_node_id="369" src_node_output="result" />
	<Node group="[]" id="370" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="372" dst_node_input="option1" src_node_id="370" src_node_output="output" />
	<Edge dst_node_id="372" dst_node_input="option3" src_node_id="370" src_node_output="output" />
	<Node group="[]" id="371" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="372" dst_node_input="option2" src_node_id="371" src_node_output="value" />
	<Node group="[]" id="372" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="382" dst_node_input="a" src_node_id="372" src_node_output="result" />
	<Node group="[]" id="2644" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:78)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="14" dst_node_input="a" src_node_id="2644" src_node_output="floatOut" />
	<Node group="[]" id="14" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:78)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2645" dst_node_input="floatIn" src_node_id="14" src_node_output="result" />
	<Edge dst_node_id="2649" dst_node_input="floatIn" src_node_id="14" src_node_output="result" />
	<Node group="[]" id="2645" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N2</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="382" dst_node_input="b" src_node_id="2645" src_node_output="floatOut" />
	<Node group="[]" id="382" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="383" dst_node_input="a" src_node_id="382" src_node_output="result" />
	<Node group="[]" id="383" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="385" dst_node_input="b" src_node_id="383" src_node_output="result" />
	<Node group="[]" id="385" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2646" dst_node_input="floatIn" src_node_id="385" src_node_output="result" />
	<Node group="[]" id="2646" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:81)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="389" dst_node_input="b" src_node_id="2646" src_node_output="floatOut" />
	<Node group="[]" id="389" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:82)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="391" dst_node_input="b" src_node_id="389" src_node_output="result" />
	<Node group="[]" id="391" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:82)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="392" dst_node_input="b" src_node_id="391" src_node_output="result" />
	<Node group="[]" id="392" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:82)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="400" dst_node_input="a" src_node_id="392" src_node_output="result" />
	<Node group="[]" id="400" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="479" dst_node_input="a" src_node_id="400" src_node_output="result" />
	<Edge dst_node_id="398" dst_node_input="b" src_node_id="400" src_node_output="result" />
	<Node group="[]" id="2823" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="478" dst_node_input="a" src_node_id="2823" src_node_output="value" />
	<Node group="[]" id="2647" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:83)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="395" dst_node_input="a" src_node_id="2647" src_node_output="floatOut" />
	<Node group="[]" id="8" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:76)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="395" dst_node_input="b" src_node_id="8" src_node_output="result" />
	<Edge dst_node_id="545" dst_node_input="b" src_node_id="8" src_node_output="result" />
	<Edge dst_node_id="1673" dst_node_input="b" src_node_id="8" src_node_output="result" />
	<Edge dst_node_id="2251" dst_node_input="b" src_node_id="8" src_node_output="result" />
	<Node group="[]" id="395" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:83)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="396" dst_node_input="a" src_node_id="395" src_node_output="result" />
	<Node group="[]" id="396" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:83)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="399" dst_node_input="a" src_node_id="396" src_node_output="result" />
	<Node group="[]" id="398" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:83)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="399" dst_node_input="b" src_node_id="398" src_node_output="result" />
	<Node group="[]" id="399" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:83)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="402" dst_node_input="input" src_node_id="399" src_node_output="result" />
	<Edge dst_node_id="407" dst_node_input="a" src_node_id="399" src_node_output="result" />
	<Edge dst_node_id="411" dst_node_input="a" src_node_id="399" src_node_output="result" />
	<Node group="[]" id="401" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="402" dst_node_input="doubt" src_node_id="401" src_node_output="value" />
	<Node group="[]" id="402" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="403" dst_node_input="i" src_node_id="402" src_node_output="output" />
	<Node group="[]" id="403" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="405" dst_node_input="a" src_node_id="403" src_node_output="o" />
	<Node group="[]" id="2822" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="405" dst_node_input="b" src_node_id="2822" src_node_output="value" />
	<Node group="[]" id="405" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="408" dst_node_input="input" src_node_id="405" src_node_output="result" />
	<Edge dst_node_id="412" dst_node_input="input" src_node_id="405" src_node_output="result" />
	<Edge dst_node_id="414" dst_node_input="input" src_node_id="405" src_node_output="result" />
	<Node group="[]" id="414" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="415" dst_node_input="i" src_node_id="414" src_node_output="output" />
	<Edge dst_node_id="416" dst_node_input="i" src_node_id="414" src_node_output="output" />
	<Edge dst_node_id="417" dst_node_input="i" src_node_id="414" src_node_output="output" />
	<Edge dst_node_id="418" dst_node_input="i" src_node_id="414" src_node_output="output" />
	<Node group="[]" id="415" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="436" dst_node_input="i" src_node_id="415" src_node_output="o" />
	<Node group="[]" id="436" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="438" dst_node_input="a" src_node_id="436" src_node_output="o" />
	<Node group="[]" id="2821" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="438" dst_node_input="b" src_node_id="2821" src_node_output="value" />
	<Node group="[]" id="438" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="442" dst_node_input="a" src_node_id="438" src_node_output="result" />
	<Node group="[]" id="417" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="474" dst_node_input="input" src_node_id="417" src_node_output="o" />
	<Node group="[]" id="474" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="475" dst_node_input="input" src_node_id="474" src_node_output="output" />
	<Node group="[]" id="475" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="476" dst_node_input="addr" src_node_id="475" src_node_output="output" />
	<Node group="[]" id="476" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="426" dst_node_input="a" src_node_id="476" src_node_output="dout" />
	<Edge dst_node_id="427" dst_node_input="b" src_node_id="476" src_node_output="dout" />
	<Node group="[]" id="416" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="471" dst_node_input="input" src_node_id="416" src_node_output="o" />
	<Node group="[]" id="471" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="472" dst_node_input="input" src_node_id="471" src_node_output="output" />
	<Node group="[]" id="472" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="473" dst_node_input="addr" src_node_id="472" src_node_output="output" />
	<Node group="[]" id="473" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="422" dst_node_input="a" src_node_id="473" src_node_output="dout" />
	<Edge dst_node_id="423" dst_node_input="b" src_node_id="473" src_node_output="dout" />
	<Node group="[]" id="419" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="420" dst_node_input="a" src_node_id="419" src_node_output="value" />
	<Node group="[]" id="418" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="420" dst_node_input="b" src_node_id="418" src_node_output="o" />
	<Node group="[]" id="420" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="421" dst_node_input="i" src_node_id="420" src_node_output="result" />
	<Node group="[]" id="421" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="422" dst_node_input="b" src_node_id="421" src_node_output="o" />
	<Edge dst_node_id="423" dst_node_input="a" src_node_id="421" src_node_output="o" />
	<Node group="[]" id="422" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="424" dst_node_input="a" src_node_id="422" src_node_output="result" />
	<Node group="[]" id="423" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="424" dst_node_input="b" src_node_id="423" src_node_output="result" />
	<Node group="[]" id="424" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="425" dst_node_input="i" src_node_id="424" src_node_output="result" />
	<Node group="[]" id="425" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="426" dst_node_input="b" src_node_id="425" src_node_output="o" />
	<Edge dst_node_id="427" dst_node_input="a" src_node_id="425" src_node_output="o" />
	<Node group="[]" id="426" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="428" dst_node_input="a" src_node_id="426" src_node_output="result" />
	<Node group="[]" id="427" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="428" dst_node_input="b" src_node_id="427" src_node_output="result" />
	<Node group="[]" id="428" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="429" dst_node_input="i" src_node_id="428" src_node_output="result" />
	<Node group="[]" id="429" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="430" dst_node_input="i" src_node_id="429" src_node_output="o" />
	<Node group="[]" id="430" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="432" dst_node_input="a" src_node_id="430" src_node_output="o" />
	<Edge dst_node_id="434" dst_node_input="option0" src_node_id="430" src_node_output="o" />
	<Node group="[]" id="2820" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="432" dst_node_input="b" src_node_id="2820" src_node_output="value" />
	<Node group="[]" id="432" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="434" dst_node_input="sel" src_node_id="432" src_node_output="result" />
	<Edge dst_node_id="441" dst_node_input="sel" src_node_id="432" src_node_output="result" />
	<Node group="[]" id="440" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="441" dst_node_input="option0" src_node_id="440" src_node_output="value" />
	<Node group="[]" id="439" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="441" dst_node_input="option1" src_node_id="439" src_node_output="value" />
	<Node group="[]" id="441" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="442" dst_node_input="b" src_node_id="441" src_node_output="result" />
	<Node group="[]" id="442" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="444" dst_node_input="a" src_node_id="442" src_node_output="result" />
	<Edge dst_node_id="449" dst_node_input="a" src_node_id="442" src_node_output="result" />
	<Edge dst_node_id="453" dst_node_input="i" src_node_id="442" src_node_output="result" />
	<Node group="[]" id="2819" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="444" dst_node_input="b" src_node_id="2819" src_node_output="value" />
	<Node group="[]" id="444" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="446" dst_node_input="a" src_node_id="444" src_node_output="result" />
	<Node group="[]" id="2818" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="407" dst_node_input="b" src_node_id="2818" src_node_output="value" />
	<Node group="[]" id="407" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="409" dst_node_input="a" src_node_id="407" src_node_output="result" />
	<Node group="[]" id="408" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="409" dst_node_input="b" src_node_id="408" src_node_output="output" />
	<Node group="[]" id="409" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="445" dst_node_input="a" src_node_id="409" src_node_output="result" />
	<Edge dst_node_id="452" dst_node_input="b" src_node_id="409" src_node_output="result" />
	<Node group="[]" id="445" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="446" dst_node_input="b" src_node_id="445" src_node_output="result" />
	<Node group="[]" id="446" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="447" dst_node_input="a" src_node_id="446" src_node_output="result" />
	<Node group="[]" id="2817" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="411" dst_node_input="b" src_node_id="2817" src_node_output="value" />
	<Node group="[]" id="411" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="413" dst_node_input="a" src_node_id="411" src_node_output="result" />
	<Node group="[]" id="412" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="413" dst_node_input="b" src_node_id="412" src_node_output="output" />
	<Node group="[]" id="413" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="447" dst_node_input="b" src_node_id="413" src_node_output="result" />
	<Edge dst_node_id="450" dst_node_input="a" src_node_id="413" src_node_output="result" />
	<Node group="[]" id="447" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="461" dst_node_input="in0" src_node_id="447" src_node_output="result" />
	<Node group="[]" id="2816" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="449" dst_node_input="b" src_node_id="2816" src_node_output="value" />
	<Node group="[]" id="449" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="451" dst_node_input="a" src_node_id="449" src_node_output="result" />
	<Node group="[]" id="450" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="451" dst_node_input="b" src_node_id="450" src_node_output="result" />
	<Node group="[]" id="451" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="452" dst_node_input="a" src_node_id="451" src_node_output="result" />
	<Node group="[]" id="452" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="461" dst_node_input="in1" src_node_id="452" src_node_output="result" />
	<Node group="[]" id="461" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="469" dst_node_input="sel" src_node_id="461" src_node_output="result" />
	<Node group="[]" id="2623" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="457" dst_node_input="in0" src_node_id="2623" src_node_output="value" />
	<Node group="[]" id="453" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="456" dst_node_input="input" src_node_id="453" src_node_output="o" />
	<Node group="[]" id="456" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="457" dst_node_input="in1" src_node_id="456" src_node_output="output" />
	<Node group="[]" id="457" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="459" dst_node_input="in0" src_node_id="457" src_node_output="result" />
	<Node group="[]" id="433" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="434" dst_node_input="option1" src_node_id="433" src_node_output="value" />
	<Node group="[]" id="434" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="435" dst_node_input="i" src_node_id="434" src_node_output="result" />
	<Node group="[]" id="435" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="458" dst_node_input="input" src_node_id="435" src_node_output="o" />
	<Node group="[]" id="458" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="459" dst_node_input="in1" src_node_id="458" src_node_output="output" />
	<Node group="[]" id="459" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="460" dst_node_input="input" src_node_id="459" src_node_output="result" />
	<Node group="[]" id="460" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="469" dst_node_input="option0" src_node_id="460" src_node_output="output" />
	<Node group="[]" id="462" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="464" dst_node_input="in0" src_node_id="462" src_node_output="value" />
	<Node group="[]" id="463" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="464" dst_node_input="in1" src_node_id="463" src_node_output="value" />
	<Node group="[]" id="464" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="466" dst_node_input="in0" src_node_id="464" src_node_output="result" />
	<Node group="[]" id="465" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="466" dst_node_input="in1" src_node_id="465" src_node_output="value" />
	<Node group="[]" id="466" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="467" dst_node_input="input" src_node_id="466" src_node_output="result" />
	<Node group="[]" id="467" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="469" dst_node_input="option1" src_node_id="467" src_node_output="output" />
	<Edge dst_node_id="469" dst_node_input="option3" src_node_id="467" src_node_output="output" />
	<Node group="[]" id="468" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="469" dst_node_input="option2" src_node_id="468" src_node_output="value" />
	<Node group="[]" id="469" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="478" dst_node_input="b" src_node_id="469" src_node_output="result" />
	<Node group="[]" id="478" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="479" dst_node_input="b" src_node_id="478" src_node_output="result" />
	<Node group="[]" id="479" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="480" dst_node_input="b" src_node_id="479" src_node_output="result" />
	<Node group="[]" id="480" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:84)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="485" dst_node_input="a" src_node_id="480" src_node_output="result" />
	<Edge dst_node_id="547" dst_node_input="a" src_node_id="480" src_node_output="result" />
	<Edge dst_node_id="696" dst_node_input="a" src_node_id="480" src_node_output="result" />
	<Edge dst_node_id="1037" dst_node_input="b" src_node_id="480" src_node_output="result" />
	<Edge dst_node_id="1042" dst_node_input="b" src_node_id="480" src_node_output="result" />
	<Edge dst_node_id="1679" dst_node_input="a" src_node_id="480" src_node_output="result" />
	<Node group="[]" id="2815" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1036" dst_node_input="a" src_node_id="2815" src_node_output="value" />
	<Node group="[]" id="2814" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1034" dst_node_input="a" src_node_id="2814" src_node_output="value" />
	<Node group="[]" id="2813" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2639" dst_node_input="a" src_node_id="2813" src_node_output="value" />
	<Node group="[]" id="2639" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="239" dst_node_input="a" src_node_id="2639" src_node_output="result" />
	<Node group="[]" id="116" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="117" dst_node_input="in0" src_node_id="116" src_node_output="value" />
	<Node group="[]" id="2812" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="99" dst_node_input="b" src_node_id="2812" src_node_output="value" />
	<Node group="[]" id="99" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="100" dst_node_input="a" src_node_id="99" src_node_output="result" />
	<Edge dst_node_id="115" dst_node_input="a" src_node_id="99" src_node_output="result" />
	<Node group="[]" id="115" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge dst_node_id="117" dst_node_input="in1" src_node_id="115" src_node_output="result" />
	<Node group="[]" id="117" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="118" dst_node_input="input" src_node_id="117" src_node_output="result" />
	<Node group="[]" id="118" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(9)" />
		<Output latency="0" name="output" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:9, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="120" dst_node_input="a" src_node_id="118" src_node_output="output" />
	<Node group="[]" id="2811" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="120" dst_node_input="b" src_node_id="2811" src_node_output="value" />
	<Node group="[]" id="120" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="124" dst_node_input="a" src_node_id="120" src_node_output="result" />
	<Node group="[]" id="100" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge dst_node_id="101" dst_node_input="input" src_node_id="100" src_node_output="result" />
	<Node group="[]" id="101" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(23)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:23, -23, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="103" dst_node_input="input" src_node_id="101" src_node_output="output" />
	<Node group="[]" id="102" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="103" dst_node_input="doubt" src_node_id="102" src_node_output="value" />
	<Node group="[]" id="103" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="104" dst_node_input="i" src_node_id="103" src_node_output="output" />
	<Node group="[]" id="104" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="105" dst_node_input="input" src_node_id="104" src_node_output="o" />
	<Edge dst_node_id="107" dst_node_input="a" src_node_id="104" src_node_output="o" />
	<Edge dst_node_id="109" dst_node_input="input" src_node_id="104" src_node_output="o" />
	<Node group="[]" id="105" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="108" dst_node_input="a" src_node_id="105" src_node_output="output" />
	<Node group="[]" id="2810" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="107" dst_node_input="b" src_node_id="2810" src_node_output="value" />
	<Node group="[]" id="107" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="108" dst_node_input="b" src_node_id="107" src_node_output="result" />
	<Node group="[]" id="108" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="110" dst_node_input="input" src_node_id="108" src_node_output="result" />
	<Node group="[]" id="110" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="113" dst_node_input="sel" src_node_id="110" src_node_output="output" />
	<Edge dst_node_id="123" dst_node_input="sel" src_node_id="110" src_node_output="output" />
	<Node group="[]" id="122" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="123" dst_node_input="option0" src_node_id="122" src_node_output="value" />
	<Node group="[]" id="121" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="123" dst_node_input="option1" src_node_id="121" src_node_output="value" />
	<Node group="[]" id="123" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="124" dst_node_input="b" src_node_id="123" src_node_output="result" />
	<Node group="[]" id="124" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="150" dst_node_input="a" src_node_id="124" src_node_output="result" />
	<Node group="[]" id="109" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="114" dst_node_input="a" src_node_id="109" src_node_output="output" />
	<Node group="[]" id="112" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x0000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0000000000000000000000000000</Value>
		<HexValue>0x0000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="113" dst_node_input="option0" src_node_id="112" src_node_output="value" />
	<Node group="[]" id="111" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="113" dst_node_input="option1" src_node_id="111" src_node_output="value" />
	<Node group="[]" id="113" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="114" dst_node_input="b" src_node_id="113" src_node_output="result" />
	<Node group="[]" id="114" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="127" dst_node_input="input" src_node_id="114" src_node_output="result" />
	<Node group="[]" id="127" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(28)" />
		<Text>&lt;{HWRawBits:28}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="128" dst_node_input="input" src_node_id="127" src_node_output="output" />
	<Node group="[]" id="128" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(28)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:28, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="129" dst_node_input="a" src_node_id="128" src_node_output="output" />
	<Edge dst_node_id="130" dst_node_input="a" src_node_id="128" src_node_output="output" />
	<Node group="[]" id="130" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[25:19]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>19</Base>
		<Width>7</Width>
	</Node>
	<Edge dst_node_id="131" dst_node_input="input" src_node_id="130" src_node_output="result" />
	<Node group="[]" id="131" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="134" dst_node_input="addr" src_node_id="131" src_node_output="output" />
	<Edge dst_node_id="135" dst_node_input="addr" src_node_id="131" src_node_output="output" />
	<Edge dst_node_id="136" dst_node_input="addr" src_node_id="131" src_node_output="output" />
	<Edge dst_node_id="137" dst_node_input="addr" src_node_id="131" src_node_output="output" />
	<Node group="[]" id="134" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x79ae1d8
0x76e20af
0x742bc04
0x718a6b1
0x6efd426
0x6c83865
0x6a1c7f5
0x67c77e1
0x6583dab
0x6350f4a
0x612e324
0x5f1b010
0x5d16d39
0x5b21234
0x59396ed
0x575f3a7
0x55920f4
0x53d17b7
0x521d11c
0x5074694
0x4ed71d8
0x4d44cd9
0x4bbd1cf
0x4a3fb23
0x48cc380
0x47625bc
0x4601ce5
0x44aa43a
0x435b726
0x4215145
0x40d6e58
0x3fa0a4a
0x3e7212e
0x3d4af3b
0x3c2b0cd
0x3b12262
0x3a00096
0x38f4826
0x37ef5ee
0x36f06e6
0x35f7820
0x35046c9
0x3417027
0x332f19b
0x324c89b
0x316f2b2
0x3096d83
0x2fc36c5
0x2ef4c40
0x2e2abd4
0x2d65370
0x2ca4116
0x2be72d4
0x2b2e6d3
0x2a79b3e
0x29c8e5b
0x291be78
0x28729f0
0x27ccf33
0x272acb4
0x268c0f8
0x25f0a91
0x2558819
0x24c3836
0x243199b
0x23a2b02
0x2316b32
0x228d8fb
0x2207333
0x21838be
0x2102884
0x2084179
0x2008297
0x1f8eadf
0x1f1795c
0x1ea2d1e
0x1e3053e
0x1dc00da
0x1d51f15
0x1ce5f1f
0x1c7c025
0x1c14161
0x1bae20e
0x1b4a171
0x1ae7ed1
0x1a8797c
0x1a290c1
0x19cc3f9
0x1971281
0x1917bb6
0x18bfefb
0x1869bc2
0x181516c
0x17c1f70
0x1770543
0x172025a
0x16d1634
0x168404f
0x163802c
0x15ed552
0x15a3f4f
0x155bdaa
0x1514ff3
0x14cf5bf
0x148ae9f
0x1447a2e
0x1405805
0x13c47c3
0x1384905
0x1345b6e
0x1307ea4
0x12cb24a
0x128f60b
0x1254994
0x121ac8e
0x11e1eab
0x11a9f9a
0x1172f10
0x113ccc0
0x1107864
0x10d31b1
0x109f863
0x106cc34
0x103ace4
0x1009a2f
0x0fd93d8
0x0fa99a1
0x0f7ab4d</MemoryData>
	</Node>
	<Edge dst_node_id="138" dst_node_input="a" src_node_id="134" src_node_output="dout" />
	<Node group="[]" id="129" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>[18:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>19</Width>
	</Node>
	<Edge dst_node_id="133" dst_node_input="input" src_node_id="129" src_node_output="result" />
	<Node group="[]" id="133" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(19)" />
		<Output latency="0" name="output" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:19, -19, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="138" dst_node_input="b" src_node_id="133" src_node_output="output" />
	<Edge dst_node_id="141" dst_node_input="b" src_node_id="133" src_node_output="output" />
	<Edge dst_node_id="144" dst_node_input="b" src_node_id="133" src_node_output="output" />
	<Node group="[]" id="138" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="139" dst_node_input="a" src_node_id="138" src_node_output="result" />
	<Node group="[]" id="135" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xa3abc67
0xa518cb6
0xa67d6c5
0xa7d9ea9
0xa92e850
0xaa7b782
0xabc0fe4
0xacff4f6
0xae36a1c
0xaf67294
0xb091184
0xb1b49f2
0xb2d1ec9
0xb3e92d9
0xb4fa8da
0xb60636b
0xb70c514
0xb80d047
0xb90875f
0xb9feca6
0xbaf024e
0xbbdca79
0xbcc4737
0xbda7a85
0xbe86650
0xbf60c76
0xc036ec3
0xc108ef7
0xc1d6ec3
0xc2a0fc8
0xc36739c
0xc429bc9
0xc4e89ca
0xc5a3f11
0xc65bd03
0xc7104fa
0xc7c1847
0xc86f830
0xc91a5f0
0xc9c22ba
0xca66fb7
0xcb08e09
0xcba7ec8
0xcc44303
0xccddbc3
0xcd74a09
0xce08ece
0xce9ab04
0xcf29f96
0xcfb6d69
0xd04155b
0xd0c9844
0xd14f6f7
0xd1d3240
0xd254ae5
0xd2d41a7
0xd351744
0xd3ccc71
0xd4461e1
0xd4bd841
0xd53303a
0xd5a6a70
0xd618783
0xd68880f
0xd6f6cac
0xd7635ed
0xd7ce463
0xd83789a
0xd89f31a
0xd905469
0xd969d09
0xd9ccd79
0xda2e634
0xda8e7b2
0xdaed269
0xdb4a6cc
0xdba654b
0xdc00e52
0xdc5a24c
0xdcb21a1
0xdd08cb7
0xdd5e3f0
0xddb27ac
0xde0584b
0xde57628
0xdea819d
0xdef7b03
0xdf462ae
0xdf938f4
0xdfdfe25
0xe02b292
0xe075689
0xe0bea56
0xe106e44
0xe14e29d
0xe1947a7
0xe1d9da9
0xe21e4e6
0xe261da2
0xe2a481d
0xe2e6498
0xe327351
0xe367485
0xe3a6870
0xe3e4f4d
0xe422954
0xe45f6be
0xe49b7c2
0xe4d6c95
0xe51156c
0xe54b27a
0xe5843f2
0xe5bca05
0xe5f44e4
0xe62b4bd
0xe6619bf
0xe697417
0xe6cc3f2
0xe70097c
0xe7344df
0xe767645
0xe799dd7
0xe7cbbbd
0xe7fd01e
0xe82db22
0xe85dced
0xe88d5a6
0xe8bc570</MemoryData>
	</Node>
	<Edge dst_node_id="139" dst_node_input="b" src_node_id="135" src_node_output="dout" />
	<Node group="[]" id="139" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="140" dst_node_input="i" src_node_id="139" src_node_output="result" />
	<Node group="[]" id="140" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -41, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="141" dst_node_input="a" src_node_id="140" src_node_output="o" />
	<Node group="[]" id="141" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="142" dst_node_input="a" src_node_id="141" src_node_output="result" />
	<Node group="[]" id="136" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x5c551d6
0x5b9de1a
0x5ae9779
0x5a37ce9
0x5988d6b
0x58dc807
0x5832bc9
0x578b7ca
0x56e6b25
0x56444fd
0x55a447d
0x55068d5
0x546b13a
0x53d1ce8
0x533ab20
0x52a5b29
0x5212c4e
0x5181de0
0x50f2f34
0x5065fa5
0x4fdae91
0x4f51b5b
0x4eca569
0x4e44c28
0x4dc0f06
0x4d3ed76
0x4cbe6ef
0x4c3faea
0x4bc28e6
0x4b47062
0x4acd0e3
0x4a549f0
0x49ddb13
0x49683da
0x48f43d4
0x4881a94
0x48107af
0x47a0abd
0x4732359
0x46c5120
0x46593b1
0x45eeaad
0x45855b8
0x451d478
0x44b6695
0x4450bb9
0x43ec390
0x4388dc9
0x4326a12
0x42c581d
0x426579e
0x420684b
0x41a89d8
0x414bc00
0x40efe7c
0x4095107
0x403b35f
0x3fe2541
0x3f8a66e
0x3f336a7
0x3edd5af
0x3e88348
0x3e33f39
0x3de0947
0x3d8e13b
0x3d3c6dc
0x3ceb9f6
0x3c9ba52
0x3c4c7bc
0x3bfe203
0x3bb08f3
0x3b63c5d
0x3b17c10
0x3acc7dd
0x3a81f96
0x3a3830e
0x39ef219
0x39a6c8c
0x395f23c
0x39182ff
0x38d1ead
0x388c51d
0x3847627
0x38031a7
0x37bf774
0x377c76b
0x373a167
0x36f8544
0x36b72df
0x3676a16
0x3636ac6
0x35f74ce
0x35b880e
0x357a466
0x353c9b7
0x34ff7e0
0x34c2ec5
0x3486e47
0x344b649
0x34106ae
0x33d5f5a
0x339c032
0x3362919
0x33299f5
0x32f12ad
0x32b9325
0x3281b44
0x324aaf2
0x3214216
0x31de098
0x31a865f
0x3173355
0x313e763
0x310a271
0x30d646a
0x30a2d38
0x306fcc6
0x303d2fd
0x300afca
0x2fd9318
0x2fa7cd3
0x2f76ce7
0x2f46340
0x2f15fcb
0x2ee6276
0x2eb6b2e
0x2e879e0
0x2e58e7b</MemoryData>
	</Node>
	<Edge dst_node_id="142" dst_node_input="b" src_node_id="136" src_node_output="dout" />
	<Node group="[]" id="142" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="143" dst_node_input="i" src_node_id="142" src_node_output="result" />
	<Node group="[]" id="143" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -33, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="144" dst_node_input="a" src_node_id="143" src_node_output="o" />
	<Node group="[]" id="144" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="145" dst_node_input="a" src_node_id="144" src_node_output="result" />
	<Node group="[]" id="137" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x0000000
0x016fe51
0x02dcf2d
0x0447347
0x05aeb4e
0x07137eb
0x08759c5
0x09d517f
0x0b31fb8
0x0c8c50b
0x0de4212
0x0f39761
0x108c589
0x11dcd19
0x132ae9e
0x1476aa0
0x15c01a4
0x170742d
0x184c2bd
0x198edd0
0x1acf5e3
0x1c0db6d
0x1d49ee5
0x1e840be
0x1fbc16c
0x20f215b
0x22260fb
0x23580b6
0x24880f5
0x25b6220
0x26e249a
0x280c8c7
0x2934f09
0x2a5b7c0
0x2b80347
0x2ca31fd
0x2dc443a
0x2ee3a57
0x30014ac
0x311d38e
0x3237751
0x3350047
0x3466ec1
0x357c30f
0x368fd7f
0x37a1e5d
0x38b25f6
0x39c1492
0x3acea7c
0x3bda7fb
0x3ce4d54
0x3dedace
0x3ef50ad
0x3ffaf33
0x40ff6a3
0x420273d
0x4304140
0x44044ec
0x450327f
0x4600a34
0x46fcc48
0x47f78f5
0x48f1075
0x49e9301
0x4ae00d2
0x4bd5a1d
0x4cc9f1b
0x4dbcfff
0x4eaecff
0x4f9f64e
0x508ec20
0x517cea6
0x5269e13
0x5355a97
0x5440462
0x5529ba3
0x561208a
0x56f9343
0x57df3fd
0x58c42e4
0x59a8024
0x5a8abe8
0x5b6c65b
0x5c4cfa7
0x5d2c7f6
0x5e0af70
0x5ee863e
0x5fc4c88
0x60a0275
0x617a82c
0x6253dd3
0x632c38f
0x6403986
0x64d9fdb
0x65af6b5
0x6683e35
0x675767f
0x6829fb7
0x68fb9fd
0x69cc574
0x6a9c23d
0x6b6b07a
0x6c3904a
0x6d061cd
0x6dd2524
0x6e9da6d
0x6f681c7
0x7031b51
0x70fa729
0x71c256c
0x7289637
0x734f9a8
0x7414fdb
0x74d98ed
0x759d4f8
0x7660419
0x772266b
0x77e3c08
0x78a450c
0x796418f
0x7a231ad
0x7ae157e
0x7b9ed1c
0x7c5b8a0
0x7d17823
0x7dd2bbc
0x7e8d384
0x7f46f93</MemoryData>
	</Node>
	<Edge dst_node_id="145" dst_node_input="b" src_node_id="137" src_node_output="dout" />
	<Node group="[]" id="145" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="146" dst_node_input="i" src_node_id="145" src_node_output="result" />
	<Node group="[]" id="146" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="150" dst_node_input="b" src_node_id="146" src_node_output="o" />
	<Node group="[]" id="150" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="151" dst_node_input="i" src_node_id="150" src_node_output="result" />
	<Node group="[]" id="151" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="154" dst_node_input="a" src_node_id="151" src_node_output="o" />
	<Node group="[]" id="2809" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f317218; 0.6931471824645996</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111001100010111001000011000</Value>
		<HexValue>0x3f317218</HexValue>
		<NumericValue>0.6931471824645996</NumericValue>
	</Node>
	<Edge dst_node_id="154" dst_node_input="b" src_node_id="2809" src_node_output="value" />
	<Node group="[]" id="154" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2648" dst_node_input="floatIn" src_node_id="154" src_node_output="result" />
	<Node group="[]" id="2648" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="158" dst_node_input="input" src_node_id="2648" src_node_output="floatOut" />
	<Edge dst_node_id="163" dst_node_input="a" src_node_id="2648" src_node_output="floatOut" />
	<Edge dst_node_id="167" dst_node_input="a" src_node_id="2648" src_node_output="floatOut" />
	<Node group="[]" id="157" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="158" dst_node_input="doubt" src_node_id="157" src_node_output="value" />
	<Node group="[]" id="158" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="159" dst_node_input="i" src_node_id="158" src_node_output="output" />
	<Node group="[]" id="159" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="161" dst_node_input="a" src_node_id="159" src_node_output="o" />
	<Node group="[]" id="2808" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="161" dst_node_input="b" src_node_id="2808" src_node_output="value" />
	<Node group="[]" id="161" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="164" dst_node_input="input" src_node_id="161" src_node_output="result" />
	<Edge dst_node_id="168" dst_node_input="input" src_node_id="161" src_node_output="result" />
	<Edge dst_node_id="170" dst_node_input="input" src_node_id="161" src_node_output="result" />
	<Node group="[]" id="170" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="171" dst_node_input="i" src_node_id="170" src_node_output="output" />
	<Edge dst_node_id="172" dst_node_input="i" src_node_id="170" src_node_output="output" />
	<Edge dst_node_id="173" dst_node_input="i" src_node_id="170" src_node_output="output" />
	<Edge dst_node_id="174" dst_node_input="i" src_node_id="170" src_node_output="output" />
	<Node group="[]" id="171" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="192" dst_node_input="i" src_node_id="171" src_node_output="o" />
	<Node group="[]" id="192" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="194" dst_node_input="a" src_node_id="192" src_node_output="o" />
	<Node group="[]" id="2807" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="194" dst_node_input="b" src_node_id="2807" src_node_output="value" />
	<Node group="[]" id="194" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="198" dst_node_input="a" src_node_id="194" src_node_output="result" />
	<Node group="[]" id="173" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="230" dst_node_input="input" src_node_id="173" src_node_output="o" />
	<Node group="[]" id="230" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="231" dst_node_input="input" src_node_id="230" src_node_output="output" />
	<Node group="[]" id="231" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="232" dst_node_input="addr" src_node_id="231" src_node_output="output" />
	<Node group="[]" id="232" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="182" dst_node_input="a" src_node_id="232" src_node_output="dout" />
	<Edge dst_node_id="183" dst_node_input="b" src_node_id="232" src_node_output="dout" />
	<Node group="[]" id="172" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="227" dst_node_input="input" src_node_id="172" src_node_output="o" />
	<Node group="[]" id="227" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="228" dst_node_input="input" src_node_id="227" src_node_output="output" />
	<Node group="[]" id="228" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="229" dst_node_input="addr" src_node_id="228" src_node_output="output" />
	<Node group="[]" id="229" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="178" dst_node_input="a" src_node_id="229" src_node_output="dout" />
	<Edge dst_node_id="179" dst_node_input="b" src_node_id="229" src_node_output="dout" />
	<Node group="[]" id="175" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="176" dst_node_input="a" src_node_id="175" src_node_output="value" />
	<Node group="[]" id="174" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="176" dst_node_input="b" src_node_id="174" src_node_output="o" />
	<Node group="[]" id="176" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="177" dst_node_input="i" src_node_id="176" src_node_output="result" />
	<Node group="[]" id="177" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="178" dst_node_input="b" src_node_id="177" src_node_output="o" />
	<Edge dst_node_id="179" dst_node_input="a" src_node_id="177" src_node_output="o" />
	<Node group="[]" id="178" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="180" dst_node_input="a" src_node_id="178" src_node_output="result" />
	<Node group="[]" id="179" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="180" dst_node_input="b" src_node_id="179" src_node_output="result" />
	<Node group="[]" id="180" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="181" dst_node_input="i" src_node_id="180" src_node_output="result" />
	<Node group="[]" id="181" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="182" dst_node_input="b" src_node_id="181" src_node_output="o" />
	<Edge dst_node_id="183" dst_node_input="a" src_node_id="181" src_node_output="o" />
	<Node group="[]" id="182" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="184" dst_node_input="a" src_node_id="182" src_node_output="result" />
	<Node group="[]" id="183" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="184" dst_node_input="b" src_node_id="183" src_node_output="result" />
	<Node group="[]" id="184" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="185" dst_node_input="i" src_node_id="184" src_node_output="result" />
	<Node group="[]" id="185" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="186" dst_node_input="i" src_node_id="185" src_node_output="o" />
	<Node group="[]" id="186" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="188" dst_node_input="a" src_node_id="186" src_node_output="o" />
	<Edge dst_node_id="190" dst_node_input="option0" src_node_id="186" src_node_output="o" />
	<Node group="[]" id="2806" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="188" dst_node_input="b" src_node_id="2806" src_node_output="value" />
	<Node group="[]" id="188" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="190" dst_node_input="sel" src_node_id="188" src_node_output="result" />
	<Edge dst_node_id="197" dst_node_input="sel" src_node_id="188" src_node_output="result" />
	<Node group="[]" id="196" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="197" dst_node_input="option0" src_node_id="196" src_node_output="value" />
	<Node group="[]" id="195" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="197" dst_node_input="option1" src_node_id="195" src_node_output="value" />
	<Node group="[]" id="197" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="198" dst_node_input="b" src_node_id="197" src_node_output="result" />
	<Node group="[]" id="198" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="200" dst_node_input="a" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="205" dst_node_input="a" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="209" dst_node_input="i" src_node_id="198" src_node_output="result" />
	<Node group="[]" id="2805" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="200" dst_node_input="b" src_node_id="2805" src_node_output="value" />
	<Node group="[]" id="200" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="202" dst_node_input="a" src_node_id="200" src_node_output="result" />
	<Node group="[]" id="2804" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="163" dst_node_input="b" src_node_id="2804" src_node_output="value" />
	<Node group="[]" id="163" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="165" dst_node_input="a" src_node_id="163" src_node_output="result" />
	<Node group="[]" id="164" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="165" dst_node_input="b" src_node_id="164" src_node_output="output" />
	<Node group="[]" id="165" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="201" dst_node_input="a" src_node_id="165" src_node_output="result" />
	<Edge dst_node_id="208" dst_node_input="b" src_node_id="165" src_node_output="result" />
	<Node group="[]" id="201" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="202" dst_node_input="b" src_node_id="201" src_node_output="result" />
	<Node group="[]" id="202" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="203" dst_node_input="a" src_node_id="202" src_node_output="result" />
	<Node group="[]" id="2803" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="167" dst_node_input="b" src_node_id="2803" src_node_output="value" />
	<Node group="[]" id="167" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="169" dst_node_input="a" src_node_id="167" src_node_output="result" />
	<Node group="[]" id="168" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="169" dst_node_input="b" src_node_id="168" src_node_output="output" />
	<Node group="[]" id="169" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="203" dst_node_input="b" src_node_id="169" src_node_output="result" />
	<Edge dst_node_id="206" dst_node_input="a" src_node_id="169" src_node_output="result" />
	<Node group="[]" id="203" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="217" dst_node_input="in0" src_node_id="203" src_node_output="result" />
	<Node group="[]" id="2802" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="205" dst_node_input="b" src_node_id="2802" src_node_output="value" />
	<Node group="[]" id="205" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="207" dst_node_input="a" src_node_id="205" src_node_output="result" />
	<Node group="[]" id="206" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="207" dst_node_input="b" src_node_id="206" src_node_output="result" />
	<Node group="[]" id="207" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="208" dst_node_input="a" src_node_id="207" src_node_output="result" />
	<Node group="[]" id="208" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="217" dst_node_input="in1" src_node_id="208" src_node_output="result" />
	<Node group="[]" id="217" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="225" dst_node_input="sel" src_node_id="217" src_node_output="result" />
	<Node group="[]" id="2624" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="213" dst_node_input="in0" src_node_id="2624" src_node_output="value" />
	<Node group="[]" id="209" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="212" dst_node_input="input" src_node_id="209" src_node_output="o" />
	<Node group="[]" id="212" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="213" dst_node_input="in1" src_node_id="212" src_node_output="output" />
	<Node group="[]" id="213" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="215" dst_node_input="in0" src_node_id="213" src_node_output="result" />
	<Node group="[]" id="189" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="190" dst_node_input="option1" src_node_id="189" src_node_output="value" />
	<Node group="[]" id="190" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="191" dst_node_input="i" src_node_id="190" src_node_output="result" />
	<Node group="[]" id="191" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="214" dst_node_input="input" src_node_id="191" src_node_output="o" />
	<Node group="[]" id="214" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="215" dst_node_input="in1" src_node_id="214" src_node_output="output" />
	<Node group="[]" id="215" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="216" dst_node_input="input" src_node_id="215" src_node_output="result" />
	<Node group="[]" id="216" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="225" dst_node_input="option0" src_node_id="216" src_node_output="output" />
	<Node group="[]" id="218" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="220" dst_node_input="in0" src_node_id="218" src_node_output="value" />
	<Node group="[]" id="219" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="220" dst_node_input="in1" src_node_id="219" src_node_output="value" />
	<Node group="[]" id="220" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="222" dst_node_input="in0" src_node_id="220" src_node_output="result" />
	<Node group="[]" id="221" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="222" dst_node_input="in1" src_node_id="221" src_node_output="value" />
	<Node group="[]" id="222" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="223" dst_node_input="input" src_node_id="222" src_node_output="result" />
	<Node group="[]" id="223" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="225" dst_node_input="option1" src_node_id="223" src_node_output="output" />
	<Edge dst_node_id="225" dst_node_input="option3" src_node_id="223" src_node_output="output" />
	<Node group="[]" id="224" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="225" dst_node_input="option2" src_node_id="224" src_node_output="value" />
	<Node group="[]" id="225" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="236" dst_node_input="a" src_node_id="225" src_node_output="result" />
	<Node group="[]" id="2649" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N2</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:995)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="235" dst_node_input="a" src_node_id="2649" src_node_output="floatOut" />
	<Node group="[]" id="2801" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="94" dst_node_input="a" src_node_id="2801" src_node_output="value" />
	<Node group="[]" id="15" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="16" dst_node_input="a" src_node_id="15" src_node_output="result" />
	<Node group="[]" id="16" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="18" dst_node_input="input" src_node_id="16" src_node_output="result" />
	<Edge dst_node_id="23" dst_node_input="a" src_node_id="16" src_node_output="result" />
	<Edge dst_node_id="27" dst_node_input="a" src_node_id="16" src_node_output="result" />
	<Node group="[]" id="17" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="18" dst_node_input="doubt" src_node_id="17" src_node_output="value" />
	<Node group="[]" id="18" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="19" dst_node_input="i" src_node_id="18" src_node_output="output" />
	<Node group="[]" id="19" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="21" dst_node_input="a" src_node_id="19" src_node_output="o" />
	<Node group="[]" id="2800" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="21" dst_node_input="b" src_node_id="2800" src_node_output="value" />
	<Node group="[]" id="21" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="24" dst_node_input="input" src_node_id="21" src_node_output="result" />
	<Edge dst_node_id="28" dst_node_input="input" src_node_id="21" src_node_output="result" />
	<Edge dst_node_id="30" dst_node_input="input" src_node_id="21" src_node_output="result" />
	<Node group="[]" id="30" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="31" dst_node_input="i" src_node_id="30" src_node_output="output" />
	<Edge dst_node_id="32" dst_node_input="i" src_node_id="30" src_node_output="output" />
	<Edge dst_node_id="33" dst_node_input="i" src_node_id="30" src_node_output="output" />
	<Edge dst_node_id="34" dst_node_input="i" src_node_id="30" src_node_output="output" />
	<Node group="[]" id="31" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="52" dst_node_input="i" src_node_id="31" src_node_output="o" />
	<Node group="[]" id="52" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="54" dst_node_input="a" src_node_id="52" src_node_output="o" />
	<Node group="[]" id="2799" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="54" dst_node_input="b" src_node_id="2799" src_node_output="value" />
	<Node group="[]" id="54" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="58" dst_node_input="a" src_node_id="54" src_node_output="result" />
	<Node group="[]" id="33" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="90" dst_node_input="input" src_node_id="33" src_node_output="o" />
	<Node group="[]" id="90" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="91" dst_node_input="input" src_node_id="90" src_node_output="output" />
	<Node group="[]" id="91" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="92" dst_node_input="addr" src_node_id="91" src_node_output="output" />
	<Node group="[]" id="92" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="42" dst_node_input="a" src_node_id="92" src_node_output="dout" />
	<Edge dst_node_id="43" dst_node_input="b" src_node_id="92" src_node_output="dout" />
	<Node group="[]" id="32" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="87" dst_node_input="input" src_node_id="32" src_node_output="o" />
	<Node group="[]" id="87" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="88" dst_node_input="input" src_node_id="87" src_node_output="output" />
	<Node group="[]" id="88" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="89" dst_node_input="addr" src_node_id="88" src_node_output="output" />
	<Node group="[]" id="89" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="38" dst_node_input="a" src_node_id="89" src_node_output="dout" />
	<Edge dst_node_id="39" dst_node_input="b" src_node_id="89" src_node_output="dout" />
	<Node group="[]" id="35" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="36" dst_node_input="a" src_node_id="35" src_node_output="value" />
	<Node group="[]" id="34" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="36" dst_node_input="b" src_node_id="34" src_node_output="o" />
	<Node group="[]" id="36" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="37" dst_node_input="i" src_node_id="36" src_node_output="result" />
	<Node group="[]" id="37" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="38" dst_node_input="b" src_node_id="37" src_node_output="o" />
	<Edge dst_node_id="39" dst_node_input="a" src_node_id="37" src_node_output="o" />
	<Node group="[]" id="38" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="40" dst_node_input="a" src_node_id="38" src_node_output="result" />
	<Node group="[]" id="39" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="40" dst_node_input="b" src_node_id="39" src_node_output="result" />
	<Node group="[]" id="40" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="41" dst_node_input="i" src_node_id="40" src_node_output="result" />
	<Node group="[]" id="41" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="42" dst_node_input="b" src_node_id="41" src_node_output="o" />
	<Edge dst_node_id="43" dst_node_input="a" src_node_id="41" src_node_output="o" />
	<Node group="[]" id="42" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="44" dst_node_input="a" src_node_id="42" src_node_output="result" />
	<Node group="[]" id="43" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="44" dst_node_input="b" src_node_id="43" src_node_output="result" />
	<Node group="[]" id="44" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="45" dst_node_input="i" src_node_id="44" src_node_output="result" />
	<Node group="[]" id="45" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="46" dst_node_input="i" src_node_id="45" src_node_output="o" />
	<Node group="[]" id="46" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="48" dst_node_input="a" src_node_id="46" src_node_output="o" />
	<Edge dst_node_id="50" dst_node_input="option0" src_node_id="46" src_node_output="o" />
	<Node group="[]" id="2798" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="48" dst_node_input="b" src_node_id="2798" src_node_output="value" />
	<Node group="[]" id="48" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="50" dst_node_input="sel" src_node_id="48" src_node_output="result" />
	<Edge dst_node_id="57" dst_node_input="sel" src_node_id="48" src_node_output="result" />
	<Node group="[]" id="56" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="57" dst_node_input="option0" src_node_id="56" src_node_output="value" />
	<Node group="[]" id="55" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="57" dst_node_input="option1" src_node_id="55" src_node_output="value" />
	<Node group="[]" id="57" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="58" dst_node_input="b" src_node_id="57" src_node_output="result" />
	<Node group="[]" id="58" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="60" dst_node_input="a" src_node_id="58" src_node_output="result" />
	<Edge dst_node_id="65" dst_node_input="a" src_node_id="58" src_node_output="result" />
	<Edge dst_node_id="69" dst_node_input="i" src_node_id="58" src_node_output="result" />
	<Node group="[]" id="2797" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="60" dst_node_input="b" src_node_id="2797" src_node_output="value" />
	<Node group="[]" id="60" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="62" dst_node_input="a" src_node_id="60" src_node_output="result" />
	<Node group="[]" id="2796" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="23" dst_node_input="b" src_node_id="2796" src_node_output="value" />
	<Node group="[]" id="23" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="25" dst_node_input="a" src_node_id="23" src_node_output="result" />
	<Node group="[]" id="24" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="25" dst_node_input="b" src_node_id="24" src_node_output="output" />
	<Node group="[]" id="25" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="61" dst_node_input="a" src_node_id="25" src_node_output="result" />
	<Edge dst_node_id="68" dst_node_input="b" src_node_id="25" src_node_output="result" />
	<Node group="[]" id="61" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="62" dst_node_input="b" src_node_id="61" src_node_output="result" />
	<Node group="[]" id="62" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="63" dst_node_input="a" src_node_id="62" src_node_output="result" />
	<Node group="[]" id="2795" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="27" dst_node_input="b" src_node_id="2795" src_node_output="value" />
	<Node group="[]" id="27" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="29" dst_node_input="a" src_node_id="27" src_node_output="result" />
	<Node group="[]" id="28" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="29" dst_node_input="b" src_node_id="28" src_node_output="output" />
	<Node group="[]" id="29" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="63" dst_node_input="b" src_node_id="29" src_node_output="result" />
	<Edge dst_node_id="66" dst_node_input="a" src_node_id="29" src_node_output="result" />
	<Node group="[]" id="63" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="77" dst_node_input="in0" src_node_id="63" src_node_output="result" />
	<Node group="[]" id="2794" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="65" dst_node_input="b" src_node_id="2794" src_node_output="value" />
	<Node group="[]" id="65" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="67" dst_node_input="a" src_node_id="65" src_node_output="result" />
	<Node group="[]" id="66" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="67" dst_node_input="b" src_node_id="66" src_node_output="result" />
	<Node group="[]" id="67" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="68" dst_node_input="a" src_node_id="67" src_node_output="result" />
	<Node group="[]" id="68" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="77" dst_node_input="in1" src_node_id="68" src_node_output="result" />
	<Node group="[]" id="77" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="85" dst_node_input="sel" src_node_id="77" src_node_output="result" />
	<Node group="[]" id="2625" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="73" dst_node_input="in0" src_node_id="2625" src_node_output="value" />
	<Node group="[]" id="69" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="72" dst_node_input="input" src_node_id="69" src_node_output="o" />
	<Node group="[]" id="72" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="73" dst_node_input="in1" src_node_id="72" src_node_output="output" />
	<Node group="[]" id="73" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="75" dst_node_input="in0" src_node_id="73" src_node_output="result" />
	<Node group="[]" id="49" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="50" dst_node_input="option1" src_node_id="49" src_node_output="value" />
	<Node group="[]" id="50" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="51" dst_node_input="i" src_node_id="50" src_node_output="result" />
	<Node group="[]" id="51" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="74" dst_node_input="input" src_node_id="51" src_node_output="o" />
	<Node group="[]" id="74" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="75" dst_node_input="in1" src_node_id="74" src_node_output="output" />
	<Node group="[]" id="75" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="76" dst_node_input="input" src_node_id="75" src_node_output="result" />
	<Node group="[]" id="76" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="85" dst_node_input="option0" src_node_id="76" src_node_output="output" />
	<Node group="[]" id="78" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="80" dst_node_input="in0" src_node_id="78" src_node_output="value" />
	<Node group="[]" id="79" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="80" dst_node_input="in1" src_node_id="79" src_node_output="value" />
	<Node group="[]" id="80" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="82" dst_node_input="in0" src_node_id="80" src_node_output="result" />
	<Node group="[]" id="81" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="82" dst_node_input="in1" src_node_id="81" src_node_output="value" />
	<Node group="[]" id="82" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="83" dst_node_input="input" src_node_id="82" src_node_output="result" />
	<Node group="[]" id="83" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="85" dst_node_input="option1" src_node_id="83" src_node_output="output" />
	<Edge dst_node_id="85" dst_node_input="option3" src_node_id="83" src_node_output="output" />
	<Node group="[]" id="84" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="85" dst_node_input="option2" src_node_id="84" src_node_output="value" />
	<Node group="[]" id="85" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="94" dst_node_input="b" src_node_id="85" src_node_output="result" />
	<Node group="[]" id="94" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:79)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="235" dst_node_input="b" src_node_id="94" src_node_output="result" />
	<Node group="[]" id="235" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="236" dst_node_input="b" src_node_id="235" src_node_output="result" />
	<Node group="[]" id="236" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="237" dst_node_input="a" src_node_id="236" src_node_output="result" />
	<Node group="[]" id="237" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="239" dst_node_input="b" src_node_id="237" src_node_output="result" />
	<Node group="[]" id="239" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2650" dst_node_input="floatIn" src_node_id="239" src_node_output="result" />
	<Node group="[]" id="2650" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:965)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:80)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1034" dst_node_input="b" src_node_id="2650" src_node_output="floatOut" />
	<Edge dst_node_id="1041" dst_node_input="b" src_node_id="2650" src_node_output="floatOut" />
	<Edge dst_node_id="1252" dst_node_input="b" src_node_id="2650" src_node_output="floatOut" />
	<Edge dst_node_id="1465" dst_node_input="b" src_node_id="2650" src_node_output="floatOut" />
	<Edge dst_node_id="2461" dst_node_input="b" src_node_id="2650" src_node_output="floatOut" />
	<Edge dst_node_id="2519" dst_node_input="a" src_node_id="2650" src_node_output="floatOut" />
	<Node group="[]" id="1034" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1036" dst_node_input="b" src_node_id="1034" src_node_output="result" />
	<Node group="[]" id="1036" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1037" dst_node_input="a" src_node_id="1036" src_node_output="result" />
	<Node group="[]" id="1037" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1038" dst_node_input="a" src_node_id="1037" src_node_output="result" />
	<Node group="[]" id="1038" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1039" dst_node_input="a" src_node_id="1038" src_node_output="result" />
	<Node group="[]" id="618" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="619" dst_node_input="a" src_node_id="618" src_node_output="result" />
	<Node group="[]" id="619" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="621" dst_node_input="input" src_node_id="619" src_node_output="result" />
	<Edge dst_node_id="626" dst_node_input="a" src_node_id="619" src_node_output="result" />
	<Edge dst_node_id="630" dst_node_input="a" src_node_id="619" src_node_output="result" />
	<Node group="[]" id="620" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="621" dst_node_input="doubt" src_node_id="620" src_node_output="value" />
	<Node group="[]" id="621" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="622" dst_node_input="i" src_node_id="621" src_node_output="output" />
	<Node group="[]" id="622" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="624" dst_node_input="a" src_node_id="622" src_node_output="o" />
	<Node group="[]" id="2793" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="624" dst_node_input="b" src_node_id="2793" src_node_output="value" />
	<Node group="[]" id="624" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="627" dst_node_input="input" src_node_id="624" src_node_output="result" />
	<Edge dst_node_id="631" dst_node_input="input" src_node_id="624" src_node_output="result" />
	<Edge dst_node_id="633" dst_node_input="input" src_node_id="624" src_node_output="result" />
	<Node group="[]" id="633" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="634" dst_node_input="i" src_node_id="633" src_node_output="output" />
	<Edge dst_node_id="635" dst_node_input="i" src_node_id="633" src_node_output="output" />
	<Edge dst_node_id="636" dst_node_input="i" src_node_id="633" src_node_output="output" />
	<Edge dst_node_id="637" dst_node_input="i" src_node_id="633" src_node_output="output" />
	<Node group="[]" id="634" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="655" dst_node_input="i" src_node_id="634" src_node_output="o" />
	<Node group="[]" id="655" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="657" dst_node_input="a" src_node_id="655" src_node_output="o" />
	<Node group="[]" id="2792" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="657" dst_node_input="b" src_node_id="2792" src_node_output="value" />
	<Node group="[]" id="657" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="661" dst_node_input="a" src_node_id="657" src_node_output="result" />
	<Node group="[]" id="636" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="693" dst_node_input="input" src_node_id="636" src_node_output="o" />
	<Node group="[]" id="693" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="694" dst_node_input="input" src_node_id="693" src_node_output="output" />
	<Node group="[]" id="694" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="695" dst_node_input="addr" src_node_id="694" src_node_output="output" />
	<Node group="[]" id="695" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="645" dst_node_input="a" src_node_id="695" src_node_output="dout" />
	<Edge dst_node_id="646" dst_node_input="b" src_node_id="695" src_node_output="dout" />
	<Node group="[]" id="635" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="690" dst_node_input="input" src_node_id="635" src_node_output="o" />
	<Node group="[]" id="690" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="691" dst_node_input="input" src_node_id="690" src_node_output="output" />
	<Node group="[]" id="691" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="692" dst_node_input="addr" src_node_id="691" src_node_output="output" />
	<Node group="[]" id="692" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="641" dst_node_input="a" src_node_id="692" src_node_output="dout" />
	<Edge dst_node_id="642" dst_node_input="b" src_node_id="692" src_node_output="dout" />
	<Node group="[]" id="638" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="639" dst_node_input="a" src_node_id="638" src_node_output="value" />
	<Node group="[]" id="637" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="639" dst_node_input="b" src_node_id="637" src_node_output="o" />
	<Node group="[]" id="639" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="640" dst_node_input="i" src_node_id="639" src_node_output="result" />
	<Node group="[]" id="640" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="641" dst_node_input="b" src_node_id="640" src_node_output="o" />
	<Edge dst_node_id="642" dst_node_input="a" src_node_id="640" src_node_output="o" />
	<Node group="[]" id="641" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="643" dst_node_input="a" src_node_id="641" src_node_output="result" />
	<Node group="[]" id="642" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="643" dst_node_input="b" src_node_id="642" src_node_output="result" />
	<Node group="[]" id="643" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="644" dst_node_input="i" src_node_id="643" src_node_output="result" />
	<Node group="[]" id="644" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="645" dst_node_input="b" src_node_id="644" src_node_output="o" />
	<Edge dst_node_id="646" dst_node_input="a" src_node_id="644" src_node_output="o" />
	<Node group="[]" id="645" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="647" dst_node_input="a" src_node_id="645" src_node_output="result" />
	<Node group="[]" id="646" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="647" dst_node_input="b" src_node_id="646" src_node_output="result" />
	<Node group="[]" id="647" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="648" dst_node_input="i" src_node_id="647" src_node_output="result" />
	<Node group="[]" id="648" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="649" dst_node_input="i" src_node_id="648" src_node_output="o" />
	<Node group="[]" id="649" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="651" dst_node_input="a" src_node_id="649" src_node_output="o" />
	<Edge dst_node_id="653" dst_node_input="option0" src_node_id="649" src_node_output="o" />
	<Node group="[]" id="2791" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="651" dst_node_input="b" src_node_id="2791" src_node_output="value" />
	<Node group="[]" id="651" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="653" dst_node_input="sel" src_node_id="651" src_node_output="result" />
	<Edge dst_node_id="660" dst_node_input="sel" src_node_id="651" src_node_output="result" />
	<Node group="[]" id="659" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="660" dst_node_input="option0" src_node_id="659" src_node_output="value" />
	<Node group="[]" id="658" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="660" dst_node_input="option1" src_node_id="658" src_node_output="value" />
	<Node group="[]" id="660" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="661" dst_node_input="b" src_node_id="660" src_node_output="result" />
	<Node group="[]" id="661" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="663" dst_node_input="a" src_node_id="661" src_node_output="result" />
	<Edge dst_node_id="668" dst_node_input="a" src_node_id="661" src_node_output="result" />
	<Edge dst_node_id="672" dst_node_input="i" src_node_id="661" src_node_output="result" />
	<Node group="[]" id="2790" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="663" dst_node_input="b" src_node_id="2790" src_node_output="value" />
	<Node group="[]" id="663" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="665" dst_node_input="a" src_node_id="663" src_node_output="result" />
	<Node group="[]" id="2789" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="626" dst_node_input="b" src_node_id="2789" src_node_output="value" />
	<Node group="[]" id="626" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="628" dst_node_input="a" src_node_id="626" src_node_output="result" />
	<Node group="[]" id="627" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="628" dst_node_input="b" src_node_id="627" src_node_output="output" />
	<Node group="[]" id="628" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="664" dst_node_input="a" src_node_id="628" src_node_output="result" />
	<Edge dst_node_id="671" dst_node_input="b" src_node_id="628" src_node_output="result" />
	<Node group="[]" id="664" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="665" dst_node_input="b" src_node_id="664" src_node_output="result" />
	<Node group="[]" id="665" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="666" dst_node_input="a" src_node_id="665" src_node_output="result" />
	<Node group="[]" id="2788" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="630" dst_node_input="b" src_node_id="2788" src_node_output="value" />
	<Node group="[]" id="630" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="632" dst_node_input="a" src_node_id="630" src_node_output="result" />
	<Node group="[]" id="631" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="632" dst_node_input="b" src_node_id="631" src_node_output="output" />
	<Node group="[]" id="632" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="666" dst_node_input="b" src_node_id="632" src_node_output="result" />
	<Edge dst_node_id="669" dst_node_input="a" src_node_id="632" src_node_output="result" />
	<Node group="[]" id="666" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="680" dst_node_input="in0" src_node_id="666" src_node_output="result" />
	<Node group="[]" id="2787" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="668" dst_node_input="b" src_node_id="2787" src_node_output="value" />
	<Node group="[]" id="668" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="670" dst_node_input="a" src_node_id="668" src_node_output="result" />
	<Node group="[]" id="669" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="670" dst_node_input="b" src_node_id="669" src_node_output="result" />
	<Node group="[]" id="670" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="671" dst_node_input="a" src_node_id="670" src_node_output="result" />
	<Node group="[]" id="671" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="680" dst_node_input="in1" src_node_id="671" src_node_output="result" />
	<Node group="[]" id="680" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="688" dst_node_input="sel" src_node_id="680" src_node_output="result" />
	<Node group="[]" id="2626" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="676" dst_node_input="in0" src_node_id="2626" src_node_output="value" />
	<Node group="[]" id="672" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="675" dst_node_input="input" src_node_id="672" src_node_output="o" />
	<Node group="[]" id="675" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="676" dst_node_input="in1" src_node_id="675" src_node_output="output" />
	<Node group="[]" id="676" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="678" dst_node_input="in0" src_node_id="676" src_node_output="result" />
	<Node group="[]" id="652" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="653" dst_node_input="option1" src_node_id="652" src_node_output="value" />
	<Node group="[]" id="653" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="654" dst_node_input="i" src_node_id="653" src_node_output="result" />
	<Node group="[]" id="654" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="677" dst_node_input="input" src_node_id="654" src_node_output="o" />
	<Node group="[]" id="677" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="678" dst_node_input="in1" src_node_id="677" src_node_output="output" />
	<Node group="[]" id="678" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="679" dst_node_input="input" src_node_id="678" src_node_output="result" />
	<Node group="[]" id="679" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="688" dst_node_input="option0" src_node_id="679" src_node_output="output" />
	<Node group="[]" id="681" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="683" dst_node_input="in0" src_node_id="681" src_node_output="value" />
	<Node group="[]" id="682" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="683" dst_node_input="in1" src_node_id="682" src_node_output="value" />
	<Node group="[]" id="683" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="685" dst_node_input="in0" src_node_id="683" src_node_output="result" />
	<Node group="[]" id="684" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="685" dst_node_input="in1" src_node_id="684" src_node_output="value" />
	<Node group="[]" id="685" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="686" dst_node_input="input" src_node_id="685" src_node_output="result" />
	<Node group="[]" id="686" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="688" dst_node_input="option1" src_node_id="686" src_node_output="output" />
	<Edge dst_node_id="688" dst_node_input="option3" src_node_id="686" src_node_output="output" />
	<Node group="[]" id="687" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="688" dst_node_input="option2" src_node_id="687" src_node_output="value" />
	<Node group="[]" id="688" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="696" dst_node_input="b" src_node_id="688" src_node_output="result" />
	<Node group="[]" id="696" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="824" dst_node_input="a" src_node_id="696" src_node_output="result" />
	<Node group="[]" id="564" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="565" dst_node_input="in0" src_node_id="564" src_node_output="value" />
	<Node group="[]" id="547" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="548" dst_node_input="a" src_node_id="547" src_node_output="result" />
	<Edge dst_node_id="563" dst_node_input="a" src_node_id="547" src_node_output="result" />
	<Node group="[]" id="563" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge dst_node_id="565" dst_node_input="in1" src_node_id="563" src_node_output="result" />
	<Node group="[]" id="565" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="566" dst_node_input="input" src_node_id="565" src_node_output="result" />
	<Node group="[]" id="566" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(9)" />
		<Output latency="0" name="output" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:9, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="568" dst_node_input="a" src_node_id="566" src_node_output="output" />
	<Node group="[]" id="2786" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="568" dst_node_input="b" src_node_id="2786" src_node_output="value" />
	<Node group="[]" id="568" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="572" dst_node_input="a" src_node_id="568" src_node_output="result" />
	<Node group="[]" id="548" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge dst_node_id="549" dst_node_input="input" src_node_id="548" src_node_output="result" />
	<Node group="[]" id="549" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(23)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:23, -23, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="551" dst_node_input="input" src_node_id="549" src_node_output="output" />
	<Node group="[]" id="550" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="551" dst_node_input="doubt" src_node_id="550" src_node_output="value" />
	<Node group="[]" id="551" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="552" dst_node_input="i" src_node_id="551" src_node_output="output" />
	<Node group="[]" id="552" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="553" dst_node_input="input" src_node_id="552" src_node_output="o" />
	<Edge dst_node_id="555" dst_node_input="a" src_node_id="552" src_node_output="o" />
	<Edge dst_node_id="557" dst_node_input="input" src_node_id="552" src_node_output="o" />
	<Node group="[]" id="553" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="556" dst_node_input="a" src_node_id="553" src_node_output="output" />
	<Node group="[]" id="2785" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="555" dst_node_input="b" src_node_id="2785" src_node_output="value" />
	<Node group="[]" id="555" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="556" dst_node_input="b" src_node_id="555" src_node_output="result" />
	<Node group="[]" id="556" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="558" dst_node_input="input" src_node_id="556" src_node_output="result" />
	<Node group="[]" id="558" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="561" dst_node_input="sel" src_node_id="558" src_node_output="output" />
	<Edge dst_node_id="571" dst_node_input="sel" src_node_id="558" src_node_output="output" />
	<Node group="[]" id="570" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="571" dst_node_input="option0" src_node_id="570" src_node_output="value" />
	<Node group="[]" id="569" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="571" dst_node_input="option1" src_node_id="569" src_node_output="value" />
	<Node group="[]" id="571" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="572" dst_node_input="b" src_node_id="571" src_node_output="result" />
	<Node group="[]" id="572" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="598" dst_node_input="a" src_node_id="572" src_node_output="result" />
	<Node group="[]" id="557" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="562" dst_node_input="a" src_node_id="557" src_node_output="output" />
	<Node group="[]" id="560" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x0000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0000000000000000000000000000</Value>
		<HexValue>0x0000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="561" dst_node_input="option0" src_node_id="560" src_node_output="value" />
	<Node group="[]" id="559" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="561" dst_node_input="option1" src_node_id="559" src_node_output="value" />
	<Node group="[]" id="561" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="562" dst_node_input="b" src_node_id="561" src_node_output="result" />
	<Node group="[]" id="562" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="575" dst_node_input="input" src_node_id="562" src_node_output="result" />
	<Node group="[]" id="575" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(28)" />
		<Text>&lt;{HWRawBits:28}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="576" dst_node_input="input" src_node_id="575" src_node_output="output" />
	<Node group="[]" id="576" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(28)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:28, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="577" dst_node_input="a" src_node_id="576" src_node_output="output" />
	<Edge dst_node_id="578" dst_node_input="a" src_node_id="576" src_node_output="output" />
	<Node group="[]" id="578" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[25:19]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>19</Base>
		<Width>7</Width>
	</Node>
	<Edge dst_node_id="579" dst_node_input="input" src_node_id="578" src_node_output="result" />
	<Node group="[]" id="579" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="582" dst_node_input="addr" src_node_id="579" src_node_output="output" />
	<Edge dst_node_id="583" dst_node_input="addr" src_node_id="579" src_node_output="output" />
	<Edge dst_node_id="584" dst_node_input="addr" src_node_id="579" src_node_output="output" />
	<Edge dst_node_id="585" dst_node_input="addr" src_node_id="579" src_node_output="output" />
	<Node group="[]" id="582" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x79ae1d8
0x76e20af
0x742bc04
0x718a6b1
0x6efd426
0x6c83865
0x6a1c7f5
0x67c77e1
0x6583dab
0x6350f4a
0x612e324
0x5f1b010
0x5d16d39
0x5b21234
0x59396ed
0x575f3a7
0x55920f4
0x53d17b7
0x521d11c
0x5074694
0x4ed71d8
0x4d44cd9
0x4bbd1cf
0x4a3fb23
0x48cc380
0x47625bc
0x4601ce5
0x44aa43a
0x435b726
0x4215145
0x40d6e58
0x3fa0a4a
0x3e7212e
0x3d4af3b
0x3c2b0cd
0x3b12262
0x3a00096
0x38f4826
0x37ef5ee
0x36f06e6
0x35f7820
0x35046c9
0x3417027
0x332f19b
0x324c89b
0x316f2b2
0x3096d83
0x2fc36c5
0x2ef4c40
0x2e2abd4
0x2d65370
0x2ca4116
0x2be72d4
0x2b2e6d3
0x2a79b3e
0x29c8e5b
0x291be78
0x28729f0
0x27ccf33
0x272acb4
0x268c0f8
0x25f0a91
0x2558819
0x24c3836
0x243199b
0x23a2b02
0x2316b32
0x228d8fb
0x2207333
0x21838be
0x2102884
0x2084179
0x2008297
0x1f8eadf
0x1f1795c
0x1ea2d1e
0x1e3053e
0x1dc00da
0x1d51f15
0x1ce5f1f
0x1c7c025
0x1c14161
0x1bae20e
0x1b4a171
0x1ae7ed1
0x1a8797c
0x1a290c1
0x19cc3f9
0x1971281
0x1917bb6
0x18bfefb
0x1869bc2
0x181516c
0x17c1f70
0x1770543
0x172025a
0x16d1634
0x168404f
0x163802c
0x15ed552
0x15a3f4f
0x155bdaa
0x1514ff3
0x14cf5bf
0x148ae9f
0x1447a2e
0x1405805
0x13c47c3
0x1384905
0x1345b6e
0x1307ea4
0x12cb24a
0x128f60b
0x1254994
0x121ac8e
0x11e1eab
0x11a9f9a
0x1172f10
0x113ccc0
0x1107864
0x10d31b1
0x109f863
0x106cc34
0x103ace4
0x1009a2f
0x0fd93d8
0x0fa99a1
0x0f7ab4d</MemoryData>
	</Node>
	<Edge dst_node_id="586" dst_node_input="a" src_node_id="582" src_node_output="dout" />
	<Node group="[]" id="577" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>[18:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>19</Width>
	</Node>
	<Edge dst_node_id="581" dst_node_input="input" src_node_id="577" src_node_output="result" />
	<Node group="[]" id="581" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(19)" />
		<Output latency="0" name="output" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:19, -19, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="586" dst_node_input="b" src_node_id="581" src_node_output="output" />
	<Edge dst_node_id="589" dst_node_input="b" src_node_id="581" src_node_output="output" />
	<Edge dst_node_id="592" dst_node_input="b" src_node_id="581" src_node_output="output" />
	<Node group="[]" id="586" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="587" dst_node_input="a" src_node_id="586" src_node_output="result" />
	<Node group="[]" id="583" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xa3abc67
0xa518cb6
0xa67d6c5
0xa7d9ea9
0xa92e850
0xaa7b782
0xabc0fe4
0xacff4f6
0xae36a1c
0xaf67294
0xb091184
0xb1b49f2
0xb2d1ec9
0xb3e92d9
0xb4fa8da
0xb60636b
0xb70c514
0xb80d047
0xb90875f
0xb9feca6
0xbaf024e
0xbbdca79
0xbcc4737
0xbda7a85
0xbe86650
0xbf60c76
0xc036ec3
0xc108ef7
0xc1d6ec3
0xc2a0fc8
0xc36739c
0xc429bc9
0xc4e89ca
0xc5a3f11
0xc65bd03
0xc7104fa
0xc7c1847
0xc86f830
0xc91a5f0
0xc9c22ba
0xca66fb7
0xcb08e09
0xcba7ec8
0xcc44303
0xccddbc3
0xcd74a09
0xce08ece
0xce9ab04
0xcf29f96
0xcfb6d69
0xd04155b
0xd0c9844
0xd14f6f7
0xd1d3240
0xd254ae5
0xd2d41a7
0xd351744
0xd3ccc71
0xd4461e1
0xd4bd841
0xd53303a
0xd5a6a70
0xd618783
0xd68880f
0xd6f6cac
0xd7635ed
0xd7ce463
0xd83789a
0xd89f31a
0xd905469
0xd969d09
0xd9ccd79
0xda2e634
0xda8e7b2
0xdaed269
0xdb4a6cc
0xdba654b
0xdc00e52
0xdc5a24c
0xdcb21a1
0xdd08cb7
0xdd5e3f0
0xddb27ac
0xde0584b
0xde57628
0xdea819d
0xdef7b03
0xdf462ae
0xdf938f4
0xdfdfe25
0xe02b292
0xe075689
0xe0bea56
0xe106e44
0xe14e29d
0xe1947a7
0xe1d9da9
0xe21e4e6
0xe261da2
0xe2a481d
0xe2e6498
0xe327351
0xe367485
0xe3a6870
0xe3e4f4d
0xe422954
0xe45f6be
0xe49b7c2
0xe4d6c95
0xe51156c
0xe54b27a
0xe5843f2
0xe5bca05
0xe5f44e4
0xe62b4bd
0xe6619bf
0xe697417
0xe6cc3f2
0xe70097c
0xe7344df
0xe767645
0xe799dd7
0xe7cbbbd
0xe7fd01e
0xe82db22
0xe85dced
0xe88d5a6
0xe8bc570</MemoryData>
	</Node>
	<Edge dst_node_id="587" dst_node_input="b" src_node_id="583" src_node_output="dout" />
	<Node group="[]" id="587" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="588" dst_node_input="i" src_node_id="587" src_node_output="result" />
	<Node group="[]" id="588" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -41, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="589" dst_node_input="a" src_node_id="588" src_node_output="o" />
	<Node group="[]" id="589" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="590" dst_node_input="a" src_node_id="589" src_node_output="result" />
	<Node group="[]" id="584" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x5c551d6
0x5b9de1a
0x5ae9779
0x5a37ce9
0x5988d6b
0x58dc807
0x5832bc9
0x578b7ca
0x56e6b25
0x56444fd
0x55a447d
0x55068d5
0x546b13a
0x53d1ce8
0x533ab20
0x52a5b29
0x5212c4e
0x5181de0
0x50f2f34
0x5065fa5
0x4fdae91
0x4f51b5b
0x4eca569
0x4e44c28
0x4dc0f06
0x4d3ed76
0x4cbe6ef
0x4c3faea
0x4bc28e6
0x4b47062
0x4acd0e3
0x4a549f0
0x49ddb13
0x49683da
0x48f43d4
0x4881a94
0x48107af
0x47a0abd
0x4732359
0x46c5120
0x46593b1
0x45eeaad
0x45855b8
0x451d478
0x44b6695
0x4450bb9
0x43ec390
0x4388dc9
0x4326a12
0x42c581d
0x426579e
0x420684b
0x41a89d8
0x414bc00
0x40efe7c
0x4095107
0x403b35f
0x3fe2541
0x3f8a66e
0x3f336a7
0x3edd5af
0x3e88348
0x3e33f39
0x3de0947
0x3d8e13b
0x3d3c6dc
0x3ceb9f6
0x3c9ba52
0x3c4c7bc
0x3bfe203
0x3bb08f3
0x3b63c5d
0x3b17c10
0x3acc7dd
0x3a81f96
0x3a3830e
0x39ef219
0x39a6c8c
0x395f23c
0x39182ff
0x38d1ead
0x388c51d
0x3847627
0x38031a7
0x37bf774
0x377c76b
0x373a167
0x36f8544
0x36b72df
0x3676a16
0x3636ac6
0x35f74ce
0x35b880e
0x357a466
0x353c9b7
0x34ff7e0
0x34c2ec5
0x3486e47
0x344b649
0x34106ae
0x33d5f5a
0x339c032
0x3362919
0x33299f5
0x32f12ad
0x32b9325
0x3281b44
0x324aaf2
0x3214216
0x31de098
0x31a865f
0x3173355
0x313e763
0x310a271
0x30d646a
0x30a2d38
0x306fcc6
0x303d2fd
0x300afca
0x2fd9318
0x2fa7cd3
0x2f76ce7
0x2f46340
0x2f15fcb
0x2ee6276
0x2eb6b2e
0x2e879e0
0x2e58e7b</MemoryData>
	</Node>
	<Edge dst_node_id="590" dst_node_input="b" src_node_id="584" src_node_output="dout" />
	<Node group="[]" id="590" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="591" dst_node_input="i" src_node_id="590" src_node_output="result" />
	<Node group="[]" id="591" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -33, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="592" dst_node_input="a" src_node_id="591" src_node_output="o" />
	<Node group="[]" id="592" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="593" dst_node_input="a" src_node_id="592" src_node_output="result" />
	<Node group="[]" id="585" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x0000000
0x016fe51
0x02dcf2d
0x0447347
0x05aeb4e
0x07137eb
0x08759c5
0x09d517f
0x0b31fb8
0x0c8c50b
0x0de4212
0x0f39761
0x108c589
0x11dcd19
0x132ae9e
0x1476aa0
0x15c01a4
0x170742d
0x184c2bd
0x198edd0
0x1acf5e3
0x1c0db6d
0x1d49ee5
0x1e840be
0x1fbc16c
0x20f215b
0x22260fb
0x23580b6
0x24880f5
0x25b6220
0x26e249a
0x280c8c7
0x2934f09
0x2a5b7c0
0x2b80347
0x2ca31fd
0x2dc443a
0x2ee3a57
0x30014ac
0x311d38e
0x3237751
0x3350047
0x3466ec1
0x357c30f
0x368fd7f
0x37a1e5d
0x38b25f6
0x39c1492
0x3acea7c
0x3bda7fb
0x3ce4d54
0x3dedace
0x3ef50ad
0x3ffaf33
0x40ff6a3
0x420273d
0x4304140
0x44044ec
0x450327f
0x4600a34
0x46fcc48
0x47f78f5
0x48f1075
0x49e9301
0x4ae00d2
0x4bd5a1d
0x4cc9f1b
0x4dbcfff
0x4eaecff
0x4f9f64e
0x508ec20
0x517cea6
0x5269e13
0x5355a97
0x5440462
0x5529ba3
0x561208a
0x56f9343
0x57df3fd
0x58c42e4
0x59a8024
0x5a8abe8
0x5b6c65b
0x5c4cfa7
0x5d2c7f6
0x5e0af70
0x5ee863e
0x5fc4c88
0x60a0275
0x617a82c
0x6253dd3
0x632c38f
0x6403986
0x64d9fdb
0x65af6b5
0x6683e35
0x675767f
0x6829fb7
0x68fb9fd
0x69cc574
0x6a9c23d
0x6b6b07a
0x6c3904a
0x6d061cd
0x6dd2524
0x6e9da6d
0x6f681c7
0x7031b51
0x70fa729
0x71c256c
0x7289637
0x734f9a8
0x7414fdb
0x74d98ed
0x759d4f8
0x7660419
0x772266b
0x77e3c08
0x78a450c
0x796418f
0x7a231ad
0x7ae157e
0x7b9ed1c
0x7c5b8a0
0x7d17823
0x7dd2bbc
0x7e8d384
0x7f46f93</MemoryData>
	</Node>
	<Edge dst_node_id="593" dst_node_input="b" src_node_id="585" src_node_output="dout" />
	<Node group="[]" id="593" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="594" dst_node_input="i" src_node_id="593" src_node_output="result" />
	<Node group="[]" id="594" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="598" dst_node_input="b" src_node_id="594" src_node_output="o" />
	<Node group="[]" id="598" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="599" dst_node_input="i" src_node_id="598" src_node_output="result" />
	<Node group="[]" id="599" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="602" dst_node_input="a" src_node_id="599" src_node_output="o" />
	<Node group="[]" id="2784" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f317218; 0.6931471824645996</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111001100010111001000011000</Value>
		<HexValue>0x3f317218</HexValue>
		<NumericValue>0.6931471824645996</NumericValue>
	</Node>
	<Edge dst_node_id="602" dst_node_input="b" src_node_id="2784" src_node_output="value" />
	<Node group="[]" id="602" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="609" dst_node_input="a" src_node_id="602" src_node_output="result" />
	<Node group="[]" id="603" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="607" dst_node_input="a" src_node_id="603" src_node_output="result" />
	<Node group="[]" id="2651" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="606" dst_node_input="a" src_node_id="2651" src_node_output="floatOut" />
	<Node group="[]" id="606" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="607" dst_node_input="b" src_node_id="606" src_node_output="result" />
	<Node group="[]" id="607" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="608" dst_node_input="a" src_node_id="607" src_node_output="result" />
	<Node group="[]" id="608" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="609" dst_node_input="b" src_node_id="608" src_node_output="result" />
	<Node group="[]" id="609" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="613" dst_node_input="a" src_node_id="609" src_node_output="result" />
	<Node group="[]" id="610" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="612" dst_node_input="b" src_node_id="610" src_node_output="result" />
	<Node group="[]" id="612" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="613" dst_node_input="b" src_node_id="612" src_node_output="result" />
	<Node group="[]" id="613" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:55)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="617" dst_node_input="a" src_node_id="613" src_node_output="result" />
	<Edge dst_node_id="718" dst_node_input="a" src_node_id="613" src_node_output="result" />
	<Edge dst_node_id="726" dst_node_input="a" src_node_id="613" src_node_output="result" />
	<Edge dst_node_id="820" dst_node_input="a" src_node_id="613" src_node_output="result" />
	<Edge dst_node_id="2652" dst_node_input="floatIn" src_node_id="613" src_node_output="result" />
	<Node group="[]" id="2783" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="820" dst_node_input="b" src_node_id="2783" src_node_output="value" />
	<Node group="[]" id="820" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="823" dst_node_input="sel" src_node_id="820" src_node_output="result" />
	<Node group="[]" id="2782" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="818" dst_node_input="a" src_node_id="2782" src_node_output="value" />
	<Node group="[]" id="703" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ecc422a; 0.3989422917366028</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:21)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110110011000100001000101010</Value>
		<HexValue>0x3ecc422a</HexValue>
		<NumericValue>0.3989422917366028</NumericValue>
	</Node>
	<Edge dst_node_id="806" dst_node_input="a" src_node_id="703" src_node_output="value" />
	<Node group="[]" id="726" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="729" dst_node_input="a" src_node_id="726" src_node_output="result" />
	<Node group="[]" id="2652" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="729" dst_node_input="b" src_node_id="2652" src_node_output="floatOut" />
	<Node group="[]" id="729" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="731" dst_node_input="input" src_node_id="729" src_node_output="result" />
	<Edge dst_node_id="736" dst_node_input="a" src_node_id="729" src_node_output="result" />
	<Edge dst_node_id="740" dst_node_input="a" src_node_id="729" src_node_output="result" />
	<Node group="[]" id="730" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="731" dst_node_input="doubt" src_node_id="730" src_node_output="value" />
	<Node group="[]" id="731" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="732" dst_node_input="i" src_node_id="731" src_node_output="output" />
	<Node group="[]" id="732" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="734" dst_node_input="a" src_node_id="732" src_node_output="o" />
	<Node group="[]" id="2781" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="734" dst_node_input="b" src_node_id="2781" src_node_output="value" />
	<Node group="[]" id="734" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="737" dst_node_input="input" src_node_id="734" src_node_output="result" />
	<Edge dst_node_id="741" dst_node_input="input" src_node_id="734" src_node_output="result" />
	<Edge dst_node_id="743" dst_node_input="input" src_node_id="734" src_node_output="result" />
	<Node group="[]" id="743" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="744" dst_node_input="i" src_node_id="743" src_node_output="output" />
	<Edge dst_node_id="745" dst_node_input="i" src_node_id="743" src_node_output="output" />
	<Edge dst_node_id="746" dst_node_input="i" src_node_id="743" src_node_output="output" />
	<Edge dst_node_id="747" dst_node_input="i" src_node_id="743" src_node_output="output" />
	<Node group="[]" id="744" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="765" dst_node_input="i" src_node_id="744" src_node_output="o" />
	<Node group="[]" id="765" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="767" dst_node_input="a" src_node_id="765" src_node_output="o" />
	<Node group="[]" id="2780" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="767" dst_node_input="b" src_node_id="2780" src_node_output="value" />
	<Node group="[]" id="767" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="771" dst_node_input="a" src_node_id="767" src_node_output="result" />
	<Node group="[]" id="746" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="803" dst_node_input="input" src_node_id="746" src_node_output="o" />
	<Node group="[]" id="803" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="804" dst_node_input="input" src_node_id="803" src_node_output="output" />
	<Node group="[]" id="804" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="805" dst_node_input="addr" src_node_id="804" src_node_output="output" />
	<Node group="[]" id="805" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="755" dst_node_input="a" src_node_id="805" src_node_output="dout" />
	<Edge dst_node_id="756" dst_node_input="b" src_node_id="805" src_node_output="dout" />
	<Node group="[]" id="745" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="800" dst_node_input="input" src_node_id="745" src_node_output="o" />
	<Node group="[]" id="800" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="801" dst_node_input="input" src_node_id="800" src_node_output="output" />
	<Node group="[]" id="801" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="802" dst_node_input="addr" src_node_id="801" src_node_output="output" />
	<Node group="[]" id="802" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="751" dst_node_input="a" src_node_id="802" src_node_output="dout" />
	<Edge dst_node_id="752" dst_node_input="b" src_node_id="802" src_node_output="dout" />
	<Node group="[]" id="748" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="749" dst_node_input="a" src_node_id="748" src_node_output="value" />
	<Node group="[]" id="747" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="749" dst_node_input="b" src_node_id="747" src_node_output="o" />
	<Node group="[]" id="749" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="750" dst_node_input="i" src_node_id="749" src_node_output="result" />
	<Node group="[]" id="750" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="751" dst_node_input="b" src_node_id="750" src_node_output="o" />
	<Edge dst_node_id="752" dst_node_input="a" src_node_id="750" src_node_output="o" />
	<Node group="[]" id="751" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="753" dst_node_input="a" src_node_id="751" src_node_output="result" />
	<Node group="[]" id="752" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="753" dst_node_input="b" src_node_id="752" src_node_output="result" />
	<Node group="[]" id="753" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="754" dst_node_input="i" src_node_id="753" src_node_output="result" />
	<Node group="[]" id="754" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="755" dst_node_input="b" src_node_id="754" src_node_output="o" />
	<Edge dst_node_id="756" dst_node_input="a" src_node_id="754" src_node_output="o" />
	<Node group="[]" id="755" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="757" dst_node_input="a" src_node_id="755" src_node_output="result" />
	<Node group="[]" id="756" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="757" dst_node_input="b" src_node_id="756" src_node_output="result" />
	<Node group="[]" id="757" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="758" dst_node_input="i" src_node_id="757" src_node_output="result" />
	<Node group="[]" id="758" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="759" dst_node_input="i" src_node_id="758" src_node_output="o" />
	<Node group="[]" id="759" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="761" dst_node_input="a" src_node_id="759" src_node_output="o" />
	<Edge dst_node_id="763" dst_node_input="option0" src_node_id="759" src_node_output="o" />
	<Node group="[]" id="2779" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="761" dst_node_input="b" src_node_id="2779" src_node_output="value" />
	<Node group="[]" id="761" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="763" dst_node_input="sel" src_node_id="761" src_node_output="result" />
	<Edge dst_node_id="770" dst_node_input="sel" src_node_id="761" src_node_output="result" />
	<Node group="[]" id="769" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="770" dst_node_input="option0" src_node_id="769" src_node_output="value" />
	<Node group="[]" id="768" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="770" dst_node_input="option1" src_node_id="768" src_node_output="value" />
	<Node group="[]" id="770" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="771" dst_node_input="b" src_node_id="770" src_node_output="result" />
	<Node group="[]" id="771" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="773" dst_node_input="a" src_node_id="771" src_node_output="result" />
	<Edge dst_node_id="778" dst_node_input="a" src_node_id="771" src_node_output="result" />
	<Edge dst_node_id="782" dst_node_input="i" src_node_id="771" src_node_output="result" />
	<Node group="[]" id="2778" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="773" dst_node_input="b" src_node_id="2778" src_node_output="value" />
	<Node group="[]" id="773" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="775" dst_node_input="a" src_node_id="773" src_node_output="result" />
	<Node group="[]" id="2777" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="736" dst_node_input="b" src_node_id="2777" src_node_output="value" />
	<Node group="[]" id="736" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="738" dst_node_input="a" src_node_id="736" src_node_output="result" />
	<Node group="[]" id="737" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="738" dst_node_input="b" src_node_id="737" src_node_output="output" />
	<Node group="[]" id="738" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="774" dst_node_input="a" src_node_id="738" src_node_output="result" />
	<Edge dst_node_id="781" dst_node_input="b" src_node_id="738" src_node_output="result" />
	<Node group="[]" id="774" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="775" dst_node_input="b" src_node_id="774" src_node_output="result" />
	<Node group="[]" id="775" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="776" dst_node_input="a" src_node_id="775" src_node_output="result" />
	<Node group="[]" id="2776" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="740" dst_node_input="b" src_node_id="2776" src_node_output="value" />
	<Node group="[]" id="740" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="742" dst_node_input="a" src_node_id="740" src_node_output="result" />
	<Node group="[]" id="741" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="742" dst_node_input="b" src_node_id="741" src_node_output="output" />
	<Node group="[]" id="742" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="776" dst_node_input="b" src_node_id="742" src_node_output="result" />
	<Edge dst_node_id="779" dst_node_input="a" src_node_id="742" src_node_output="result" />
	<Node group="[]" id="776" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="790" dst_node_input="in0" src_node_id="776" src_node_output="result" />
	<Node group="[]" id="2775" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="778" dst_node_input="b" src_node_id="2775" src_node_output="value" />
	<Node group="[]" id="778" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="780" dst_node_input="a" src_node_id="778" src_node_output="result" />
	<Node group="[]" id="779" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="780" dst_node_input="b" src_node_id="779" src_node_output="result" />
	<Node group="[]" id="780" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="781" dst_node_input="a" src_node_id="780" src_node_output="result" />
	<Node group="[]" id="781" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="790" dst_node_input="in1" src_node_id="781" src_node_output="result" />
	<Node group="[]" id="790" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="798" dst_node_input="sel" src_node_id="790" src_node_output="result" />
	<Node group="[]" id="2627" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="786" dst_node_input="in0" src_node_id="2627" src_node_output="value" />
	<Node group="[]" id="782" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="785" dst_node_input="input" src_node_id="782" src_node_output="o" />
	<Node group="[]" id="785" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="786" dst_node_input="in1" src_node_id="785" src_node_output="output" />
	<Node group="[]" id="786" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="788" dst_node_input="in0" src_node_id="786" src_node_output="result" />
	<Node group="[]" id="762" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="763" dst_node_input="option1" src_node_id="762" src_node_output="value" />
	<Node group="[]" id="763" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="764" dst_node_input="i" src_node_id="763" src_node_output="result" />
	<Node group="[]" id="764" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="787" dst_node_input="input" src_node_id="764" src_node_output="o" />
	<Node group="[]" id="787" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="788" dst_node_input="in1" src_node_id="787" src_node_output="output" />
	<Node group="[]" id="788" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="789" dst_node_input="input" src_node_id="788" src_node_output="result" />
	<Node group="[]" id="789" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="798" dst_node_input="option0" src_node_id="789" src_node_output="output" />
	<Node group="[]" id="791" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="793" dst_node_input="in0" src_node_id="791" src_node_output="value" />
	<Node group="[]" id="792" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="793" dst_node_input="in1" src_node_id="792" src_node_output="value" />
	<Node group="[]" id="793" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="795" dst_node_input="in0" src_node_id="793" src_node_output="result" />
	<Node group="[]" id="794" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="795" dst_node_input="in1" src_node_id="794" src_node_output="value" />
	<Node group="[]" id="795" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="796" dst_node_input="input" src_node_id="795" src_node_output="result" />
	<Node group="[]" id="796" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="798" dst_node_input="option1" src_node_id="796" src_node_output="output" />
	<Edge dst_node_id="798" dst_node_input="option3" src_node_id="796" src_node_output="output" />
	<Node group="[]" id="797" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="798" dst_node_input="option2" src_node_id="797" src_node_output="value" />
	<Node group="[]" id="798" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="806" dst_node_input="b" src_node_id="798" src_node_output="result" />
	<Node group="[]" id="806" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="816" dst_node_input="a" src_node_id="806" src_node_output="result" />
	<Node group="[]" id="701" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3faa466f; 1.3302744626998901</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:19)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111101010100100011001101111</Value>
		<HexValue>0x3faa466f</HexValue>
		<NumericValue>1.3302744626998901</NumericValue>
	</Node>
	<Edge dst_node_id="807" dst_node_input="a" src_node_id="701" src_node_output="value" />
	<Node group="[]" id="2774" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="725" dst_node_input="a" src_node_id="2774" src_node_output="value" />
	<Node group="[]" id="2773" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="723" dst_node_input="a" src_node_id="2773" src_node_output="value" />
	<Node group="[]" id="717" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:336)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="719" dst_node_input="in0" src_node_id="717" src_node_output="value" />
	<Node group="[]" id="718" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:337)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge dst_node_id="719" dst_node_input="in1" src_node_id="718" src_node_output="result" />
	<Node group="[]" id="719" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:338)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="720" dst_node_input="input" src_node_id="719" src_node_output="result" />
	<Node group="[]" id="720" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:339)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="721" dst_node_input="a" src_node_id="720" src_node_output="output" />
	<Node group="[]" id="702" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3e6d3389; 0.23164190351963043</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:20)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110011011010011001110001001</Value>
		<HexValue>0x3e6d3389</HexValue>
		<NumericValue>0.23164190351963043</NumericValue>
	</Node>
	<Edge dst_node_id="721" dst_node_input="b" src_node_id="702" src_node_output="value" />
	<Node group="[]" id="721" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="723" dst_node_input="b" src_node_id="721" src_node_output="result" />
	<Node group="[]" id="723" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="725" dst_node_input="b" src_node_id="723" src_node_output="result" />
	<Node group="[]" id="725" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="807" dst_node_input="b" src_node_id="725" src_node_output="result" />
	<Edge dst_node_id="809" dst_node_input="b" src_node_id="725" src_node_output="result" />
	<Edge dst_node_id="811" dst_node_input="b" src_node_id="725" src_node_output="result" />
	<Edge dst_node_id="813" dst_node_input="b" src_node_id="725" src_node_output="result" />
	<Edge dst_node_id="815" dst_node_input="b" src_node_id="725" src_node_output="result" />
	<Node group="[]" id="807" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="808" dst_node_input="a" src_node_id="807" src_node_output="result" />
	<Node group="[]" id="700" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbfe91eea; -1.8212559223175049</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:18)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111111111010010001111011101010</Value>
		<HexValue>0xbfe91eea</HexValue>
		<NumericValue>-1.8212559223175049</NumericValue>
	</Node>
	<Edge dst_node_id="808" dst_node_input="b" src_node_id="700" src_node_output="value" />
	<Node group="[]" id="808" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="809" dst_node_input="a" src_node_id="808" src_node_output="result" />
	<Node group="[]" id="809" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="810" dst_node_input="a" src_node_id="809" src_node_output="result" />
	<Node group="[]" id="699" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3fe40778; 1.781477928161621</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:17)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111111001000000011101111000</Value>
		<HexValue>0x3fe40778</HexValue>
		<NumericValue>1.781477928161621</NumericValue>
	</Node>
	<Edge dst_node_id="810" dst_node_input="b" src_node_id="699" src_node_output="value" />
	<Node group="[]" id="810" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="811" dst_node_input="a" src_node_id="810" src_node_output="result" />
	<Node group="[]" id="811" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="812" dst_node_input="a" src_node_id="811" src_node_output="result" />
	<Node group="[]" id="698" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbeb68f87; -0.3565637767314911</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:16)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111110101101101000111110000111</Value>
		<HexValue>0xbeb68f87</HexValue>
		<NumericValue>-0.3565637767314911</NumericValue>
	</Node>
	<Edge dst_node_id="812" dst_node_input="b" src_node_id="698" src_node_output="value" />
	<Node group="[]" id="812" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="813" dst_node_input="a" src_node_id="812" src_node_output="result" />
	<Node group="[]" id="813" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="814" dst_node_input="a" src_node_id="813" src_node_output="result" />
	<Node group="[]" id="697" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ea385fa; 0.3193815350532532</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:15)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110101000111000010111111010</Value>
		<HexValue>0x3ea385fa</HexValue>
		<NumericValue>0.3193815350532532</NumericValue>
	</Node>
	<Edge dst_node_id="814" dst_node_input="b" src_node_id="697" src_node_output="value" />
	<Node group="[]" id="814" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="815" dst_node_input="a" src_node_id="814" src_node_output="result" />
	<Node group="[]" id="815" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="816" dst_node_input="b" src_node_id="815" src_node_output="result" />
	<Node group="[]" id="816" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="818" dst_node_input="b" src_node_id="816" src_node_output="result" />
	<Node group="[]" id="818" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="822" dst_node_input="b" src_node_id="818" src_node_output="result" />
	<Edge dst_node_id="823" dst_node_input="option0" src_node_id="818" src_node_output="result" />
	<Node group="[]" id="2772" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="822" dst_node_input="a" src_node_id="2772" src_node_output="value" />
	<Node group="[]" id="822" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="823" dst_node_input="option1" src_node_id="822" src_node_output="result" />
	<Node group="[]" id="823" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="824" dst_node_input="b" src_node_id="823" src_node_output="result" />
	<Node group="[]" id="824" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1032" dst_node_input="a" src_node_id="824" src_node_output="result" />
	<Node group="[]" id="825" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="826" dst_node_input="a" src_node_id="825" src_node_output="result" />
	<Node group="[]" id="826" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="828" dst_node_input="input" src_node_id="826" src_node_output="result" />
	<Edge dst_node_id="833" dst_node_input="a" src_node_id="826" src_node_output="result" />
	<Edge dst_node_id="837" dst_node_input="a" src_node_id="826" src_node_output="result" />
	<Node group="[]" id="827" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="828" dst_node_input="doubt" src_node_id="827" src_node_output="value" />
	<Node group="[]" id="828" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="829" dst_node_input="i" src_node_id="828" src_node_output="output" />
	<Node group="[]" id="829" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="831" dst_node_input="a" src_node_id="829" src_node_output="o" />
	<Node group="[]" id="2771" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="831" dst_node_input="b" src_node_id="2771" src_node_output="value" />
	<Node group="[]" id="831" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="834" dst_node_input="input" src_node_id="831" src_node_output="result" />
	<Edge dst_node_id="838" dst_node_input="input" src_node_id="831" src_node_output="result" />
	<Edge dst_node_id="840" dst_node_input="input" src_node_id="831" src_node_output="result" />
	<Node group="[]" id="840" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="841" dst_node_input="i" src_node_id="840" src_node_output="output" />
	<Edge dst_node_id="842" dst_node_input="i" src_node_id="840" src_node_output="output" />
	<Edge dst_node_id="843" dst_node_input="i" src_node_id="840" src_node_output="output" />
	<Edge dst_node_id="844" dst_node_input="i" src_node_id="840" src_node_output="output" />
	<Node group="[]" id="841" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="862" dst_node_input="i" src_node_id="841" src_node_output="o" />
	<Node group="[]" id="862" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="864" dst_node_input="a" src_node_id="862" src_node_output="o" />
	<Node group="[]" id="2770" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="864" dst_node_input="b" src_node_id="2770" src_node_output="value" />
	<Node group="[]" id="864" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="868" dst_node_input="a" src_node_id="864" src_node_output="result" />
	<Node group="[]" id="843" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="900" dst_node_input="input" src_node_id="843" src_node_output="o" />
	<Node group="[]" id="900" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="901" dst_node_input="input" src_node_id="900" src_node_output="output" />
	<Node group="[]" id="901" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="902" dst_node_input="addr" src_node_id="901" src_node_output="output" />
	<Node group="[]" id="902" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="852" dst_node_input="a" src_node_id="902" src_node_output="dout" />
	<Edge dst_node_id="853" dst_node_input="b" src_node_id="902" src_node_output="dout" />
	<Node group="[]" id="842" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="897" dst_node_input="input" src_node_id="842" src_node_output="o" />
	<Node group="[]" id="897" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="898" dst_node_input="input" src_node_id="897" src_node_output="output" />
	<Node group="[]" id="898" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="899" dst_node_input="addr" src_node_id="898" src_node_output="output" />
	<Node group="[]" id="899" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="848" dst_node_input="a" src_node_id="899" src_node_output="dout" />
	<Edge dst_node_id="849" dst_node_input="b" src_node_id="899" src_node_output="dout" />
	<Node group="[]" id="845" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="846" dst_node_input="a" src_node_id="845" src_node_output="value" />
	<Node group="[]" id="844" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="846" dst_node_input="b" src_node_id="844" src_node_output="o" />
	<Node group="[]" id="846" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="847" dst_node_input="i" src_node_id="846" src_node_output="result" />
	<Node group="[]" id="847" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="848" dst_node_input="b" src_node_id="847" src_node_output="o" />
	<Edge dst_node_id="849" dst_node_input="a" src_node_id="847" src_node_output="o" />
	<Node group="[]" id="848" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="850" dst_node_input="a" src_node_id="848" src_node_output="result" />
	<Node group="[]" id="849" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="850" dst_node_input="b" src_node_id="849" src_node_output="result" />
	<Node group="[]" id="850" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="851" dst_node_input="i" src_node_id="850" src_node_output="result" />
	<Node group="[]" id="851" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="852" dst_node_input="b" src_node_id="851" src_node_output="o" />
	<Edge dst_node_id="853" dst_node_input="a" src_node_id="851" src_node_output="o" />
	<Node group="[]" id="852" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="854" dst_node_input="a" src_node_id="852" src_node_output="result" />
	<Node group="[]" id="853" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="854" dst_node_input="b" src_node_id="853" src_node_output="result" />
	<Node group="[]" id="854" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="855" dst_node_input="i" src_node_id="854" src_node_output="result" />
	<Node group="[]" id="855" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="856" dst_node_input="i" src_node_id="855" src_node_output="o" />
	<Node group="[]" id="856" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="858" dst_node_input="a" src_node_id="856" src_node_output="o" />
	<Edge dst_node_id="860" dst_node_input="option0" src_node_id="856" src_node_output="o" />
	<Node group="[]" id="2769" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="858" dst_node_input="b" src_node_id="2769" src_node_output="value" />
	<Node group="[]" id="858" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="860" dst_node_input="sel" src_node_id="858" src_node_output="result" />
	<Edge dst_node_id="867" dst_node_input="sel" src_node_id="858" src_node_output="result" />
	<Node group="[]" id="866" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="867" dst_node_input="option0" src_node_id="866" src_node_output="value" />
	<Node group="[]" id="865" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="867" dst_node_input="option1" src_node_id="865" src_node_output="value" />
	<Node group="[]" id="867" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="868" dst_node_input="b" src_node_id="867" src_node_output="result" />
	<Node group="[]" id="868" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="870" dst_node_input="a" src_node_id="868" src_node_output="result" />
	<Edge dst_node_id="875" dst_node_input="a" src_node_id="868" src_node_output="result" />
	<Edge dst_node_id="879" dst_node_input="i" src_node_id="868" src_node_output="result" />
	<Node group="[]" id="2768" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="870" dst_node_input="b" src_node_id="2768" src_node_output="value" />
	<Node group="[]" id="870" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="872" dst_node_input="a" src_node_id="870" src_node_output="result" />
	<Node group="[]" id="2767" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="833" dst_node_input="b" src_node_id="2767" src_node_output="value" />
	<Node group="[]" id="833" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="835" dst_node_input="a" src_node_id="833" src_node_output="result" />
	<Node group="[]" id="834" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="835" dst_node_input="b" src_node_id="834" src_node_output="output" />
	<Node group="[]" id="835" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="871" dst_node_input="a" src_node_id="835" src_node_output="result" />
	<Edge dst_node_id="878" dst_node_input="b" src_node_id="835" src_node_output="result" />
	<Node group="[]" id="871" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="872" dst_node_input="b" src_node_id="871" src_node_output="result" />
	<Node group="[]" id="872" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="873" dst_node_input="a" src_node_id="872" src_node_output="result" />
	<Node group="[]" id="2766" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="837" dst_node_input="b" src_node_id="2766" src_node_output="value" />
	<Node group="[]" id="837" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="839" dst_node_input="a" src_node_id="837" src_node_output="result" />
	<Node group="[]" id="838" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="839" dst_node_input="b" src_node_id="838" src_node_output="output" />
	<Node group="[]" id="839" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="873" dst_node_input="b" src_node_id="839" src_node_output="result" />
	<Edge dst_node_id="876" dst_node_input="a" src_node_id="839" src_node_output="result" />
	<Node group="[]" id="873" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="887" dst_node_input="in0" src_node_id="873" src_node_output="result" />
	<Node group="[]" id="2765" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="875" dst_node_input="b" src_node_id="2765" src_node_output="value" />
	<Node group="[]" id="875" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="877" dst_node_input="a" src_node_id="875" src_node_output="result" />
	<Node group="[]" id="876" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="877" dst_node_input="b" src_node_id="876" src_node_output="result" />
	<Node group="[]" id="877" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="878" dst_node_input="a" src_node_id="877" src_node_output="result" />
	<Node group="[]" id="878" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="887" dst_node_input="in1" src_node_id="878" src_node_output="result" />
	<Node group="[]" id="887" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="895" dst_node_input="sel" src_node_id="887" src_node_output="result" />
	<Node group="[]" id="2628" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="883" dst_node_input="in0" src_node_id="2628" src_node_output="value" />
	<Node group="[]" id="879" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="882" dst_node_input="input" src_node_id="879" src_node_output="o" />
	<Node group="[]" id="882" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="883" dst_node_input="in1" src_node_id="882" src_node_output="output" />
	<Node group="[]" id="883" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="885" dst_node_input="in0" src_node_id="883" src_node_output="result" />
	<Node group="[]" id="859" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="860" dst_node_input="option1" src_node_id="859" src_node_output="value" />
	<Node group="[]" id="860" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="861" dst_node_input="i" src_node_id="860" src_node_output="result" />
	<Node group="[]" id="861" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="884" dst_node_input="input" src_node_id="861" src_node_output="o" />
	<Node group="[]" id="884" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="885" dst_node_input="in1" src_node_id="884" src_node_output="output" />
	<Node group="[]" id="885" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="886" dst_node_input="input" src_node_id="885" src_node_output="result" />
	<Node group="[]" id="886" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="895" dst_node_input="option0" src_node_id="886" src_node_output="output" />
	<Node group="[]" id="888" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="890" dst_node_input="in0" src_node_id="888" src_node_output="value" />
	<Node group="[]" id="889" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="890" dst_node_input="in1" src_node_id="889" src_node_output="value" />
	<Node group="[]" id="890" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="892" dst_node_input="in0" src_node_id="890" src_node_output="result" />
	<Node group="[]" id="891" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="892" dst_node_input="in1" src_node_id="891" src_node_output="value" />
	<Node group="[]" id="892" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="893" dst_node_input="input" src_node_id="892" src_node_output="result" />
	<Node group="[]" id="893" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="895" dst_node_input="option1" src_node_id="893" src_node_output="output" />
	<Edge dst_node_id="895" dst_node_input="option3" src_node_id="893" src_node_output="output" />
	<Node group="[]" id="894" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="895" dst_node_input="option2" src_node_id="894" src_node_output="value" />
	<Node group="[]" id="895" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="903" dst_node_input="b" src_node_id="895" src_node_output="result" />
	<Node group="[]" id="903" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1031" dst_node_input="a" src_node_id="903" src_node_output="result" />
	<Node group="[]" id="614" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:56)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="616" dst_node_input="b" src_node_id="614" src_node_output="result" />
	<Node group="[]" id="616" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:56)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="617" dst_node_input="b" src_node_id="616" src_node_output="result" />
	<Node group="[]" id="617" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:56)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="925" dst_node_input="a" src_node_id="617" src_node_output="result" />
	<Edge dst_node_id="933" dst_node_input="a" src_node_id="617" src_node_output="result" />
	<Edge dst_node_id="1027" dst_node_input="a" src_node_id="617" src_node_output="result" />
	<Edge dst_node_id="2653" dst_node_input="floatIn" src_node_id="617" src_node_output="result" />
	<Node group="[]" id="2764" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1027" dst_node_input="b" src_node_id="2764" src_node_output="value" />
	<Node group="[]" id="1027" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1030" dst_node_input="sel" src_node_id="1027" src_node_output="result" />
	<Node group="[]" id="2763" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1025" dst_node_input="a" src_node_id="2763" src_node_output="value" />
	<Node group="[]" id="910" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ecc422a; 0.3989422917366028</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:21)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110110011000100001000101010</Value>
		<HexValue>0x3ecc422a</HexValue>
		<NumericValue>0.3989422917366028</NumericValue>
	</Node>
	<Edge dst_node_id="1013" dst_node_input="a" src_node_id="910" src_node_output="value" />
	<Node group="[]" id="933" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="936" dst_node_input="a" src_node_id="933" src_node_output="result" />
	<Node group="[]" id="2653" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="936" dst_node_input="b" src_node_id="2653" src_node_output="floatOut" />
	<Node group="[]" id="936" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="938" dst_node_input="input" src_node_id="936" src_node_output="result" />
	<Edge dst_node_id="943" dst_node_input="a" src_node_id="936" src_node_output="result" />
	<Edge dst_node_id="947" dst_node_input="a" src_node_id="936" src_node_output="result" />
	<Node group="[]" id="937" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="938" dst_node_input="doubt" src_node_id="937" src_node_output="value" />
	<Node group="[]" id="938" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="939" dst_node_input="i" src_node_id="938" src_node_output="output" />
	<Node group="[]" id="939" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="941" dst_node_input="a" src_node_id="939" src_node_output="o" />
	<Node group="[]" id="2762" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="941" dst_node_input="b" src_node_id="2762" src_node_output="value" />
	<Node group="[]" id="941" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="944" dst_node_input="input" src_node_id="941" src_node_output="result" />
	<Edge dst_node_id="948" dst_node_input="input" src_node_id="941" src_node_output="result" />
	<Edge dst_node_id="950" dst_node_input="input" src_node_id="941" src_node_output="result" />
	<Node group="[]" id="950" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="951" dst_node_input="i" src_node_id="950" src_node_output="output" />
	<Edge dst_node_id="952" dst_node_input="i" src_node_id="950" src_node_output="output" />
	<Edge dst_node_id="953" dst_node_input="i" src_node_id="950" src_node_output="output" />
	<Edge dst_node_id="954" dst_node_input="i" src_node_id="950" src_node_output="output" />
	<Node group="[]" id="951" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="972" dst_node_input="i" src_node_id="951" src_node_output="o" />
	<Node group="[]" id="972" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="974" dst_node_input="a" src_node_id="972" src_node_output="o" />
	<Node group="[]" id="2761" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="974" dst_node_input="b" src_node_id="2761" src_node_output="value" />
	<Node group="[]" id="974" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="978" dst_node_input="a" src_node_id="974" src_node_output="result" />
	<Node group="[]" id="953" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1010" dst_node_input="input" src_node_id="953" src_node_output="o" />
	<Node group="[]" id="1010" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1011" dst_node_input="input" src_node_id="1010" src_node_output="output" />
	<Node group="[]" id="1011" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1012" dst_node_input="addr" src_node_id="1011" src_node_output="output" />
	<Node group="[]" id="1012" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="962" dst_node_input="a" src_node_id="1012" src_node_output="dout" />
	<Edge dst_node_id="963" dst_node_input="b" src_node_id="1012" src_node_output="dout" />
	<Node group="[]" id="952" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1007" dst_node_input="input" src_node_id="952" src_node_output="o" />
	<Node group="[]" id="1007" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1008" dst_node_input="input" src_node_id="1007" src_node_output="output" />
	<Node group="[]" id="1008" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1009" dst_node_input="addr" src_node_id="1008" src_node_output="output" />
	<Node group="[]" id="1009" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="958" dst_node_input="a" src_node_id="1009" src_node_output="dout" />
	<Edge dst_node_id="959" dst_node_input="b" src_node_id="1009" src_node_output="dout" />
	<Node group="[]" id="955" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="956" dst_node_input="a" src_node_id="955" src_node_output="value" />
	<Node group="[]" id="954" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="956" dst_node_input="b" src_node_id="954" src_node_output="o" />
	<Node group="[]" id="956" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="957" dst_node_input="i" src_node_id="956" src_node_output="result" />
	<Node group="[]" id="957" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="958" dst_node_input="b" src_node_id="957" src_node_output="o" />
	<Edge dst_node_id="959" dst_node_input="a" src_node_id="957" src_node_output="o" />
	<Node group="[]" id="958" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="960" dst_node_input="a" src_node_id="958" src_node_output="result" />
	<Node group="[]" id="959" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="960" dst_node_input="b" src_node_id="959" src_node_output="result" />
	<Node group="[]" id="960" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="961" dst_node_input="i" src_node_id="960" src_node_output="result" />
	<Node group="[]" id="961" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="962" dst_node_input="b" src_node_id="961" src_node_output="o" />
	<Edge dst_node_id="963" dst_node_input="a" src_node_id="961" src_node_output="o" />
	<Node group="[]" id="962" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="964" dst_node_input="a" src_node_id="962" src_node_output="result" />
	<Node group="[]" id="963" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="964" dst_node_input="b" src_node_id="963" src_node_output="result" />
	<Node group="[]" id="964" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="965" dst_node_input="i" src_node_id="964" src_node_output="result" />
	<Node group="[]" id="965" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="966" dst_node_input="i" src_node_id="965" src_node_output="o" />
	<Node group="[]" id="966" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="968" dst_node_input="a" src_node_id="966" src_node_output="o" />
	<Edge dst_node_id="970" dst_node_input="option0" src_node_id="966" src_node_output="o" />
	<Node group="[]" id="2760" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="968" dst_node_input="b" src_node_id="2760" src_node_output="value" />
	<Node group="[]" id="968" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="970" dst_node_input="sel" src_node_id="968" src_node_output="result" />
	<Edge dst_node_id="977" dst_node_input="sel" src_node_id="968" src_node_output="result" />
	<Node group="[]" id="976" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="977" dst_node_input="option0" src_node_id="976" src_node_output="value" />
	<Node group="[]" id="975" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="977" dst_node_input="option1" src_node_id="975" src_node_output="value" />
	<Node group="[]" id="977" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="978" dst_node_input="b" src_node_id="977" src_node_output="result" />
	<Node group="[]" id="978" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="980" dst_node_input="a" src_node_id="978" src_node_output="result" />
	<Edge dst_node_id="985" dst_node_input="a" src_node_id="978" src_node_output="result" />
	<Edge dst_node_id="989" dst_node_input="i" src_node_id="978" src_node_output="result" />
	<Node group="[]" id="2759" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="980" dst_node_input="b" src_node_id="2759" src_node_output="value" />
	<Node group="[]" id="980" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="982" dst_node_input="a" src_node_id="980" src_node_output="result" />
	<Node group="[]" id="2758" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="943" dst_node_input="b" src_node_id="2758" src_node_output="value" />
	<Node group="[]" id="943" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="945" dst_node_input="a" src_node_id="943" src_node_output="result" />
	<Node group="[]" id="944" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="945" dst_node_input="b" src_node_id="944" src_node_output="output" />
	<Node group="[]" id="945" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="981" dst_node_input="a" src_node_id="945" src_node_output="result" />
	<Edge dst_node_id="988" dst_node_input="b" src_node_id="945" src_node_output="result" />
	<Node group="[]" id="981" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="982" dst_node_input="b" src_node_id="981" src_node_output="result" />
	<Node group="[]" id="982" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="983" dst_node_input="a" src_node_id="982" src_node_output="result" />
	<Node group="[]" id="2757" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="947" dst_node_input="b" src_node_id="2757" src_node_output="value" />
	<Node group="[]" id="947" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="949" dst_node_input="a" src_node_id="947" src_node_output="result" />
	<Node group="[]" id="948" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="949" dst_node_input="b" src_node_id="948" src_node_output="output" />
	<Node group="[]" id="949" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="983" dst_node_input="b" src_node_id="949" src_node_output="result" />
	<Edge dst_node_id="986" dst_node_input="a" src_node_id="949" src_node_output="result" />
	<Node group="[]" id="983" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="997" dst_node_input="in0" src_node_id="983" src_node_output="result" />
	<Node group="[]" id="2756" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="985" dst_node_input="b" src_node_id="2756" src_node_output="value" />
	<Node group="[]" id="985" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="987" dst_node_input="a" src_node_id="985" src_node_output="result" />
	<Node group="[]" id="986" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="987" dst_node_input="b" src_node_id="986" src_node_output="result" />
	<Node group="[]" id="987" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="988" dst_node_input="a" src_node_id="987" src_node_output="result" />
	<Node group="[]" id="988" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="997" dst_node_input="in1" src_node_id="988" src_node_output="result" />
	<Node group="[]" id="997" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1005" dst_node_input="sel" src_node_id="997" src_node_output="result" />
	<Node group="[]" id="2629" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="993" dst_node_input="in0" src_node_id="2629" src_node_output="value" />
	<Node group="[]" id="989" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="992" dst_node_input="input" src_node_id="989" src_node_output="o" />
	<Node group="[]" id="992" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="993" dst_node_input="in1" src_node_id="992" src_node_output="output" />
	<Node group="[]" id="993" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="995" dst_node_input="in0" src_node_id="993" src_node_output="result" />
	<Node group="[]" id="969" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="970" dst_node_input="option1" src_node_id="969" src_node_output="value" />
	<Node group="[]" id="970" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="971" dst_node_input="i" src_node_id="970" src_node_output="result" />
	<Node group="[]" id="971" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="994" dst_node_input="input" src_node_id="971" src_node_output="o" />
	<Node group="[]" id="994" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="995" dst_node_input="in1" src_node_id="994" src_node_output="output" />
	<Node group="[]" id="995" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="996" dst_node_input="input" src_node_id="995" src_node_output="result" />
	<Node group="[]" id="996" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1005" dst_node_input="option0" src_node_id="996" src_node_output="output" />
	<Node group="[]" id="998" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1000" dst_node_input="in0" src_node_id="998" src_node_output="value" />
	<Node group="[]" id="999" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1000" dst_node_input="in1" src_node_id="999" src_node_output="value" />
	<Node group="[]" id="1000" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1002" dst_node_input="in0" src_node_id="1000" src_node_output="result" />
	<Node group="[]" id="1001" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1002" dst_node_input="in1" src_node_id="1001" src_node_output="value" />
	<Node group="[]" id="1002" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1003" dst_node_input="input" src_node_id="1002" src_node_output="result" />
	<Node group="[]" id="1003" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1005" dst_node_input="option1" src_node_id="1003" src_node_output="output" />
	<Edge dst_node_id="1005" dst_node_input="option3" src_node_id="1003" src_node_output="output" />
	<Node group="[]" id="1004" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1005" dst_node_input="option2" src_node_id="1004" src_node_output="value" />
	<Node group="[]" id="1005" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1013" dst_node_input="b" src_node_id="1005" src_node_output="result" />
	<Node group="[]" id="1013" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1023" dst_node_input="a" src_node_id="1013" src_node_output="result" />
	<Node group="[]" id="908" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3faa466f; 1.3302744626998901</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:19)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111101010100100011001101111</Value>
		<HexValue>0x3faa466f</HexValue>
		<NumericValue>1.3302744626998901</NumericValue>
	</Node>
	<Edge dst_node_id="1014" dst_node_input="a" src_node_id="908" src_node_output="value" />
	<Node group="[]" id="2755" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="932" dst_node_input="a" src_node_id="2755" src_node_output="value" />
	<Node group="[]" id="2754" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="930" dst_node_input="a" src_node_id="2754" src_node_output="value" />
	<Node group="[]" id="924" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:336)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="926" dst_node_input="in0" src_node_id="924" src_node_output="value" />
	<Node group="[]" id="925" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:337)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge dst_node_id="926" dst_node_input="in1" src_node_id="925" src_node_output="result" />
	<Node group="[]" id="926" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:338)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="927" dst_node_input="input" src_node_id="926" src_node_output="result" />
	<Node group="[]" id="927" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:339)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="928" dst_node_input="a" src_node_id="927" src_node_output="output" />
	<Node group="[]" id="909" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3e6d3389; 0.23164190351963043</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:20)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110011011010011001110001001</Value>
		<HexValue>0x3e6d3389</HexValue>
		<NumericValue>0.23164190351963043</NumericValue>
	</Node>
	<Edge dst_node_id="928" dst_node_input="b" src_node_id="909" src_node_output="value" />
	<Node group="[]" id="928" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="930" dst_node_input="b" src_node_id="928" src_node_output="result" />
	<Node group="[]" id="930" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="932" dst_node_input="b" src_node_id="930" src_node_output="result" />
	<Node group="[]" id="932" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1014" dst_node_input="b" src_node_id="932" src_node_output="result" />
	<Edge dst_node_id="1016" dst_node_input="b" src_node_id="932" src_node_output="result" />
	<Edge dst_node_id="1018" dst_node_input="b" src_node_id="932" src_node_output="result" />
	<Edge dst_node_id="1020" dst_node_input="b" src_node_id="932" src_node_output="result" />
	<Edge dst_node_id="1022" dst_node_input="b" src_node_id="932" src_node_output="result" />
	<Node group="[]" id="1014" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1015" dst_node_input="a" src_node_id="1014" src_node_output="result" />
	<Node group="[]" id="907" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbfe91eea; -1.8212559223175049</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:18)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111111111010010001111011101010</Value>
		<HexValue>0xbfe91eea</HexValue>
		<NumericValue>-1.8212559223175049</NumericValue>
	</Node>
	<Edge dst_node_id="1015" dst_node_input="b" src_node_id="907" src_node_output="value" />
	<Node group="[]" id="1015" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1016" dst_node_input="a" src_node_id="1015" src_node_output="result" />
	<Node group="[]" id="1016" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1017" dst_node_input="a" src_node_id="1016" src_node_output="result" />
	<Node group="[]" id="906" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3fe40778; 1.781477928161621</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:17)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111111001000000011101111000</Value>
		<HexValue>0x3fe40778</HexValue>
		<NumericValue>1.781477928161621</NumericValue>
	</Node>
	<Edge dst_node_id="1017" dst_node_input="b" src_node_id="906" src_node_output="value" />
	<Node group="[]" id="1017" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1018" dst_node_input="a" src_node_id="1017" src_node_output="result" />
	<Node group="[]" id="1018" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1019" dst_node_input="a" src_node_id="1018" src_node_output="result" />
	<Node group="[]" id="905" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbeb68f87; -0.3565637767314911</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:16)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111110101101101000111110000111</Value>
		<HexValue>0xbeb68f87</HexValue>
		<NumericValue>-0.3565637767314911</NumericValue>
	</Node>
	<Edge dst_node_id="1019" dst_node_input="b" src_node_id="905" src_node_output="value" />
	<Node group="[]" id="1019" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1020" dst_node_input="a" src_node_id="1019" src_node_output="result" />
	<Node group="[]" id="1020" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1021" dst_node_input="a" src_node_id="1020" src_node_output="result" />
	<Node group="[]" id="904" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ea385fa; 0.3193815350532532</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:15)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110101000111000010111111010</Value>
		<HexValue>0x3ea385fa</HexValue>
		<NumericValue>0.3193815350532532</NumericValue>
	</Node>
	<Edge dst_node_id="1021" dst_node_input="b" src_node_id="904" src_node_output="value" />
	<Node group="[]" id="1021" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1022" dst_node_input="a" src_node_id="1021" src_node_output="result" />
	<Node group="[]" id="1022" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1023" dst_node_input="b" src_node_id="1022" src_node_output="result" />
	<Node group="[]" id="1023" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1025" dst_node_input="b" src_node_id="1023" src_node_output="result" />
	<Node group="[]" id="1025" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1029" dst_node_input="b" src_node_id="1025" src_node_output="result" />
	<Edge dst_node_id="1030" dst_node_input="option0" src_node_id="1025" src_node_output="result" />
	<Node group="[]" id="2753" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1029" dst_node_input="a" src_node_id="2753" src_node_output="value" />
	<Node group="[]" id="1029" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1030" dst_node_input="option1" src_node_id="1029" src_node_output="result" />
	<Node group="[]" id="1030" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1031" dst_node_input="b" src_node_id="1030" src_node_output="result" />
	<Node group="[]" id="1031" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1032" dst_node_input="b" src_node_id="1031" src_node_output="result" />
	<Node group="[]" id="1032" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.Black_Scholes_Call(SimpleKernel.maxj:57)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:94)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1039" dst_node_input="b" src_node_id="1032" src_node_output="result" />
	<Node group="[]" id="1039" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1250" dst_node_input="a" src_node_id="1039" src_node_output="result" />
	<Node group="[]" id="2752" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1041" dst_node_input="a" src_node_id="2752" src_node_output="value" />
	<Node group="[]" id="1041" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1042" dst_node_input="a" src_node_id="1041" src_node_output="result" />
	<Node group="[]" id="1042" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1121" dst_node_input="a" src_node_id="1042" src_node_output="result" />
	<Node group="[]" id="1043" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1044" dst_node_input="a" src_node_id="1043" src_node_output="result" />
	<Node group="[]" id="1044" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1046" dst_node_input="input" src_node_id="1044" src_node_output="result" />
	<Edge dst_node_id="1051" dst_node_input="a" src_node_id="1044" src_node_output="result" />
	<Edge dst_node_id="1055" dst_node_input="a" src_node_id="1044" src_node_output="result" />
	<Node group="[]" id="1045" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1046" dst_node_input="doubt" src_node_id="1045" src_node_output="value" />
	<Node group="[]" id="1046" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1047" dst_node_input="i" src_node_id="1046" src_node_output="output" />
	<Node group="[]" id="1047" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1049" dst_node_input="a" src_node_id="1047" src_node_output="o" />
	<Node group="[]" id="2751" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="1049" dst_node_input="b" src_node_id="2751" src_node_output="value" />
	<Node group="[]" id="1049" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1052" dst_node_input="input" src_node_id="1049" src_node_output="result" />
	<Edge dst_node_id="1056" dst_node_input="input" src_node_id="1049" src_node_output="result" />
	<Edge dst_node_id="1058" dst_node_input="input" src_node_id="1049" src_node_output="result" />
	<Node group="[]" id="1058" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1059" dst_node_input="i" src_node_id="1058" src_node_output="output" />
	<Edge dst_node_id="1060" dst_node_input="i" src_node_id="1058" src_node_output="output" />
	<Edge dst_node_id="1061" dst_node_input="i" src_node_id="1058" src_node_output="output" />
	<Edge dst_node_id="1062" dst_node_input="i" src_node_id="1058" src_node_output="output" />
	<Node group="[]" id="1059" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1080" dst_node_input="i" src_node_id="1059" src_node_output="o" />
	<Node group="[]" id="1080" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1082" dst_node_input="a" src_node_id="1080" src_node_output="o" />
	<Node group="[]" id="2750" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="1082" dst_node_input="b" src_node_id="2750" src_node_output="value" />
	<Node group="[]" id="1082" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1086" dst_node_input="a" src_node_id="1082" src_node_output="result" />
	<Node group="[]" id="1061" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1118" dst_node_input="input" src_node_id="1061" src_node_output="o" />
	<Node group="[]" id="1118" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1119" dst_node_input="input" src_node_id="1118" src_node_output="output" />
	<Node group="[]" id="1119" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1120" dst_node_input="addr" src_node_id="1119" src_node_output="output" />
	<Node group="[]" id="1120" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="1070" dst_node_input="a" src_node_id="1120" src_node_output="dout" />
	<Edge dst_node_id="1071" dst_node_input="b" src_node_id="1120" src_node_output="dout" />
	<Node group="[]" id="1060" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1115" dst_node_input="input" src_node_id="1060" src_node_output="o" />
	<Node group="[]" id="1115" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1116" dst_node_input="input" src_node_id="1115" src_node_output="output" />
	<Node group="[]" id="1116" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1117" dst_node_input="addr" src_node_id="1116" src_node_output="output" />
	<Node group="[]" id="1117" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="1066" dst_node_input="a" src_node_id="1117" src_node_output="dout" />
	<Edge dst_node_id="1067" dst_node_input="b" src_node_id="1117" src_node_output="dout" />
	<Node group="[]" id="1063" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="1064" dst_node_input="a" src_node_id="1063" src_node_output="value" />
	<Node group="[]" id="1062" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1064" dst_node_input="b" src_node_id="1062" src_node_output="o" />
	<Node group="[]" id="1064" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1065" dst_node_input="i" src_node_id="1064" src_node_output="result" />
	<Node group="[]" id="1065" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1066" dst_node_input="b" src_node_id="1065" src_node_output="o" />
	<Edge dst_node_id="1067" dst_node_input="a" src_node_id="1065" src_node_output="o" />
	<Node group="[]" id="1066" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1068" dst_node_input="a" src_node_id="1066" src_node_output="result" />
	<Node group="[]" id="1067" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1068" dst_node_input="b" src_node_id="1067" src_node_output="result" />
	<Node group="[]" id="1068" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1069" dst_node_input="i" src_node_id="1068" src_node_output="result" />
	<Node group="[]" id="1069" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1070" dst_node_input="b" src_node_id="1069" src_node_output="o" />
	<Edge dst_node_id="1071" dst_node_input="a" src_node_id="1069" src_node_output="o" />
	<Node group="[]" id="1070" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1072" dst_node_input="a" src_node_id="1070" src_node_output="result" />
	<Node group="[]" id="1071" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1072" dst_node_input="b" src_node_id="1071" src_node_output="result" />
	<Node group="[]" id="1072" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1073" dst_node_input="i" src_node_id="1072" src_node_output="result" />
	<Node group="[]" id="1073" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1074" dst_node_input="i" src_node_id="1073" src_node_output="o" />
	<Node group="[]" id="1074" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1076" dst_node_input="a" src_node_id="1074" src_node_output="o" />
	<Edge dst_node_id="1078" dst_node_input="option0" src_node_id="1074" src_node_output="o" />
	<Node group="[]" id="2749" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1076" dst_node_input="b" src_node_id="2749" src_node_output="value" />
	<Node group="[]" id="1076" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1078" dst_node_input="sel" src_node_id="1076" src_node_output="result" />
	<Edge dst_node_id="1085" dst_node_input="sel" src_node_id="1076" src_node_output="result" />
	<Node group="[]" id="1084" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1085" dst_node_input="option0" src_node_id="1084" src_node_output="value" />
	<Node group="[]" id="1083" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1085" dst_node_input="option1" src_node_id="1083" src_node_output="value" />
	<Node group="[]" id="1085" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1086" dst_node_input="b" src_node_id="1085" src_node_output="result" />
	<Node group="[]" id="1086" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1088" dst_node_input="a" src_node_id="1086" src_node_output="result" />
	<Edge dst_node_id="1093" dst_node_input="a" src_node_id="1086" src_node_output="result" />
	<Edge dst_node_id="1097" dst_node_input="i" src_node_id="1086" src_node_output="result" />
	<Node group="[]" id="2748" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1088" dst_node_input="b" src_node_id="2748" src_node_output="value" />
	<Node group="[]" id="1088" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1090" dst_node_input="a" src_node_id="1088" src_node_output="result" />
	<Node group="[]" id="2747" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1051" dst_node_input="b" src_node_id="2747" src_node_output="value" />
	<Node group="[]" id="1051" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1053" dst_node_input="a" src_node_id="1051" src_node_output="result" />
	<Node group="[]" id="1052" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1053" dst_node_input="b" src_node_id="1052" src_node_output="output" />
	<Node group="[]" id="1053" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1089" dst_node_input="a" src_node_id="1053" src_node_output="result" />
	<Edge dst_node_id="1096" dst_node_input="b" src_node_id="1053" src_node_output="result" />
	<Node group="[]" id="1089" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1090" dst_node_input="b" src_node_id="1089" src_node_output="result" />
	<Node group="[]" id="1090" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1091" dst_node_input="a" src_node_id="1090" src_node_output="result" />
	<Node group="[]" id="2746" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1055" dst_node_input="b" src_node_id="2746" src_node_output="value" />
	<Node group="[]" id="1055" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1057" dst_node_input="a" src_node_id="1055" src_node_output="result" />
	<Node group="[]" id="1056" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1057" dst_node_input="b" src_node_id="1056" src_node_output="output" />
	<Node group="[]" id="1057" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1091" dst_node_input="b" src_node_id="1057" src_node_output="result" />
	<Edge dst_node_id="1094" dst_node_input="a" src_node_id="1057" src_node_output="result" />
	<Node group="[]" id="1091" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1105" dst_node_input="in0" src_node_id="1091" src_node_output="result" />
	<Node group="[]" id="2745" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1093" dst_node_input="b" src_node_id="2745" src_node_output="value" />
	<Node group="[]" id="1093" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1095" dst_node_input="a" src_node_id="1093" src_node_output="result" />
	<Node group="[]" id="1094" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1095" dst_node_input="b" src_node_id="1094" src_node_output="result" />
	<Node group="[]" id="1095" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1096" dst_node_input="a" src_node_id="1095" src_node_output="result" />
	<Node group="[]" id="1096" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1105" dst_node_input="in1" src_node_id="1096" src_node_output="result" />
	<Node group="[]" id="1105" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1113" dst_node_input="sel" src_node_id="1105" src_node_output="result" />
	<Node group="[]" id="2630" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1101" dst_node_input="in0" src_node_id="2630" src_node_output="value" />
	<Node group="[]" id="1097" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1100" dst_node_input="input" src_node_id="1097" src_node_output="o" />
	<Node group="[]" id="1100" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1101" dst_node_input="in1" src_node_id="1100" src_node_output="output" />
	<Node group="[]" id="1101" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1103" dst_node_input="in0" src_node_id="1101" src_node_output="result" />
	<Node group="[]" id="1077" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1078" dst_node_input="option1" src_node_id="1077" src_node_output="value" />
	<Node group="[]" id="1078" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1079" dst_node_input="i" src_node_id="1078" src_node_output="result" />
	<Node group="[]" id="1079" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1102" dst_node_input="input" src_node_id="1079" src_node_output="o" />
	<Node group="[]" id="1102" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1103" dst_node_input="in1" src_node_id="1102" src_node_output="output" />
	<Node group="[]" id="1103" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1104" dst_node_input="input" src_node_id="1103" src_node_output="result" />
	<Node group="[]" id="1104" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1113" dst_node_input="option0" src_node_id="1104" src_node_output="output" />
	<Node group="[]" id="1106" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1108" dst_node_input="in0" src_node_id="1106" src_node_output="value" />
	<Node group="[]" id="1107" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1108" dst_node_input="in1" src_node_id="1107" src_node_output="value" />
	<Node group="[]" id="1108" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1110" dst_node_input="in0" src_node_id="1108" src_node_output="result" />
	<Node group="[]" id="1109" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1110" dst_node_input="in1" src_node_id="1109" src_node_output="value" />
	<Node group="[]" id="1110" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1111" dst_node_input="input" src_node_id="1110" src_node_output="result" />
	<Node group="[]" id="1111" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1113" dst_node_input="option1" src_node_id="1111" src_node_output="output" />
	<Edge dst_node_id="1113" dst_node_input="option3" src_node_id="1111" src_node_output="output" />
	<Node group="[]" id="1112" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1113" dst_node_input="option2" src_node_id="1112" src_node_output="value" />
	<Node group="[]" id="1113" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1121" dst_node_input="b" src_node_id="1113" src_node_output="result" />
	<Node group="[]" id="1121" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1249" dst_node_input="a" src_node_id="1121" src_node_output="result" />
	<Node group="[]" id="502" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="503" dst_node_input="in0" src_node_id="502" src_node_output="value" />
	<Node group="[]" id="485" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="486" dst_node_input="a" src_node_id="485" src_node_output="result" />
	<Edge dst_node_id="501" dst_node_input="a" src_node_id="485" src_node_output="result" />
	<Node group="[]" id="501" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge dst_node_id="503" dst_node_input="in1" src_node_id="501" src_node_output="result" />
	<Node group="[]" id="503" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="input" src_node_id="503" src_node_output="result" />
	<Node group="[]" id="504" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(9)" />
		<Output latency="0" name="output" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:9, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="506" dst_node_input="a" src_node_id="504" src_node_output="output" />
	<Node group="[]" id="2744" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="506" dst_node_input="b" src_node_id="2744" src_node_output="value" />
	<Node group="[]" id="506" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="510" dst_node_input="a" src_node_id="506" src_node_output="result" />
	<Node group="[]" id="486" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge dst_node_id="487" dst_node_input="input" src_node_id="486" src_node_output="result" />
	<Node group="[]" id="487" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(23)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:23, -23, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="489" dst_node_input="input" src_node_id="487" src_node_output="output" />
	<Node group="[]" id="488" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="489" dst_node_input="doubt" src_node_id="488" src_node_output="value" />
	<Node group="[]" id="489" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="490" dst_node_input="i" src_node_id="489" src_node_output="output" />
	<Node group="[]" id="490" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="491" dst_node_input="input" src_node_id="490" src_node_output="o" />
	<Edge dst_node_id="493" dst_node_input="a" src_node_id="490" src_node_output="o" />
	<Edge dst_node_id="495" dst_node_input="input" src_node_id="490" src_node_output="o" />
	<Node group="[]" id="491" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="494" dst_node_input="a" src_node_id="491" src_node_output="output" />
	<Node group="[]" id="2743" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="493" dst_node_input="b" src_node_id="2743" src_node_output="value" />
	<Node group="[]" id="493" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="494" dst_node_input="b" src_node_id="493" src_node_output="result" />
	<Node group="[]" id="494" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="496" dst_node_input="input" src_node_id="494" src_node_output="result" />
	<Node group="[]" id="496" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="499" dst_node_input="sel" src_node_id="496" src_node_output="output" />
	<Edge dst_node_id="509" dst_node_input="sel" src_node_id="496" src_node_output="output" />
	<Node group="[]" id="508" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="509" dst_node_input="option0" src_node_id="508" src_node_output="value" />
	<Node group="[]" id="507" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="509" dst_node_input="option1" src_node_id="507" src_node_output="value" />
	<Node group="[]" id="509" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="510" dst_node_input="b" src_node_id="509" src_node_output="result" />
	<Node group="[]" id="510" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="536" dst_node_input="a" src_node_id="510" src_node_output="result" />
	<Node group="[]" id="495" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="500" dst_node_input="a" src_node_id="495" src_node_output="output" />
	<Node group="[]" id="498" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x0000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0000000000000000000000000000</Value>
		<HexValue>0x0000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="499" dst_node_input="option0" src_node_id="498" src_node_output="value" />
	<Node group="[]" id="497" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="499" dst_node_input="option1" src_node_id="497" src_node_output="value" />
	<Node group="[]" id="499" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="500" dst_node_input="b" src_node_id="499" src_node_output="result" />
	<Node group="[]" id="500" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="513" dst_node_input="input" src_node_id="500" src_node_output="result" />
	<Node group="[]" id="513" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(28)" />
		<Text>&lt;{HWRawBits:28}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="514" dst_node_input="input" src_node_id="513" src_node_output="output" />
	<Node group="[]" id="514" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(28)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:28, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="515" dst_node_input="a" src_node_id="514" src_node_output="output" />
	<Edge dst_node_id="516" dst_node_input="a" src_node_id="514" src_node_output="output" />
	<Node group="[]" id="516" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[25:19]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>19</Base>
		<Width>7</Width>
	</Node>
	<Edge dst_node_id="517" dst_node_input="input" src_node_id="516" src_node_output="result" />
	<Node group="[]" id="517" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="520" dst_node_input="addr" src_node_id="517" src_node_output="output" />
	<Edge dst_node_id="521" dst_node_input="addr" src_node_id="517" src_node_output="output" />
	<Edge dst_node_id="522" dst_node_input="addr" src_node_id="517" src_node_output="output" />
	<Edge dst_node_id="523" dst_node_input="addr" src_node_id="517" src_node_output="output" />
	<Node group="[]" id="520" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x79ae1d8
0x76e20af
0x742bc04
0x718a6b1
0x6efd426
0x6c83865
0x6a1c7f5
0x67c77e1
0x6583dab
0x6350f4a
0x612e324
0x5f1b010
0x5d16d39
0x5b21234
0x59396ed
0x575f3a7
0x55920f4
0x53d17b7
0x521d11c
0x5074694
0x4ed71d8
0x4d44cd9
0x4bbd1cf
0x4a3fb23
0x48cc380
0x47625bc
0x4601ce5
0x44aa43a
0x435b726
0x4215145
0x40d6e58
0x3fa0a4a
0x3e7212e
0x3d4af3b
0x3c2b0cd
0x3b12262
0x3a00096
0x38f4826
0x37ef5ee
0x36f06e6
0x35f7820
0x35046c9
0x3417027
0x332f19b
0x324c89b
0x316f2b2
0x3096d83
0x2fc36c5
0x2ef4c40
0x2e2abd4
0x2d65370
0x2ca4116
0x2be72d4
0x2b2e6d3
0x2a79b3e
0x29c8e5b
0x291be78
0x28729f0
0x27ccf33
0x272acb4
0x268c0f8
0x25f0a91
0x2558819
0x24c3836
0x243199b
0x23a2b02
0x2316b32
0x228d8fb
0x2207333
0x21838be
0x2102884
0x2084179
0x2008297
0x1f8eadf
0x1f1795c
0x1ea2d1e
0x1e3053e
0x1dc00da
0x1d51f15
0x1ce5f1f
0x1c7c025
0x1c14161
0x1bae20e
0x1b4a171
0x1ae7ed1
0x1a8797c
0x1a290c1
0x19cc3f9
0x1971281
0x1917bb6
0x18bfefb
0x1869bc2
0x181516c
0x17c1f70
0x1770543
0x172025a
0x16d1634
0x168404f
0x163802c
0x15ed552
0x15a3f4f
0x155bdaa
0x1514ff3
0x14cf5bf
0x148ae9f
0x1447a2e
0x1405805
0x13c47c3
0x1384905
0x1345b6e
0x1307ea4
0x12cb24a
0x128f60b
0x1254994
0x121ac8e
0x11e1eab
0x11a9f9a
0x1172f10
0x113ccc0
0x1107864
0x10d31b1
0x109f863
0x106cc34
0x103ace4
0x1009a2f
0x0fd93d8
0x0fa99a1
0x0f7ab4d</MemoryData>
	</Node>
	<Edge dst_node_id="524" dst_node_input="a" src_node_id="520" src_node_output="dout" />
	<Node group="[]" id="515" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>[18:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>19</Width>
	</Node>
	<Edge dst_node_id="519" dst_node_input="input" src_node_id="515" src_node_output="result" />
	<Node group="[]" id="519" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(19)" />
		<Output latency="0" name="output" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:19, -19, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="524" dst_node_input="b" src_node_id="519" src_node_output="output" />
	<Edge dst_node_id="527" dst_node_input="b" src_node_id="519" src_node_output="output" />
	<Edge dst_node_id="530" dst_node_input="b" src_node_id="519" src_node_output="output" />
	<Node group="[]" id="524" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="525" dst_node_input="a" src_node_id="524" src_node_output="result" />
	<Node group="[]" id="521" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xa3abc67
0xa518cb6
0xa67d6c5
0xa7d9ea9
0xa92e850
0xaa7b782
0xabc0fe4
0xacff4f6
0xae36a1c
0xaf67294
0xb091184
0xb1b49f2
0xb2d1ec9
0xb3e92d9
0xb4fa8da
0xb60636b
0xb70c514
0xb80d047
0xb90875f
0xb9feca6
0xbaf024e
0xbbdca79
0xbcc4737
0xbda7a85
0xbe86650
0xbf60c76
0xc036ec3
0xc108ef7
0xc1d6ec3
0xc2a0fc8
0xc36739c
0xc429bc9
0xc4e89ca
0xc5a3f11
0xc65bd03
0xc7104fa
0xc7c1847
0xc86f830
0xc91a5f0
0xc9c22ba
0xca66fb7
0xcb08e09
0xcba7ec8
0xcc44303
0xccddbc3
0xcd74a09
0xce08ece
0xce9ab04
0xcf29f96
0xcfb6d69
0xd04155b
0xd0c9844
0xd14f6f7
0xd1d3240
0xd254ae5
0xd2d41a7
0xd351744
0xd3ccc71
0xd4461e1
0xd4bd841
0xd53303a
0xd5a6a70
0xd618783
0xd68880f
0xd6f6cac
0xd7635ed
0xd7ce463
0xd83789a
0xd89f31a
0xd905469
0xd969d09
0xd9ccd79
0xda2e634
0xda8e7b2
0xdaed269
0xdb4a6cc
0xdba654b
0xdc00e52
0xdc5a24c
0xdcb21a1
0xdd08cb7
0xdd5e3f0
0xddb27ac
0xde0584b
0xde57628
0xdea819d
0xdef7b03
0xdf462ae
0xdf938f4
0xdfdfe25
0xe02b292
0xe075689
0xe0bea56
0xe106e44
0xe14e29d
0xe1947a7
0xe1d9da9
0xe21e4e6
0xe261da2
0xe2a481d
0xe2e6498
0xe327351
0xe367485
0xe3a6870
0xe3e4f4d
0xe422954
0xe45f6be
0xe49b7c2
0xe4d6c95
0xe51156c
0xe54b27a
0xe5843f2
0xe5bca05
0xe5f44e4
0xe62b4bd
0xe6619bf
0xe697417
0xe6cc3f2
0xe70097c
0xe7344df
0xe767645
0xe799dd7
0xe7cbbbd
0xe7fd01e
0xe82db22
0xe85dced
0xe88d5a6
0xe8bc570</MemoryData>
	</Node>
	<Edge dst_node_id="525" dst_node_input="b" src_node_id="521" src_node_output="dout" />
	<Node group="[]" id="525" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="526" dst_node_input="i" src_node_id="525" src_node_output="result" />
	<Node group="[]" id="526" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -41, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="527" dst_node_input="a" src_node_id="526" src_node_output="o" />
	<Node group="[]" id="527" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="528" dst_node_input="a" src_node_id="527" src_node_output="result" />
	<Node group="[]" id="522" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x5c551d6
0x5b9de1a
0x5ae9779
0x5a37ce9
0x5988d6b
0x58dc807
0x5832bc9
0x578b7ca
0x56e6b25
0x56444fd
0x55a447d
0x55068d5
0x546b13a
0x53d1ce8
0x533ab20
0x52a5b29
0x5212c4e
0x5181de0
0x50f2f34
0x5065fa5
0x4fdae91
0x4f51b5b
0x4eca569
0x4e44c28
0x4dc0f06
0x4d3ed76
0x4cbe6ef
0x4c3faea
0x4bc28e6
0x4b47062
0x4acd0e3
0x4a549f0
0x49ddb13
0x49683da
0x48f43d4
0x4881a94
0x48107af
0x47a0abd
0x4732359
0x46c5120
0x46593b1
0x45eeaad
0x45855b8
0x451d478
0x44b6695
0x4450bb9
0x43ec390
0x4388dc9
0x4326a12
0x42c581d
0x426579e
0x420684b
0x41a89d8
0x414bc00
0x40efe7c
0x4095107
0x403b35f
0x3fe2541
0x3f8a66e
0x3f336a7
0x3edd5af
0x3e88348
0x3e33f39
0x3de0947
0x3d8e13b
0x3d3c6dc
0x3ceb9f6
0x3c9ba52
0x3c4c7bc
0x3bfe203
0x3bb08f3
0x3b63c5d
0x3b17c10
0x3acc7dd
0x3a81f96
0x3a3830e
0x39ef219
0x39a6c8c
0x395f23c
0x39182ff
0x38d1ead
0x388c51d
0x3847627
0x38031a7
0x37bf774
0x377c76b
0x373a167
0x36f8544
0x36b72df
0x3676a16
0x3636ac6
0x35f74ce
0x35b880e
0x357a466
0x353c9b7
0x34ff7e0
0x34c2ec5
0x3486e47
0x344b649
0x34106ae
0x33d5f5a
0x339c032
0x3362919
0x33299f5
0x32f12ad
0x32b9325
0x3281b44
0x324aaf2
0x3214216
0x31de098
0x31a865f
0x3173355
0x313e763
0x310a271
0x30d646a
0x30a2d38
0x306fcc6
0x303d2fd
0x300afca
0x2fd9318
0x2fa7cd3
0x2f76ce7
0x2f46340
0x2f15fcb
0x2ee6276
0x2eb6b2e
0x2e879e0
0x2e58e7b</MemoryData>
	</Node>
	<Edge dst_node_id="528" dst_node_input="b" src_node_id="522" src_node_output="dout" />
	<Node group="[]" id="528" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="529" dst_node_input="i" src_node_id="528" src_node_output="result" />
	<Node group="[]" id="529" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -33, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="530" dst_node_input="a" src_node_id="529" src_node_output="o" />
	<Node group="[]" id="530" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="531" dst_node_input="a" src_node_id="530" src_node_output="result" />
	<Node group="[]" id="523" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x0000000
0x016fe51
0x02dcf2d
0x0447347
0x05aeb4e
0x07137eb
0x08759c5
0x09d517f
0x0b31fb8
0x0c8c50b
0x0de4212
0x0f39761
0x108c589
0x11dcd19
0x132ae9e
0x1476aa0
0x15c01a4
0x170742d
0x184c2bd
0x198edd0
0x1acf5e3
0x1c0db6d
0x1d49ee5
0x1e840be
0x1fbc16c
0x20f215b
0x22260fb
0x23580b6
0x24880f5
0x25b6220
0x26e249a
0x280c8c7
0x2934f09
0x2a5b7c0
0x2b80347
0x2ca31fd
0x2dc443a
0x2ee3a57
0x30014ac
0x311d38e
0x3237751
0x3350047
0x3466ec1
0x357c30f
0x368fd7f
0x37a1e5d
0x38b25f6
0x39c1492
0x3acea7c
0x3bda7fb
0x3ce4d54
0x3dedace
0x3ef50ad
0x3ffaf33
0x40ff6a3
0x420273d
0x4304140
0x44044ec
0x450327f
0x4600a34
0x46fcc48
0x47f78f5
0x48f1075
0x49e9301
0x4ae00d2
0x4bd5a1d
0x4cc9f1b
0x4dbcfff
0x4eaecff
0x4f9f64e
0x508ec20
0x517cea6
0x5269e13
0x5355a97
0x5440462
0x5529ba3
0x561208a
0x56f9343
0x57df3fd
0x58c42e4
0x59a8024
0x5a8abe8
0x5b6c65b
0x5c4cfa7
0x5d2c7f6
0x5e0af70
0x5ee863e
0x5fc4c88
0x60a0275
0x617a82c
0x6253dd3
0x632c38f
0x6403986
0x64d9fdb
0x65af6b5
0x6683e35
0x675767f
0x6829fb7
0x68fb9fd
0x69cc574
0x6a9c23d
0x6b6b07a
0x6c3904a
0x6d061cd
0x6dd2524
0x6e9da6d
0x6f681c7
0x7031b51
0x70fa729
0x71c256c
0x7289637
0x734f9a8
0x7414fdb
0x74d98ed
0x759d4f8
0x7660419
0x772266b
0x77e3c08
0x78a450c
0x796418f
0x7a231ad
0x7ae157e
0x7b9ed1c
0x7c5b8a0
0x7d17823
0x7dd2bbc
0x7e8d384
0x7f46f93</MemoryData>
	</Node>
	<Edge dst_node_id="531" dst_node_input="b" src_node_id="523" src_node_output="dout" />
	<Node group="[]" id="531" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="532" dst_node_input="i" src_node_id="531" src_node_output="result" />
	<Node group="[]" id="532" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="536" dst_node_input="b" src_node_id="532" src_node_output="o" />
	<Node group="[]" id="536" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="537" dst_node_input="i" src_node_id="536" src_node_output="result" />
	<Node group="[]" id="537" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="540" dst_node_input="a" src_node_id="537" src_node_output="o" />
	<Node group="[]" id="2742" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f317218; 0.6931471824645996</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111001100010111001000011000</Value>
		<HexValue>0x3f317218</HexValue>
		<NumericValue>0.6931471824645996</NumericValue>
	</Node>
	<Edge dst_node_id="540" dst_node_input="b" src_node_id="2742" src_node_output="value" />
	<Node group="[]" id="540" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="544" dst_node_input="a" src_node_id="540" src_node_output="result" />
	<Node group="[]" id="2654" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="543" dst_node_input="a" src_node_id="2654" src_node_output="floatOut" />
	<Node group="[]" id="543" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="544" dst_node_input="b" src_node_id="543" src_node_output="result" />
	<Node group="[]" id="544" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="546" dst_node_input="a" src_node_id="544" src_node_output="result" />
	<Node group="[]" id="545" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="546" dst_node_input="b" src_node_id="545" src_node_output="result" />
	<Node group="[]" id="546" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:93)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1143" dst_node_input="a" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="1151" dst_node_input="a" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="1245" dst_node_input="a" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="1354" dst_node_input="a" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="1362" dst_node_input="a" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="1456" dst_node_input="a" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="1566" dst_node_input="a" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="1574" dst_node_input="a" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="1668" dst_node_input="a" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="2655" dst_node_input="floatIn" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="2656" dst_node_input="floatIn" src_node_id="546" src_node_output="result" />
	<Edge dst_node_id="2657" dst_node_input="floatIn" src_node_id="546" src_node_output="result" />
	<Node group="[]" id="2741" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1245" dst_node_input="b" src_node_id="2741" src_node_output="value" />
	<Node group="[]" id="1245" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1248" dst_node_input="sel" src_node_id="1245" src_node_output="result" />
	<Node group="[]" id="2740" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1243" dst_node_input="a" src_node_id="2740" src_node_output="value" />
	<Node group="[]" id="1128" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ecc422a; 0.3989422917366028</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:21)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110110011000100001000101010</Value>
		<HexValue>0x3ecc422a</HexValue>
		<NumericValue>0.3989422917366028</NumericValue>
	</Node>
	<Edge dst_node_id="1231" dst_node_input="a" src_node_id="1128" src_node_output="value" />
	<Node group="[]" id="1151" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1154" dst_node_input="a" src_node_id="1151" src_node_output="result" />
	<Node group="[]" id="2655" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1154" dst_node_input="b" src_node_id="2655" src_node_output="floatOut" />
	<Node group="[]" id="1154" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1156" dst_node_input="input" src_node_id="1154" src_node_output="result" />
	<Edge dst_node_id="1161" dst_node_input="a" src_node_id="1154" src_node_output="result" />
	<Edge dst_node_id="1165" dst_node_input="a" src_node_id="1154" src_node_output="result" />
	<Node group="[]" id="1155" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1156" dst_node_input="doubt" src_node_id="1155" src_node_output="value" />
	<Node group="[]" id="1156" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1157" dst_node_input="i" src_node_id="1156" src_node_output="output" />
	<Node group="[]" id="1157" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1159" dst_node_input="a" src_node_id="1157" src_node_output="o" />
	<Node group="[]" id="2739" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="1159" dst_node_input="b" src_node_id="2739" src_node_output="value" />
	<Node group="[]" id="1159" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1162" dst_node_input="input" src_node_id="1159" src_node_output="result" />
	<Edge dst_node_id="1166" dst_node_input="input" src_node_id="1159" src_node_output="result" />
	<Edge dst_node_id="1168" dst_node_input="input" src_node_id="1159" src_node_output="result" />
	<Node group="[]" id="1168" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1169" dst_node_input="i" src_node_id="1168" src_node_output="output" />
	<Edge dst_node_id="1170" dst_node_input="i" src_node_id="1168" src_node_output="output" />
	<Edge dst_node_id="1171" dst_node_input="i" src_node_id="1168" src_node_output="output" />
	<Edge dst_node_id="1172" dst_node_input="i" src_node_id="1168" src_node_output="output" />
	<Node group="[]" id="1169" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1190" dst_node_input="i" src_node_id="1169" src_node_output="o" />
	<Node group="[]" id="1190" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1192" dst_node_input="a" src_node_id="1190" src_node_output="o" />
	<Node group="[]" id="2738" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="1192" dst_node_input="b" src_node_id="2738" src_node_output="value" />
	<Node group="[]" id="1192" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1196" dst_node_input="a" src_node_id="1192" src_node_output="result" />
	<Node group="[]" id="1171" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1228" dst_node_input="input" src_node_id="1171" src_node_output="o" />
	<Node group="[]" id="1228" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1229" dst_node_input="input" src_node_id="1228" src_node_output="output" />
	<Node group="[]" id="1229" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1230" dst_node_input="addr" src_node_id="1229" src_node_output="output" />
	<Node group="[]" id="1230" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="1180" dst_node_input="a" src_node_id="1230" src_node_output="dout" />
	<Edge dst_node_id="1181" dst_node_input="b" src_node_id="1230" src_node_output="dout" />
	<Node group="[]" id="1170" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1225" dst_node_input="input" src_node_id="1170" src_node_output="o" />
	<Node group="[]" id="1225" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1226" dst_node_input="input" src_node_id="1225" src_node_output="output" />
	<Node group="[]" id="1226" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1227" dst_node_input="addr" src_node_id="1226" src_node_output="output" />
	<Node group="[]" id="1227" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="1176" dst_node_input="a" src_node_id="1227" src_node_output="dout" />
	<Edge dst_node_id="1177" dst_node_input="b" src_node_id="1227" src_node_output="dout" />
	<Node group="[]" id="1173" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="1174" dst_node_input="a" src_node_id="1173" src_node_output="value" />
	<Node group="[]" id="1172" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1174" dst_node_input="b" src_node_id="1172" src_node_output="o" />
	<Node group="[]" id="1174" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1175" dst_node_input="i" src_node_id="1174" src_node_output="result" />
	<Node group="[]" id="1175" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1176" dst_node_input="b" src_node_id="1175" src_node_output="o" />
	<Edge dst_node_id="1177" dst_node_input="a" src_node_id="1175" src_node_output="o" />
	<Node group="[]" id="1176" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1178" dst_node_input="a" src_node_id="1176" src_node_output="result" />
	<Node group="[]" id="1177" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1178" dst_node_input="b" src_node_id="1177" src_node_output="result" />
	<Node group="[]" id="1178" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1179" dst_node_input="i" src_node_id="1178" src_node_output="result" />
	<Node group="[]" id="1179" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1180" dst_node_input="b" src_node_id="1179" src_node_output="o" />
	<Edge dst_node_id="1181" dst_node_input="a" src_node_id="1179" src_node_output="o" />
	<Node group="[]" id="1180" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1182" dst_node_input="a" src_node_id="1180" src_node_output="result" />
	<Node group="[]" id="1181" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1182" dst_node_input="b" src_node_id="1181" src_node_output="result" />
	<Node group="[]" id="1182" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1183" dst_node_input="i" src_node_id="1182" src_node_output="result" />
	<Node group="[]" id="1183" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1184" dst_node_input="i" src_node_id="1183" src_node_output="o" />
	<Node group="[]" id="1184" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1186" dst_node_input="a" src_node_id="1184" src_node_output="o" />
	<Edge dst_node_id="1188" dst_node_input="option0" src_node_id="1184" src_node_output="o" />
	<Node group="[]" id="2737" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1186" dst_node_input="b" src_node_id="2737" src_node_output="value" />
	<Node group="[]" id="1186" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1188" dst_node_input="sel" src_node_id="1186" src_node_output="result" />
	<Edge dst_node_id="1195" dst_node_input="sel" src_node_id="1186" src_node_output="result" />
	<Node group="[]" id="1194" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1195" dst_node_input="option0" src_node_id="1194" src_node_output="value" />
	<Node group="[]" id="1193" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1195" dst_node_input="option1" src_node_id="1193" src_node_output="value" />
	<Node group="[]" id="1195" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1196" dst_node_input="b" src_node_id="1195" src_node_output="result" />
	<Node group="[]" id="1196" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1198" dst_node_input="a" src_node_id="1196" src_node_output="result" />
	<Edge dst_node_id="1203" dst_node_input="a" src_node_id="1196" src_node_output="result" />
	<Edge dst_node_id="1207" dst_node_input="i" src_node_id="1196" src_node_output="result" />
	<Node group="[]" id="2736" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1198" dst_node_input="b" src_node_id="2736" src_node_output="value" />
	<Node group="[]" id="1198" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1200" dst_node_input="a" src_node_id="1198" src_node_output="result" />
	<Node group="[]" id="2735" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1161" dst_node_input="b" src_node_id="2735" src_node_output="value" />
	<Node group="[]" id="1161" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1163" dst_node_input="a" src_node_id="1161" src_node_output="result" />
	<Node group="[]" id="1162" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1163" dst_node_input="b" src_node_id="1162" src_node_output="output" />
	<Node group="[]" id="1163" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1199" dst_node_input="a" src_node_id="1163" src_node_output="result" />
	<Edge dst_node_id="1206" dst_node_input="b" src_node_id="1163" src_node_output="result" />
	<Node group="[]" id="1199" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1200" dst_node_input="b" src_node_id="1199" src_node_output="result" />
	<Node group="[]" id="1200" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1201" dst_node_input="a" src_node_id="1200" src_node_output="result" />
	<Node group="[]" id="2734" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1165" dst_node_input="b" src_node_id="2734" src_node_output="value" />
	<Node group="[]" id="1165" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1167" dst_node_input="a" src_node_id="1165" src_node_output="result" />
	<Node group="[]" id="1166" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1167" dst_node_input="b" src_node_id="1166" src_node_output="output" />
	<Node group="[]" id="1167" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1201" dst_node_input="b" src_node_id="1167" src_node_output="result" />
	<Edge dst_node_id="1204" dst_node_input="a" src_node_id="1167" src_node_output="result" />
	<Node group="[]" id="1201" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1215" dst_node_input="in0" src_node_id="1201" src_node_output="result" />
	<Node group="[]" id="2733" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1203" dst_node_input="b" src_node_id="2733" src_node_output="value" />
	<Node group="[]" id="1203" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1205" dst_node_input="a" src_node_id="1203" src_node_output="result" />
	<Node group="[]" id="1204" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1205" dst_node_input="b" src_node_id="1204" src_node_output="result" />
	<Node group="[]" id="1205" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1206" dst_node_input="a" src_node_id="1205" src_node_output="result" />
	<Node group="[]" id="1206" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1215" dst_node_input="in1" src_node_id="1206" src_node_output="result" />
	<Node group="[]" id="1215" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1223" dst_node_input="sel" src_node_id="1215" src_node_output="result" />
	<Node group="[]" id="2631" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1211" dst_node_input="in0" src_node_id="2631" src_node_output="value" />
	<Node group="[]" id="1207" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1210" dst_node_input="input" src_node_id="1207" src_node_output="o" />
	<Node group="[]" id="1210" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1211" dst_node_input="in1" src_node_id="1210" src_node_output="output" />
	<Node group="[]" id="1211" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1213" dst_node_input="in0" src_node_id="1211" src_node_output="result" />
	<Node group="[]" id="1187" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1188" dst_node_input="option1" src_node_id="1187" src_node_output="value" />
	<Node group="[]" id="1188" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1189" dst_node_input="i" src_node_id="1188" src_node_output="result" />
	<Node group="[]" id="1189" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1212" dst_node_input="input" src_node_id="1189" src_node_output="o" />
	<Node group="[]" id="1212" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1213" dst_node_input="in1" src_node_id="1212" src_node_output="output" />
	<Node group="[]" id="1213" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1214" dst_node_input="input" src_node_id="1213" src_node_output="result" />
	<Node group="[]" id="1214" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1223" dst_node_input="option0" src_node_id="1214" src_node_output="output" />
	<Node group="[]" id="1216" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1218" dst_node_input="in0" src_node_id="1216" src_node_output="value" />
	<Node group="[]" id="1217" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1218" dst_node_input="in1" src_node_id="1217" src_node_output="value" />
	<Node group="[]" id="1218" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1220" dst_node_input="in0" src_node_id="1218" src_node_output="result" />
	<Node group="[]" id="1219" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1220" dst_node_input="in1" src_node_id="1219" src_node_output="value" />
	<Node group="[]" id="1220" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1221" dst_node_input="input" src_node_id="1220" src_node_output="result" />
	<Node group="[]" id="1221" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1223" dst_node_input="option1" src_node_id="1221" src_node_output="output" />
	<Edge dst_node_id="1223" dst_node_input="option3" src_node_id="1221" src_node_output="output" />
	<Node group="[]" id="1222" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1223" dst_node_input="option2" src_node_id="1222" src_node_output="value" />
	<Node group="[]" id="1223" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1231" dst_node_input="b" src_node_id="1223" src_node_output="result" />
	<Node group="[]" id="1231" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1241" dst_node_input="a" src_node_id="1231" src_node_output="result" />
	<Node group="[]" id="1126" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3faa466f; 1.3302744626998901</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:19)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111101010100100011001101111</Value>
		<HexValue>0x3faa466f</HexValue>
		<NumericValue>1.3302744626998901</NumericValue>
	</Node>
	<Edge dst_node_id="1232" dst_node_input="a" src_node_id="1126" src_node_output="value" />
	<Node group="[]" id="2732" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1150" dst_node_input="a" src_node_id="2732" src_node_output="value" />
	<Node group="[]" id="2731" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1148" dst_node_input="a" src_node_id="2731" src_node_output="value" />
	<Node group="[]" id="1142" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:336)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1144" dst_node_input="in0" src_node_id="1142" src_node_output="value" />
	<Node group="[]" id="1143" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:337)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge dst_node_id="1144" dst_node_input="in1" src_node_id="1143" src_node_output="result" />
	<Node group="[]" id="1144" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:338)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1145" dst_node_input="input" src_node_id="1144" src_node_output="result" />
	<Node group="[]" id="1145" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:339)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1146" dst_node_input="a" src_node_id="1145" src_node_output="output" />
	<Node group="[]" id="1127" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3e6d3389; 0.23164190351963043</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:20)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110011011010011001110001001</Value>
		<HexValue>0x3e6d3389</HexValue>
		<NumericValue>0.23164190351963043</NumericValue>
	</Node>
	<Edge dst_node_id="1146" dst_node_input="b" src_node_id="1127" src_node_output="value" />
	<Node group="[]" id="1146" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1148" dst_node_input="b" src_node_id="1146" src_node_output="result" />
	<Node group="[]" id="1148" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1150" dst_node_input="b" src_node_id="1148" src_node_output="result" />
	<Node group="[]" id="1150" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1232" dst_node_input="b" src_node_id="1150" src_node_output="result" />
	<Edge dst_node_id="1234" dst_node_input="b" src_node_id="1150" src_node_output="result" />
	<Edge dst_node_id="1236" dst_node_input="b" src_node_id="1150" src_node_output="result" />
	<Edge dst_node_id="1238" dst_node_input="b" src_node_id="1150" src_node_output="result" />
	<Edge dst_node_id="1240" dst_node_input="b" src_node_id="1150" src_node_output="result" />
	<Node group="[]" id="1232" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1233" dst_node_input="a" src_node_id="1232" src_node_output="result" />
	<Node group="[]" id="1125" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbfe91eea; -1.8212559223175049</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:18)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111111111010010001111011101010</Value>
		<HexValue>0xbfe91eea</HexValue>
		<NumericValue>-1.8212559223175049</NumericValue>
	</Node>
	<Edge dst_node_id="1233" dst_node_input="b" src_node_id="1125" src_node_output="value" />
	<Node group="[]" id="1233" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1234" dst_node_input="a" src_node_id="1233" src_node_output="result" />
	<Node group="[]" id="1234" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1235" dst_node_input="a" src_node_id="1234" src_node_output="result" />
	<Node group="[]" id="1124" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3fe40778; 1.781477928161621</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:17)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111111001000000011101111000</Value>
		<HexValue>0x3fe40778</HexValue>
		<NumericValue>1.781477928161621</NumericValue>
	</Node>
	<Edge dst_node_id="1235" dst_node_input="b" src_node_id="1124" src_node_output="value" />
	<Node group="[]" id="1235" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1236" dst_node_input="a" src_node_id="1235" src_node_output="result" />
	<Node group="[]" id="1236" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1237" dst_node_input="a" src_node_id="1236" src_node_output="result" />
	<Node group="[]" id="1123" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbeb68f87; -0.3565637767314911</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:16)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111110101101101000111110000111</Value>
		<HexValue>0xbeb68f87</HexValue>
		<NumericValue>-0.3565637767314911</NumericValue>
	</Node>
	<Edge dst_node_id="1237" dst_node_input="b" src_node_id="1123" src_node_output="value" />
	<Node group="[]" id="1237" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1238" dst_node_input="a" src_node_id="1237" src_node_output="result" />
	<Node group="[]" id="1238" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1239" dst_node_input="a" src_node_id="1238" src_node_output="result" />
	<Node group="[]" id="1122" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ea385fa; 0.3193815350532532</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:15)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110101000111000010111111010</Value>
		<HexValue>0x3ea385fa</HexValue>
		<NumericValue>0.3193815350532532</NumericValue>
	</Node>
	<Edge dst_node_id="1239" dst_node_input="b" src_node_id="1122" src_node_output="value" />
	<Node group="[]" id="1239" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1240" dst_node_input="a" src_node_id="1239" src_node_output="result" />
	<Node group="[]" id="1240" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1241" dst_node_input="b" src_node_id="1240" src_node_output="result" />
	<Node group="[]" id="1241" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1243" dst_node_input="b" src_node_id="1241" src_node_output="result" />
	<Node group="[]" id="1243" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1247" dst_node_input="b" src_node_id="1243" src_node_output="result" />
	<Edge dst_node_id="1248" dst_node_input="option0" src_node_id="1243" src_node_output="result" />
	<Node group="[]" id="2730" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1247" dst_node_input="a" src_node_id="2730" src_node_output="value" />
	<Node group="[]" id="1247" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1248" dst_node_input="option1" src_node_id="1247" src_node_output="result" />
	<Node group="[]" id="1248" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1249" dst_node_input="b" src_node_id="1248" src_node_output="result" />
	<Node group="[]" id="1249" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1250" dst_node_input="b" src_node_id="1249" src_node_output="result" />
	<Node group="[]" id="1250" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:96)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1678" dst_node_input="a" src_node_id="1250" src_node_output="result" />
	<Node group="[]" id="2729" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1254" dst_node_input="a" src_node_id="2729" src_node_output="value" />
	<Node group="[]" id="2728" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1252" dst_node_input="a" src_node_id="2728" src_node_output="value" />
	<Node group="[]" id="1252" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1254" dst_node_input="b" src_node_id="1252" src_node_output="result" />
	<Node group="[]" id="1254" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1463" dst_node_input="a" src_node_id="1254" src_node_output="result" />
	<Node group="[]" id="2727" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1462" dst_node_input="a" src_node_id="2727" src_node_output="value" />
	<Node group="[]" id="1255" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1256" dst_node_input="a" src_node_id="1255" src_node_output="result" />
	<Node group="[]" id="1256" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1258" dst_node_input="input" src_node_id="1256" src_node_output="result" />
	<Edge dst_node_id="1263" dst_node_input="a" src_node_id="1256" src_node_output="result" />
	<Edge dst_node_id="1267" dst_node_input="a" src_node_id="1256" src_node_output="result" />
	<Node group="[]" id="1257" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1258" dst_node_input="doubt" src_node_id="1257" src_node_output="value" />
	<Node group="[]" id="1258" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1259" dst_node_input="i" src_node_id="1258" src_node_output="output" />
	<Node group="[]" id="1259" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1261" dst_node_input="a" src_node_id="1259" src_node_output="o" />
	<Node group="[]" id="2726" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="1261" dst_node_input="b" src_node_id="2726" src_node_output="value" />
	<Node group="[]" id="1261" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1264" dst_node_input="input" src_node_id="1261" src_node_output="result" />
	<Edge dst_node_id="1268" dst_node_input="input" src_node_id="1261" src_node_output="result" />
	<Edge dst_node_id="1270" dst_node_input="input" src_node_id="1261" src_node_output="result" />
	<Node group="[]" id="1270" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1271" dst_node_input="i" src_node_id="1270" src_node_output="output" />
	<Edge dst_node_id="1272" dst_node_input="i" src_node_id="1270" src_node_output="output" />
	<Edge dst_node_id="1273" dst_node_input="i" src_node_id="1270" src_node_output="output" />
	<Edge dst_node_id="1274" dst_node_input="i" src_node_id="1270" src_node_output="output" />
	<Node group="[]" id="1271" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1292" dst_node_input="i" src_node_id="1271" src_node_output="o" />
	<Node group="[]" id="1292" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1294" dst_node_input="a" src_node_id="1292" src_node_output="o" />
	<Node group="[]" id="2725" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="1294" dst_node_input="b" src_node_id="2725" src_node_output="value" />
	<Node group="[]" id="1294" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1298" dst_node_input="a" src_node_id="1294" src_node_output="result" />
	<Node group="[]" id="1273" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1330" dst_node_input="input" src_node_id="1273" src_node_output="o" />
	<Node group="[]" id="1330" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1331" dst_node_input="input" src_node_id="1330" src_node_output="output" />
	<Node group="[]" id="1331" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1332" dst_node_input="addr" src_node_id="1331" src_node_output="output" />
	<Node group="[]" id="1332" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="1282" dst_node_input="a" src_node_id="1332" src_node_output="dout" />
	<Edge dst_node_id="1283" dst_node_input="b" src_node_id="1332" src_node_output="dout" />
	<Node group="[]" id="1272" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1327" dst_node_input="input" src_node_id="1272" src_node_output="o" />
	<Node group="[]" id="1327" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1328" dst_node_input="input" src_node_id="1327" src_node_output="output" />
	<Node group="[]" id="1328" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1329" dst_node_input="addr" src_node_id="1328" src_node_output="output" />
	<Node group="[]" id="1329" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="1278" dst_node_input="a" src_node_id="1329" src_node_output="dout" />
	<Edge dst_node_id="1279" dst_node_input="b" src_node_id="1329" src_node_output="dout" />
	<Node group="[]" id="1275" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="1276" dst_node_input="a" src_node_id="1275" src_node_output="value" />
	<Node group="[]" id="1274" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1276" dst_node_input="b" src_node_id="1274" src_node_output="o" />
	<Node group="[]" id="1276" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1277" dst_node_input="i" src_node_id="1276" src_node_output="result" />
	<Node group="[]" id="1277" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1278" dst_node_input="b" src_node_id="1277" src_node_output="o" />
	<Edge dst_node_id="1279" dst_node_input="a" src_node_id="1277" src_node_output="o" />
	<Node group="[]" id="1278" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1280" dst_node_input="a" src_node_id="1278" src_node_output="result" />
	<Node group="[]" id="1279" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1280" dst_node_input="b" src_node_id="1279" src_node_output="result" />
	<Node group="[]" id="1280" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1281" dst_node_input="i" src_node_id="1280" src_node_output="result" />
	<Node group="[]" id="1281" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1282" dst_node_input="b" src_node_id="1281" src_node_output="o" />
	<Edge dst_node_id="1283" dst_node_input="a" src_node_id="1281" src_node_output="o" />
	<Node group="[]" id="1282" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1284" dst_node_input="a" src_node_id="1282" src_node_output="result" />
	<Node group="[]" id="1283" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1284" dst_node_input="b" src_node_id="1283" src_node_output="result" />
	<Node group="[]" id="1284" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1285" dst_node_input="i" src_node_id="1284" src_node_output="result" />
	<Node group="[]" id="1285" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1286" dst_node_input="i" src_node_id="1285" src_node_output="o" />
	<Node group="[]" id="1286" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1288" dst_node_input="a" src_node_id="1286" src_node_output="o" />
	<Edge dst_node_id="1290" dst_node_input="option0" src_node_id="1286" src_node_output="o" />
	<Node group="[]" id="2724" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1288" dst_node_input="b" src_node_id="2724" src_node_output="value" />
	<Node group="[]" id="1288" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1290" dst_node_input="sel" src_node_id="1288" src_node_output="result" />
	<Edge dst_node_id="1297" dst_node_input="sel" src_node_id="1288" src_node_output="result" />
	<Node group="[]" id="1296" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1297" dst_node_input="option0" src_node_id="1296" src_node_output="value" />
	<Node group="[]" id="1295" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1297" dst_node_input="option1" src_node_id="1295" src_node_output="value" />
	<Node group="[]" id="1297" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1298" dst_node_input="b" src_node_id="1297" src_node_output="result" />
	<Node group="[]" id="1298" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1300" dst_node_input="a" src_node_id="1298" src_node_output="result" />
	<Edge dst_node_id="1305" dst_node_input="a" src_node_id="1298" src_node_output="result" />
	<Edge dst_node_id="1309" dst_node_input="i" src_node_id="1298" src_node_output="result" />
	<Node group="[]" id="2723" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1300" dst_node_input="b" src_node_id="2723" src_node_output="value" />
	<Node group="[]" id="1300" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1302" dst_node_input="a" src_node_id="1300" src_node_output="result" />
	<Node group="[]" id="2722" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1263" dst_node_input="b" src_node_id="2722" src_node_output="value" />
	<Node group="[]" id="1263" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1265" dst_node_input="a" src_node_id="1263" src_node_output="result" />
	<Node group="[]" id="1264" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1265" dst_node_input="b" src_node_id="1264" src_node_output="output" />
	<Node group="[]" id="1265" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1301" dst_node_input="a" src_node_id="1265" src_node_output="result" />
	<Edge dst_node_id="1308" dst_node_input="b" src_node_id="1265" src_node_output="result" />
	<Node group="[]" id="1301" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1302" dst_node_input="b" src_node_id="1301" src_node_output="result" />
	<Node group="[]" id="1302" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1303" dst_node_input="a" src_node_id="1302" src_node_output="result" />
	<Node group="[]" id="2721" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1267" dst_node_input="b" src_node_id="2721" src_node_output="value" />
	<Node group="[]" id="1267" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1269" dst_node_input="a" src_node_id="1267" src_node_output="result" />
	<Node group="[]" id="1268" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1269" dst_node_input="b" src_node_id="1268" src_node_output="output" />
	<Node group="[]" id="1269" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1303" dst_node_input="b" src_node_id="1269" src_node_output="result" />
	<Edge dst_node_id="1306" dst_node_input="a" src_node_id="1269" src_node_output="result" />
	<Node group="[]" id="1303" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1317" dst_node_input="in0" src_node_id="1303" src_node_output="result" />
	<Node group="[]" id="2720" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1305" dst_node_input="b" src_node_id="2720" src_node_output="value" />
	<Node group="[]" id="1305" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1307" dst_node_input="a" src_node_id="1305" src_node_output="result" />
	<Node group="[]" id="1306" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1307" dst_node_input="b" src_node_id="1306" src_node_output="result" />
	<Node group="[]" id="1307" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1308" dst_node_input="a" src_node_id="1307" src_node_output="result" />
	<Node group="[]" id="1308" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1317" dst_node_input="in1" src_node_id="1308" src_node_output="result" />
	<Node group="[]" id="1317" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1325" dst_node_input="sel" src_node_id="1317" src_node_output="result" />
	<Node group="[]" id="2632" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1313" dst_node_input="in0" src_node_id="2632" src_node_output="value" />
	<Node group="[]" id="1309" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1312" dst_node_input="input" src_node_id="1309" src_node_output="o" />
	<Node group="[]" id="1312" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1313" dst_node_input="in1" src_node_id="1312" src_node_output="output" />
	<Node group="[]" id="1313" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1315" dst_node_input="in0" src_node_id="1313" src_node_output="result" />
	<Node group="[]" id="1289" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1290" dst_node_input="option1" src_node_id="1289" src_node_output="value" />
	<Node group="[]" id="1290" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1291" dst_node_input="i" src_node_id="1290" src_node_output="result" />
	<Node group="[]" id="1291" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1314" dst_node_input="input" src_node_id="1291" src_node_output="o" />
	<Node group="[]" id="1314" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1315" dst_node_input="in1" src_node_id="1314" src_node_output="output" />
	<Node group="[]" id="1315" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1316" dst_node_input="input" src_node_id="1315" src_node_output="result" />
	<Node group="[]" id="1316" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1325" dst_node_input="option0" src_node_id="1316" src_node_output="output" />
	<Node group="[]" id="1318" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1320" dst_node_input="in0" src_node_id="1318" src_node_output="value" />
	<Node group="[]" id="1319" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1320" dst_node_input="in1" src_node_id="1319" src_node_output="value" />
	<Node group="[]" id="1320" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1322" dst_node_input="in0" src_node_id="1320" src_node_output="result" />
	<Node group="[]" id="1321" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1322" dst_node_input="in1" src_node_id="1321" src_node_output="value" />
	<Node group="[]" id="1322" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1323" dst_node_input="input" src_node_id="1322" src_node_output="result" />
	<Node group="[]" id="1323" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1325" dst_node_input="option1" src_node_id="1323" src_node_output="output" />
	<Edge dst_node_id="1325" dst_node_input="option3" src_node_id="1323" src_node_output="output" />
	<Node group="[]" id="1324" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1325" dst_node_input="option2" src_node_id="1324" src_node_output="value" />
	<Node group="[]" id="1325" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1460" dst_node_input="a" src_node_id="1325" src_node_output="result" />
	<Node group="[]" id="2719" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1456" dst_node_input="b" src_node_id="2719" src_node_output="value" />
	<Node group="[]" id="1456" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1459" dst_node_input="sel" src_node_id="1456" src_node_output="result" />
	<Node group="[]" id="2718" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1454" dst_node_input="a" src_node_id="2718" src_node_output="value" />
	<Node group="[]" id="1339" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ecc422a; 0.3989422917366028</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:21)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110110011000100001000101010</Value>
		<HexValue>0x3ecc422a</HexValue>
		<NumericValue>0.3989422917366028</NumericValue>
	</Node>
	<Edge dst_node_id="1442" dst_node_input="a" src_node_id="1339" src_node_output="value" />
	<Node group="[]" id="1362" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1365" dst_node_input="a" src_node_id="1362" src_node_output="result" />
	<Node group="[]" id="2656" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1365" dst_node_input="b" src_node_id="2656" src_node_output="floatOut" />
	<Node group="[]" id="1365" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1367" dst_node_input="input" src_node_id="1365" src_node_output="result" />
	<Edge dst_node_id="1372" dst_node_input="a" src_node_id="1365" src_node_output="result" />
	<Edge dst_node_id="1376" dst_node_input="a" src_node_id="1365" src_node_output="result" />
	<Node group="[]" id="1366" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1367" dst_node_input="doubt" src_node_id="1366" src_node_output="value" />
	<Node group="[]" id="1367" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1368" dst_node_input="i" src_node_id="1367" src_node_output="output" />
	<Node group="[]" id="1368" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1370" dst_node_input="a" src_node_id="1368" src_node_output="o" />
	<Node group="[]" id="2717" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="1370" dst_node_input="b" src_node_id="2717" src_node_output="value" />
	<Node group="[]" id="1370" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1373" dst_node_input="input" src_node_id="1370" src_node_output="result" />
	<Edge dst_node_id="1377" dst_node_input="input" src_node_id="1370" src_node_output="result" />
	<Edge dst_node_id="1379" dst_node_input="input" src_node_id="1370" src_node_output="result" />
	<Node group="[]" id="1379" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1380" dst_node_input="i" src_node_id="1379" src_node_output="output" />
	<Edge dst_node_id="1381" dst_node_input="i" src_node_id="1379" src_node_output="output" />
	<Edge dst_node_id="1382" dst_node_input="i" src_node_id="1379" src_node_output="output" />
	<Edge dst_node_id="1383" dst_node_input="i" src_node_id="1379" src_node_output="output" />
	<Node group="[]" id="1380" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1401" dst_node_input="i" src_node_id="1380" src_node_output="o" />
	<Node group="[]" id="1401" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1403" dst_node_input="a" src_node_id="1401" src_node_output="o" />
	<Node group="[]" id="2716" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="1403" dst_node_input="b" src_node_id="2716" src_node_output="value" />
	<Node group="[]" id="1403" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1407" dst_node_input="a" src_node_id="1403" src_node_output="result" />
	<Node group="[]" id="1382" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1439" dst_node_input="input" src_node_id="1382" src_node_output="o" />
	<Node group="[]" id="1439" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1440" dst_node_input="input" src_node_id="1439" src_node_output="output" />
	<Node group="[]" id="1440" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1441" dst_node_input="addr" src_node_id="1440" src_node_output="output" />
	<Node group="[]" id="1441" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="1391" dst_node_input="a" src_node_id="1441" src_node_output="dout" />
	<Edge dst_node_id="1392" dst_node_input="b" src_node_id="1441" src_node_output="dout" />
	<Node group="[]" id="1381" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1436" dst_node_input="input" src_node_id="1381" src_node_output="o" />
	<Node group="[]" id="1436" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1437" dst_node_input="input" src_node_id="1436" src_node_output="output" />
	<Node group="[]" id="1437" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1438" dst_node_input="addr" src_node_id="1437" src_node_output="output" />
	<Node group="[]" id="1438" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="1387" dst_node_input="a" src_node_id="1438" src_node_output="dout" />
	<Edge dst_node_id="1388" dst_node_input="b" src_node_id="1438" src_node_output="dout" />
	<Node group="[]" id="1384" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="1385" dst_node_input="a" src_node_id="1384" src_node_output="value" />
	<Node group="[]" id="1383" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1385" dst_node_input="b" src_node_id="1383" src_node_output="o" />
	<Node group="[]" id="1385" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1386" dst_node_input="i" src_node_id="1385" src_node_output="result" />
	<Node group="[]" id="1386" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1387" dst_node_input="b" src_node_id="1386" src_node_output="o" />
	<Edge dst_node_id="1388" dst_node_input="a" src_node_id="1386" src_node_output="o" />
	<Node group="[]" id="1387" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1389" dst_node_input="a" src_node_id="1387" src_node_output="result" />
	<Node group="[]" id="1388" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1389" dst_node_input="b" src_node_id="1388" src_node_output="result" />
	<Node group="[]" id="1389" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1390" dst_node_input="i" src_node_id="1389" src_node_output="result" />
	<Node group="[]" id="1390" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1391" dst_node_input="b" src_node_id="1390" src_node_output="o" />
	<Edge dst_node_id="1392" dst_node_input="a" src_node_id="1390" src_node_output="o" />
	<Node group="[]" id="1391" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1393" dst_node_input="a" src_node_id="1391" src_node_output="result" />
	<Node group="[]" id="1392" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1393" dst_node_input="b" src_node_id="1392" src_node_output="result" />
	<Node group="[]" id="1393" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1394" dst_node_input="i" src_node_id="1393" src_node_output="result" />
	<Node group="[]" id="1394" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1395" dst_node_input="i" src_node_id="1394" src_node_output="o" />
	<Node group="[]" id="1395" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1397" dst_node_input="a" src_node_id="1395" src_node_output="o" />
	<Edge dst_node_id="1399" dst_node_input="option0" src_node_id="1395" src_node_output="o" />
	<Node group="[]" id="2715" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1397" dst_node_input="b" src_node_id="2715" src_node_output="value" />
	<Node group="[]" id="1397" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1399" dst_node_input="sel" src_node_id="1397" src_node_output="result" />
	<Edge dst_node_id="1406" dst_node_input="sel" src_node_id="1397" src_node_output="result" />
	<Node group="[]" id="1405" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1406" dst_node_input="option0" src_node_id="1405" src_node_output="value" />
	<Node group="[]" id="1404" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1406" dst_node_input="option1" src_node_id="1404" src_node_output="value" />
	<Node group="[]" id="1406" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1407" dst_node_input="b" src_node_id="1406" src_node_output="result" />
	<Node group="[]" id="1407" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1409" dst_node_input="a" src_node_id="1407" src_node_output="result" />
	<Edge dst_node_id="1414" dst_node_input="a" src_node_id="1407" src_node_output="result" />
	<Edge dst_node_id="1418" dst_node_input="i" src_node_id="1407" src_node_output="result" />
	<Node group="[]" id="2714" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1409" dst_node_input="b" src_node_id="2714" src_node_output="value" />
	<Node group="[]" id="1409" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1411" dst_node_input="a" src_node_id="1409" src_node_output="result" />
	<Node group="[]" id="2713" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1372" dst_node_input="b" src_node_id="2713" src_node_output="value" />
	<Node group="[]" id="1372" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1374" dst_node_input="a" src_node_id="1372" src_node_output="result" />
	<Node group="[]" id="1373" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1374" dst_node_input="b" src_node_id="1373" src_node_output="output" />
	<Node group="[]" id="1374" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1410" dst_node_input="a" src_node_id="1374" src_node_output="result" />
	<Edge dst_node_id="1417" dst_node_input="b" src_node_id="1374" src_node_output="result" />
	<Node group="[]" id="1410" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1411" dst_node_input="b" src_node_id="1410" src_node_output="result" />
	<Node group="[]" id="1411" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1412" dst_node_input="a" src_node_id="1411" src_node_output="result" />
	<Node group="[]" id="2712" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1376" dst_node_input="b" src_node_id="2712" src_node_output="value" />
	<Node group="[]" id="1376" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1378" dst_node_input="a" src_node_id="1376" src_node_output="result" />
	<Node group="[]" id="1377" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1378" dst_node_input="b" src_node_id="1377" src_node_output="output" />
	<Node group="[]" id="1378" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1412" dst_node_input="b" src_node_id="1378" src_node_output="result" />
	<Edge dst_node_id="1415" dst_node_input="a" src_node_id="1378" src_node_output="result" />
	<Node group="[]" id="1412" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1426" dst_node_input="in0" src_node_id="1412" src_node_output="result" />
	<Node group="[]" id="2711" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1414" dst_node_input="b" src_node_id="2711" src_node_output="value" />
	<Node group="[]" id="1414" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1416" dst_node_input="a" src_node_id="1414" src_node_output="result" />
	<Node group="[]" id="1415" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1416" dst_node_input="b" src_node_id="1415" src_node_output="result" />
	<Node group="[]" id="1416" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1417" dst_node_input="a" src_node_id="1416" src_node_output="result" />
	<Node group="[]" id="1417" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1426" dst_node_input="in1" src_node_id="1417" src_node_output="result" />
	<Node group="[]" id="1426" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1434" dst_node_input="sel" src_node_id="1426" src_node_output="result" />
	<Node group="[]" id="2633" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1422" dst_node_input="in0" src_node_id="2633" src_node_output="value" />
	<Node group="[]" id="1418" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1421" dst_node_input="input" src_node_id="1418" src_node_output="o" />
	<Node group="[]" id="1421" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1422" dst_node_input="in1" src_node_id="1421" src_node_output="output" />
	<Node group="[]" id="1422" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1424" dst_node_input="in0" src_node_id="1422" src_node_output="result" />
	<Node group="[]" id="1398" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1399" dst_node_input="option1" src_node_id="1398" src_node_output="value" />
	<Node group="[]" id="1399" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1400" dst_node_input="i" src_node_id="1399" src_node_output="result" />
	<Node group="[]" id="1400" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1423" dst_node_input="input" src_node_id="1400" src_node_output="o" />
	<Node group="[]" id="1423" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1424" dst_node_input="in1" src_node_id="1423" src_node_output="output" />
	<Node group="[]" id="1424" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1425" dst_node_input="input" src_node_id="1424" src_node_output="result" />
	<Node group="[]" id="1425" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1434" dst_node_input="option0" src_node_id="1425" src_node_output="output" />
	<Node group="[]" id="1427" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1429" dst_node_input="in0" src_node_id="1427" src_node_output="value" />
	<Node group="[]" id="1428" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1429" dst_node_input="in1" src_node_id="1428" src_node_output="value" />
	<Node group="[]" id="1429" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1431" dst_node_input="in0" src_node_id="1429" src_node_output="result" />
	<Node group="[]" id="1430" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1431" dst_node_input="in1" src_node_id="1430" src_node_output="value" />
	<Node group="[]" id="1431" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1432" dst_node_input="input" src_node_id="1431" src_node_output="result" />
	<Node group="[]" id="1432" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1434" dst_node_input="option1" src_node_id="1432" src_node_output="output" />
	<Edge dst_node_id="1434" dst_node_input="option3" src_node_id="1432" src_node_output="output" />
	<Node group="[]" id="1433" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1434" dst_node_input="option2" src_node_id="1433" src_node_output="value" />
	<Node group="[]" id="1434" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1442" dst_node_input="b" src_node_id="1434" src_node_output="result" />
	<Node group="[]" id="1442" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1452" dst_node_input="a" src_node_id="1442" src_node_output="result" />
	<Node group="[]" id="1337" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3faa466f; 1.3302744626998901</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:19)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111101010100100011001101111</Value>
		<HexValue>0x3faa466f</HexValue>
		<NumericValue>1.3302744626998901</NumericValue>
	</Node>
	<Edge dst_node_id="1443" dst_node_input="a" src_node_id="1337" src_node_output="value" />
	<Node group="[]" id="2710" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1361" dst_node_input="a" src_node_id="2710" src_node_output="value" />
	<Node group="[]" id="2709" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1359" dst_node_input="a" src_node_id="2709" src_node_output="value" />
	<Node group="[]" id="1353" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:336)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1355" dst_node_input="in0" src_node_id="1353" src_node_output="value" />
	<Node group="[]" id="1354" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:337)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge dst_node_id="1355" dst_node_input="in1" src_node_id="1354" src_node_output="result" />
	<Node group="[]" id="1355" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:338)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1356" dst_node_input="input" src_node_id="1355" src_node_output="result" />
	<Node group="[]" id="1356" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:339)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1357" dst_node_input="a" src_node_id="1356" src_node_output="output" />
	<Node group="[]" id="1338" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3e6d3389; 0.23164190351963043</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:20)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110011011010011001110001001</Value>
		<HexValue>0x3e6d3389</HexValue>
		<NumericValue>0.23164190351963043</NumericValue>
	</Node>
	<Edge dst_node_id="1357" dst_node_input="b" src_node_id="1338" src_node_output="value" />
	<Node group="[]" id="1357" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1359" dst_node_input="b" src_node_id="1357" src_node_output="result" />
	<Node group="[]" id="1359" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1361" dst_node_input="b" src_node_id="1359" src_node_output="result" />
	<Node group="[]" id="1361" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1443" dst_node_input="b" src_node_id="1361" src_node_output="result" />
	<Edge dst_node_id="1445" dst_node_input="b" src_node_id="1361" src_node_output="result" />
	<Edge dst_node_id="1447" dst_node_input="b" src_node_id="1361" src_node_output="result" />
	<Edge dst_node_id="1449" dst_node_input="b" src_node_id="1361" src_node_output="result" />
	<Edge dst_node_id="1451" dst_node_input="b" src_node_id="1361" src_node_output="result" />
	<Node group="[]" id="1443" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1444" dst_node_input="a" src_node_id="1443" src_node_output="result" />
	<Node group="[]" id="1336" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbfe91eea; -1.8212559223175049</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:18)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111111111010010001111011101010</Value>
		<HexValue>0xbfe91eea</HexValue>
		<NumericValue>-1.8212559223175049</NumericValue>
	</Node>
	<Edge dst_node_id="1444" dst_node_input="b" src_node_id="1336" src_node_output="value" />
	<Node group="[]" id="1444" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1445" dst_node_input="a" src_node_id="1444" src_node_output="result" />
	<Node group="[]" id="1445" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1446" dst_node_input="a" src_node_id="1445" src_node_output="result" />
	<Node group="[]" id="1335" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3fe40778; 1.781477928161621</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:17)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111111001000000011101111000</Value>
		<HexValue>0x3fe40778</HexValue>
		<NumericValue>1.781477928161621</NumericValue>
	</Node>
	<Edge dst_node_id="1446" dst_node_input="b" src_node_id="1335" src_node_output="value" />
	<Node group="[]" id="1446" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1447" dst_node_input="a" src_node_id="1446" src_node_output="result" />
	<Node group="[]" id="1447" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1448" dst_node_input="a" src_node_id="1447" src_node_output="result" />
	<Node group="[]" id="1334" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbeb68f87; -0.3565637767314911</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:16)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111110101101101000111110000111</Value>
		<HexValue>0xbeb68f87</HexValue>
		<NumericValue>-0.3565637767314911</NumericValue>
	</Node>
	<Edge dst_node_id="1448" dst_node_input="b" src_node_id="1334" src_node_output="value" />
	<Node group="[]" id="1448" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1449" dst_node_input="a" src_node_id="1448" src_node_output="result" />
	<Node group="[]" id="1449" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1450" dst_node_input="a" src_node_id="1449" src_node_output="result" />
	<Node group="[]" id="1333" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ea385fa; 0.3193815350532532</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:15)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110101000111000010111111010</Value>
		<HexValue>0x3ea385fa</HexValue>
		<NumericValue>0.3193815350532532</NumericValue>
	</Node>
	<Edge dst_node_id="1450" dst_node_input="b" src_node_id="1333" src_node_output="value" />
	<Node group="[]" id="1450" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1451" dst_node_input="a" src_node_id="1450" src_node_output="result" />
	<Node group="[]" id="1451" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1452" dst_node_input="b" src_node_id="1451" src_node_output="result" />
	<Node group="[]" id="1452" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1454" dst_node_input="b" src_node_id="1452" src_node_output="result" />
	<Node group="[]" id="1454" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1458" dst_node_input="b" src_node_id="1454" src_node_output="result" />
	<Edge dst_node_id="1459" dst_node_input="option0" src_node_id="1454" src_node_output="result" />
	<Node group="[]" id="2708" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1458" dst_node_input="a" src_node_id="2708" src_node_output="value" />
	<Node group="[]" id="1458" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1459" dst_node_input="option1" src_node_id="1458" src_node_output="result" />
	<Node group="[]" id="1459" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1460" dst_node_input="b" src_node_id="1459" src_node_output="result" />
	<Node group="[]" id="1460" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1462" dst_node_input="b" src_node_id="1460" src_node_output="result" />
	<Node group="[]" id="1462" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1463" dst_node_input="b" src_node_id="1462" src_node_output="result" />
	<Node group="[]" id="1463" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1677" dst_node_input="a" src_node_id="1463" src_node_output="result" />
	<Node group="[]" id="2707" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1465" dst_node_input="a" src_node_id="2707" src_node_output="value" />
	<Node group="[]" id="1465" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1544" dst_node_input="a" src_node_id="1465" src_node_output="result" />
	<Node group="[]" id="1466" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1467" dst_node_input="a" src_node_id="1466" src_node_output="result" />
	<Node group="[]" id="1467" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1469" dst_node_input="input" src_node_id="1467" src_node_output="result" />
	<Edge dst_node_id="1474" dst_node_input="a" src_node_id="1467" src_node_output="result" />
	<Edge dst_node_id="1478" dst_node_input="a" src_node_id="1467" src_node_output="result" />
	<Node group="[]" id="1468" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1469" dst_node_input="doubt" src_node_id="1468" src_node_output="value" />
	<Node group="[]" id="1469" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1470" dst_node_input="i" src_node_id="1469" src_node_output="output" />
	<Node group="[]" id="1470" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1472" dst_node_input="a" src_node_id="1470" src_node_output="o" />
	<Node group="[]" id="2706" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="1472" dst_node_input="b" src_node_id="2706" src_node_output="value" />
	<Node group="[]" id="1472" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1475" dst_node_input="input" src_node_id="1472" src_node_output="result" />
	<Edge dst_node_id="1479" dst_node_input="input" src_node_id="1472" src_node_output="result" />
	<Edge dst_node_id="1481" dst_node_input="input" src_node_id="1472" src_node_output="result" />
	<Node group="[]" id="1481" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1482" dst_node_input="i" src_node_id="1481" src_node_output="output" />
	<Edge dst_node_id="1483" dst_node_input="i" src_node_id="1481" src_node_output="output" />
	<Edge dst_node_id="1484" dst_node_input="i" src_node_id="1481" src_node_output="output" />
	<Edge dst_node_id="1485" dst_node_input="i" src_node_id="1481" src_node_output="output" />
	<Node group="[]" id="1482" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1503" dst_node_input="i" src_node_id="1482" src_node_output="o" />
	<Node group="[]" id="1503" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1505" dst_node_input="a" src_node_id="1503" src_node_output="o" />
	<Node group="[]" id="2705" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="1505" dst_node_input="b" src_node_id="2705" src_node_output="value" />
	<Node group="[]" id="1505" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1509" dst_node_input="a" src_node_id="1505" src_node_output="result" />
	<Node group="[]" id="1484" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1541" dst_node_input="input" src_node_id="1484" src_node_output="o" />
	<Node group="[]" id="1541" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1542" dst_node_input="input" src_node_id="1541" src_node_output="output" />
	<Node group="[]" id="1542" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1543" dst_node_input="addr" src_node_id="1542" src_node_output="output" />
	<Node group="[]" id="1543" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="1493" dst_node_input="a" src_node_id="1543" src_node_output="dout" />
	<Edge dst_node_id="1494" dst_node_input="b" src_node_id="1543" src_node_output="dout" />
	<Node group="[]" id="1483" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1538" dst_node_input="input" src_node_id="1483" src_node_output="o" />
	<Node group="[]" id="1538" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1539" dst_node_input="input" src_node_id="1538" src_node_output="output" />
	<Node group="[]" id="1539" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1540" dst_node_input="addr" src_node_id="1539" src_node_output="output" />
	<Node group="[]" id="1540" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="1489" dst_node_input="a" src_node_id="1540" src_node_output="dout" />
	<Edge dst_node_id="1490" dst_node_input="b" src_node_id="1540" src_node_output="dout" />
	<Node group="[]" id="1486" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="1487" dst_node_input="a" src_node_id="1486" src_node_output="value" />
	<Node group="[]" id="1485" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1487" dst_node_input="b" src_node_id="1485" src_node_output="o" />
	<Node group="[]" id="1487" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1488" dst_node_input="i" src_node_id="1487" src_node_output="result" />
	<Node group="[]" id="1488" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1489" dst_node_input="b" src_node_id="1488" src_node_output="o" />
	<Edge dst_node_id="1490" dst_node_input="a" src_node_id="1488" src_node_output="o" />
	<Node group="[]" id="1489" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1491" dst_node_input="a" src_node_id="1489" src_node_output="result" />
	<Node group="[]" id="1490" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1491" dst_node_input="b" src_node_id="1490" src_node_output="result" />
	<Node group="[]" id="1491" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1492" dst_node_input="i" src_node_id="1491" src_node_output="result" />
	<Node group="[]" id="1492" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1493" dst_node_input="b" src_node_id="1492" src_node_output="o" />
	<Edge dst_node_id="1494" dst_node_input="a" src_node_id="1492" src_node_output="o" />
	<Node group="[]" id="1493" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1495" dst_node_input="a" src_node_id="1493" src_node_output="result" />
	<Node group="[]" id="1494" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1495" dst_node_input="b" src_node_id="1494" src_node_output="result" />
	<Node group="[]" id="1495" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1496" dst_node_input="i" src_node_id="1495" src_node_output="result" />
	<Node group="[]" id="1496" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1497" dst_node_input="i" src_node_id="1496" src_node_output="o" />
	<Node group="[]" id="1497" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1499" dst_node_input="a" src_node_id="1497" src_node_output="o" />
	<Edge dst_node_id="1501" dst_node_input="option0" src_node_id="1497" src_node_output="o" />
	<Node group="[]" id="2704" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1499" dst_node_input="b" src_node_id="2704" src_node_output="value" />
	<Node group="[]" id="1499" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1501" dst_node_input="sel" src_node_id="1499" src_node_output="result" />
	<Edge dst_node_id="1508" dst_node_input="sel" src_node_id="1499" src_node_output="result" />
	<Node group="[]" id="1507" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1508" dst_node_input="option0" src_node_id="1507" src_node_output="value" />
	<Node group="[]" id="1506" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1508" dst_node_input="option1" src_node_id="1506" src_node_output="value" />
	<Node group="[]" id="1508" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1509" dst_node_input="b" src_node_id="1508" src_node_output="result" />
	<Node group="[]" id="1509" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1511" dst_node_input="a" src_node_id="1509" src_node_output="result" />
	<Edge dst_node_id="1516" dst_node_input="a" src_node_id="1509" src_node_output="result" />
	<Edge dst_node_id="1520" dst_node_input="i" src_node_id="1509" src_node_output="result" />
	<Node group="[]" id="2703" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1511" dst_node_input="b" src_node_id="2703" src_node_output="value" />
	<Node group="[]" id="1511" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1513" dst_node_input="a" src_node_id="1511" src_node_output="result" />
	<Node group="[]" id="2702" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1474" dst_node_input="b" src_node_id="2702" src_node_output="value" />
	<Node group="[]" id="1474" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1476" dst_node_input="a" src_node_id="1474" src_node_output="result" />
	<Node group="[]" id="1475" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1476" dst_node_input="b" src_node_id="1475" src_node_output="output" />
	<Node group="[]" id="1476" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1512" dst_node_input="a" src_node_id="1476" src_node_output="result" />
	<Edge dst_node_id="1519" dst_node_input="b" src_node_id="1476" src_node_output="result" />
	<Node group="[]" id="1512" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1513" dst_node_input="b" src_node_id="1512" src_node_output="result" />
	<Node group="[]" id="1513" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1514" dst_node_input="a" src_node_id="1513" src_node_output="result" />
	<Node group="[]" id="2701" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1478" dst_node_input="b" src_node_id="2701" src_node_output="value" />
	<Node group="[]" id="1478" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1480" dst_node_input="a" src_node_id="1478" src_node_output="result" />
	<Node group="[]" id="1479" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1480" dst_node_input="b" src_node_id="1479" src_node_output="output" />
	<Node group="[]" id="1480" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1514" dst_node_input="b" src_node_id="1480" src_node_output="result" />
	<Edge dst_node_id="1517" dst_node_input="a" src_node_id="1480" src_node_output="result" />
	<Node group="[]" id="1514" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1528" dst_node_input="in0" src_node_id="1514" src_node_output="result" />
	<Node group="[]" id="2700" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1516" dst_node_input="b" src_node_id="2700" src_node_output="value" />
	<Node group="[]" id="1516" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1518" dst_node_input="a" src_node_id="1516" src_node_output="result" />
	<Node group="[]" id="1517" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1518" dst_node_input="b" src_node_id="1517" src_node_output="result" />
	<Node group="[]" id="1518" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1519" dst_node_input="a" src_node_id="1518" src_node_output="result" />
	<Node group="[]" id="1519" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1528" dst_node_input="in1" src_node_id="1519" src_node_output="result" />
	<Node group="[]" id="1528" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1536" dst_node_input="sel" src_node_id="1528" src_node_output="result" />
	<Node group="[]" id="2634" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1524" dst_node_input="in0" src_node_id="2634" src_node_output="value" />
	<Node group="[]" id="1520" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1523" dst_node_input="input" src_node_id="1520" src_node_output="o" />
	<Node group="[]" id="1523" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1524" dst_node_input="in1" src_node_id="1523" src_node_output="output" />
	<Node group="[]" id="1524" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1526" dst_node_input="in0" src_node_id="1524" src_node_output="result" />
	<Node group="[]" id="1500" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1501" dst_node_input="option1" src_node_id="1500" src_node_output="value" />
	<Node group="[]" id="1501" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1502" dst_node_input="i" src_node_id="1501" src_node_output="result" />
	<Node group="[]" id="1502" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1525" dst_node_input="input" src_node_id="1502" src_node_output="o" />
	<Node group="[]" id="1525" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1526" dst_node_input="in1" src_node_id="1525" src_node_output="output" />
	<Node group="[]" id="1526" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1527" dst_node_input="input" src_node_id="1526" src_node_output="result" />
	<Node group="[]" id="1527" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1536" dst_node_input="option0" src_node_id="1527" src_node_output="output" />
	<Node group="[]" id="1529" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1531" dst_node_input="in0" src_node_id="1529" src_node_output="value" />
	<Node group="[]" id="1530" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1531" dst_node_input="in1" src_node_id="1530" src_node_output="value" />
	<Node group="[]" id="1531" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1533" dst_node_input="in0" src_node_id="1531" src_node_output="result" />
	<Node group="[]" id="1532" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1533" dst_node_input="in1" src_node_id="1532" src_node_output="value" />
	<Node group="[]" id="1533" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1534" dst_node_input="input" src_node_id="1533" src_node_output="result" />
	<Node group="[]" id="1534" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1536" dst_node_input="option1" src_node_id="1534" src_node_output="output" />
	<Edge dst_node_id="1536" dst_node_input="option3" src_node_id="1534" src_node_output="output" />
	<Node group="[]" id="1535" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1536" dst_node_input="option2" src_node_id="1535" src_node_output="value" />
	<Node group="[]" id="1536" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1544" dst_node_input="b" src_node_id="1536" src_node_output="result" />
	<Node group="[]" id="1544" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1672" dst_node_input="a" src_node_id="1544" src_node_output="result" />
	<Node group="[]" id="2699" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1668" dst_node_input="b" src_node_id="2699" src_node_output="value" />
	<Node group="[]" id="1668" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1671" dst_node_input="sel" src_node_id="1668" src_node_output="result" />
	<Node group="[]" id="2698" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1666" dst_node_input="a" src_node_id="2698" src_node_output="value" />
	<Node group="[]" id="1551" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ecc422a; 0.3989422917366028</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:21)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110110011000100001000101010</Value>
		<HexValue>0x3ecc422a</HexValue>
		<NumericValue>0.3989422917366028</NumericValue>
	</Node>
	<Edge dst_node_id="1654" dst_node_input="a" src_node_id="1551" src_node_output="value" />
	<Node group="[]" id="1574" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1577" dst_node_input="a" src_node_id="1574" src_node_output="result" />
	<Node group="[]" id="2657" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1577" dst_node_input="b" src_node_id="2657" src_node_output="floatOut" />
	<Node group="[]" id="1577" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1579" dst_node_input="input" src_node_id="1577" src_node_output="result" />
	<Edge dst_node_id="1584" dst_node_input="a" src_node_id="1577" src_node_output="result" />
	<Edge dst_node_id="1588" dst_node_input="a" src_node_id="1577" src_node_output="result" />
	<Node group="[]" id="1578" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1579" dst_node_input="doubt" src_node_id="1578" src_node_output="value" />
	<Node group="[]" id="1579" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1580" dst_node_input="i" src_node_id="1579" src_node_output="output" />
	<Node group="[]" id="1580" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1582" dst_node_input="a" src_node_id="1580" src_node_output="o" />
	<Node group="[]" id="2697" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="1582" dst_node_input="b" src_node_id="2697" src_node_output="value" />
	<Node group="[]" id="1582" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1585" dst_node_input="input" src_node_id="1582" src_node_output="result" />
	<Edge dst_node_id="1589" dst_node_input="input" src_node_id="1582" src_node_output="result" />
	<Edge dst_node_id="1591" dst_node_input="input" src_node_id="1582" src_node_output="result" />
	<Node group="[]" id="1591" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1592" dst_node_input="i" src_node_id="1591" src_node_output="output" />
	<Edge dst_node_id="1593" dst_node_input="i" src_node_id="1591" src_node_output="output" />
	<Edge dst_node_id="1594" dst_node_input="i" src_node_id="1591" src_node_output="output" />
	<Edge dst_node_id="1595" dst_node_input="i" src_node_id="1591" src_node_output="output" />
	<Node group="[]" id="1592" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1613" dst_node_input="i" src_node_id="1592" src_node_output="o" />
	<Node group="[]" id="1613" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1615" dst_node_input="a" src_node_id="1613" src_node_output="o" />
	<Node group="[]" id="2696" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="1615" dst_node_input="b" src_node_id="2696" src_node_output="value" />
	<Node group="[]" id="1615" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1619" dst_node_input="a" src_node_id="1615" src_node_output="result" />
	<Node group="[]" id="1594" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1651" dst_node_input="input" src_node_id="1594" src_node_output="o" />
	<Node group="[]" id="1651" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1652" dst_node_input="input" src_node_id="1651" src_node_output="output" />
	<Node group="[]" id="1652" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1653" dst_node_input="addr" src_node_id="1652" src_node_output="output" />
	<Node group="[]" id="1653" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="1603" dst_node_input="a" src_node_id="1653" src_node_output="dout" />
	<Edge dst_node_id="1604" dst_node_input="b" src_node_id="1653" src_node_output="dout" />
	<Node group="[]" id="1593" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1648" dst_node_input="input" src_node_id="1593" src_node_output="o" />
	<Node group="[]" id="1648" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1649" dst_node_input="input" src_node_id="1648" src_node_output="output" />
	<Node group="[]" id="1649" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1650" dst_node_input="addr" src_node_id="1649" src_node_output="output" />
	<Node group="[]" id="1650" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="1599" dst_node_input="a" src_node_id="1650" src_node_output="dout" />
	<Edge dst_node_id="1600" dst_node_input="b" src_node_id="1650" src_node_output="dout" />
	<Node group="[]" id="1596" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="1597" dst_node_input="a" src_node_id="1596" src_node_output="value" />
	<Node group="[]" id="1595" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1597" dst_node_input="b" src_node_id="1595" src_node_output="o" />
	<Node group="[]" id="1597" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1598" dst_node_input="i" src_node_id="1597" src_node_output="result" />
	<Node group="[]" id="1598" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1599" dst_node_input="b" src_node_id="1598" src_node_output="o" />
	<Edge dst_node_id="1600" dst_node_input="a" src_node_id="1598" src_node_output="o" />
	<Node group="[]" id="1599" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1601" dst_node_input="a" src_node_id="1599" src_node_output="result" />
	<Node group="[]" id="1600" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1601" dst_node_input="b" src_node_id="1600" src_node_output="result" />
	<Node group="[]" id="1601" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1602" dst_node_input="i" src_node_id="1601" src_node_output="result" />
	<Node group="[]" id="1602" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1603" dst_node_input="b" src_node_id="1602" src_node_output="o" />
	<Edge dst_node_id="1604" dst_node_input="a" src_node_id="1602" src_node_output="o" />
	<Node group="[]" id="1603" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1605" dst_node_input="a" src_node_id="1603" src_node_output="result" />
	<Node group="[]" id="1604" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1605" dst_node_input="b" src_node_id="1604" src_node_output="result" />
	<Node group="[]" id="1605" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1606" dst_node_input="i" src_node_id="1605" src_node_output="result" />
	<Node group="[]" id="1606" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1607" dst_node_input="i" src_node_id="1606" src_node_output="o" />
	<Node group="[]" id="1607" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1609" dst_node_input="a" src_node_id="1607" src_node_output="o" />
	<Edge dst_node_id="1611" dst_node_input="option0" src_node_id="1607" src_node_output="o" />
	<Node group="[]" id="2695" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1609" dst_node_input="b" src_node_id="2695" src_node_output="value" />
	<Node group="[]" id="1609" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1611" dst_node_input="sel" src_node_id="1609" src_node_output="result" />
	<Edge dst_node_id="1618" dst_node_input="sel" src_node_id="1609" src_node_output="result" />
	<Node group="[]" id="1617" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1618" dst_node_input="option0" src_node_id="1617" src_node_output="value" />
	<Node group="[]" id="1616" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1618" dst_node_input="option1" src_node_id="1616" src_node_output="value" />
	<Node group="[]" id="1618" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1619" dst_node_input="b" src_node_id="1618" src_node_output="result" />
	<Node group="[]" id="1619" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1621" dst_node_input="a" src_node_id="1619" src_node_output="result" />
	<Edge dst_node_id="1626" dst_node_input="a" src_node_id="1619" src_node_output="result" />
	<Edge dst_node_id="1630" dst_node_input="i" src_node_id="1619" src_node_output="result" />
	<Node group="[]" id="2694" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1621" dst_node_input="b" src_node_id="2694" src_node_output="value" />
	<Node group="[]" id="1621" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1623" dst_node_input="a" src_node_id="1621" src_node_output="result" />
	<Node group="[]" id="2693" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1584" dst_node_input="b" src_node_id="2693" src_node_output="value" />
	<Node group="[]" id="1584" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1586" dst_node_input="a" src_node_id="1584" src_node_output="result" />
	<Node group="[]" id="1585" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1586" dst_node_input="b" src_node_id="1585" src_node_output="output" />
	<Node group="[]" id="1586" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1622" dst_node_input="a" src_node_id="1586" src_node_output="result" />
	<Edge dst_node_id="1629" dst_node_input="b" src_node_id="1586" src_node_output="result" />
	<Node group="[]" id="1622" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1623" dst_node_input="b" src_node_id="1622" src_node_output="result" />
	<Node group="[]" id="1623" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1624" dst_node_input="a" src_node_id="1623" src_node_output="result" />
	<Node group="[]" id="2692" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1588" dst_node_input="b" src_node_id="2692" src_node_output="value" />
	<Node group="[]" id="1588" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1590" dst_node_input="a" src_node_id="1588" src_node_output="result" />
	<Node group="[]" id="1589" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1590" dst_node_input="b" src_node_id="1589" src_node_output="output" />
	<Node group="[]" id="1590" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1624" dst_node_input="b" src_node_id="1590" src_node_output="result" />
	<Edge dst_node_id="1627" dst_node_input="a" src_node_id="1590" src_node_output="result" />
	<Node group="[]" id="1624" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1638" dst_node_input="in0" src_node_id="1624" src_node_output="result" />
	<Node group="[]" id="2691" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1626" dst_node_input="b" src_node_id="2691" src_node_output="value" />
	<Node group="[]" id="1626" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1628" dst_node_input="a" src_node_id="1626" src_node_output="result" />
	<Node group="[]" id="1627" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1628" dst_node_input="b" src_node_id="1627" src_node_output="result" />
	<Node group="[]" id="1628" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1629" dst_node_input="a" src_node_id="1628" src_node_output="result" />
	<Node group="[]" id="1629" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1638" dst_node_input="in1" src_node_id="1629" src_node_output="result" />
	<Node group="[]" id="1638" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1646" dst_node_input="sel" src_node_id="1638" src_node_output="result" />
	<Node group="[]" id="2635" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1634" dst_node_input="in0" src_node_id="2635" src_node_output="value" />
	<Node group="[]" id="1630" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1633" dst_node_input="input" src_node_id="1630" src_node_output="o" />
	<Node group="[]" id="1633" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1634" dst_node_input="in1" src_node_id="1633" src_node_output="output" />
	<Node group="[]" id="1634" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1636" dst_node_input="in0" src_node_id="1634" src_node_output="result" />
	<Node group="[]" id="1610" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1611" dst_node_input="option1" src_node_id="1610" src_node_output="value" />
	<Node group="[]" id="1611" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1612" dst_node_input="i" src_node_id="1611" src_node_output="result" />
	<Node group="[]" id="1612" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1635" dst_node_input="input" src_node_id="1612" src_node_output="o" />
	<Node group="[]" id="1635" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1636" dst_node_input="in1" src_node_id="1635" src_node_output="output" />
	<Node group="[]" id="1636" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1637" dst_node_input="input" src_node_id="1636" src_node_output="result" />
	<Node group="[]" id="1637" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1646" dst_node_input="option0" src_node_id="1637" src_node_output="output" />
	<Node group="[]" id="1639" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1641" dst_node_input="in0" src_node_id="1639" src_node_output="value" />
	<Node group="[]" id="1640" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="1641" dst_node_input="in1" src_node_id="1640" src_node_output="value" />
	<Node group="[]" id="1641" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1643" dst_node_input="in0" src_node_id="1641" src_node_output="result" />
	<Node group="[]" id="1642" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1643" dst_node_input="in1" src_node_id="1642" src_node_output="value" />
	<Node group="[]" id="1643" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1644" dst_node_input="input" src_node_id="1643" src_node_output="result" />
	<Node group="[]" id="1644" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1646" dst_node_input="option1" src_node_id="1644" src_node_output="output" />
	<Edge dst_node_id="1646" dst_node_input="option3" src_node_id="1644" src_node_output="output" />
	<Node group="[]" id="1645" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="1646" dst_node_input="option2" src_node_id="1645" src_node_output="value" />
	<Node group="[]" id="1646" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1654" dst_node_input="b" src_node_id="1646" src_node_output="result" />
	<Node group="[]" id="1654" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1664" dst_node_input="a" src_node_id="1654" src_node_output="result" />
	<Node group="[]" id="1549" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3faa466f; 1.3302744626998901</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:19)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111101010100100011001101111</Value>
		<HexValue>0x3faa466f</HexValue>
		<NumericValue>1.3302744626998901</NumericValue>
	</Node>
	<Edge dst_node_id="1655" dst_node_input="a" src_node_id="1549" src_node_output="value" />
	<Node group="[]" id="2690" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1573" dst_node_input="a" src_node_id="2690" src_node_output="value" />
	<Node group="[]" id="2689" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1571" dst_node_input="a" src_node_id="2689" src_node_output="value" />
	<Node group="[]" id="1565" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:336)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="1567" dst_node_input="in0" src_node_id="1565" src_node_output="value" />
	<Node group="[]" id="1566" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:337)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge dst_node_id="1567" dst_node_input="in1" src_node_id="1566" src_node_output="result" />
	<Node group="[]" id="1567" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:338)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1568" dst_node_input="input" src_node_id="1567" src_node_output="result" />
	<Node group="[]" id="1568" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:339)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1569" dst_node_input="a" src_node_id="1568" src_node_output="output" />
	<Node group="[]" id="1550" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3e6d3389; 0.23164190351963043</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:20)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110011011010011001110001001</Value>
		<HexValue>0x3e6d3389</HexValue>
		<NumericValue>0.23164190351963043</NumericValue>
	</Node>
	<Edge dst_node_id="1569" dst_node_input="b" src_node_id="1550" src_node_output="value" />
	<Node group="[]" id="1569" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1571" dst_node_input="b" src_node_id="1569" src_node_output="result" />
	<Node group="[]" id="1571" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1573" dst_node_input="b" src_node_id="1571" src_node_output="result" />
	<Node group="[]" id="1573" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1655" dst_node_input="b" src_node_id="1573" src_node_output="result" />
	<Edge dst_node_id="1657" dst_node_input="b" src_node_id="1573" src_node_output="result" />
	<Edge dst_node_id="1659" dst_node_input="b" src_node_id="1573" src_node_output="result" />
	<Edge dst_node_id="1661" dst_node_input="b" src_node_id="1573" src_node_output="result" />
	<Edge dst_node_id="1663" dst_node_input="b" src_node_id="1573" src_node_output="result" />
	<Node group="[]" id="1655" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1656" dst_node_input="a" src_node_id="1655" src_node_output="result" />
	<Node group="[]" id="1548" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbfe91eea; -1.8212559223175049</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:18)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111111111010010001111011101010</Value>
		<HexValue>0xbfe91eea</HexValue>
		<NumericValue>-1.8212559223175049</NumericValue>
	</Node>
	<Edge dst_node_id="1656" dst_node_input="b" src_node_id="1548" src_node_output="value" />
	<Node group="[]" id="1656" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1657" dst_node_input="a" src_node_id="1656" src_node_output="result" />
	<Node group="[]" id="1657" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1658" dst_node_input="a" src_node_id="1657" src_node_output="result" />
	<Node group="[]" id="1547" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3fe40778; 1.781477928161621</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:17)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111111001000000011101111000</Value>
		<HexValue>0x3fe40778</HexValue>
		<NumericValue>1.781477928161621</NumericValue>
	</Node>
	<Edge dst_node_id="1658" dst_node_input="b" src_node_id="1547" src_node_output="value" />
	<Node group="[]" id="1658" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1659" dst_node_input="a" src_node_id="1658" src_node_output="result" />
	<Node group="[]" id="1659" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1660" dst_node_input="a" src_node_id="1659" src_node_output="result" />
	<Node group="[]" id="1546" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbeb68f87; -0.3565637767314911</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:16)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111110101101101000111110000111</Value>
		<HexValue>0xbeb68f87</HexValue>
		<NumericValue>-0.3565637767314911</NumericValue>
	</Node>
	<Edge dst_node_id="1660" dst_node_input="b" src_node_id="1546" src_node_output="value" />
	<Node group="[]" id="1660" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1661" dst_node_input="a" src_node_id="1660" src_node_output="result" />
	<Node group="[]" id="1661" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1662" dst_node_input="a" src_node_id="1661" src_node_output="result" />
	<Node group="[]" id="1545" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ea385fa; 0.3193815350532532</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:15)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110101000111000010111111010</Value>
		<HexValue>0x3ea385fa</HexValue>
		<NumericValue>0.3193815350532532</NumericValue>
	</Node>
	<Edge dst_node_id="1662" dst_node_input="b" src_node_id="1545" src_node_output="value" />
	<Node group="[]" id="1662" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1663" dst_node_input="a" src_node_id="1662" src_node_output="result" />
	<Node group="[]" id="1663" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1664" dst_node_input="b" src_node_id="1663" src_node_output="result" />
	<Node group="[]" id="1664" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1666" dst_node_input="b" src_node_id="1664" src_node_output="result" />
	<Node group="[]" id="1666" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1670" dst_node_input="b" src_node_id="1666" src_node_output="result" />
	<Edge dst_node_id="1671" dst_node_input="option0" src_node_id="1666" src_node_output="result" />
	<Node group="[]" id="2688" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1670" dst_node_input="a" src_node_id="2688" src_node_output="value" />
	<Node group="[]" id="1670" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1671" dst_node_input="option1" src_node_id="1670" src_node_output="result" />
	<Node group="[]" id="1671" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1672" dst_node_input="b" src_node_id="1671" src_node_output="result" />
	<Node group="[]" id="1672" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1676" dst_node_input="a" src_node_id="1672" src_node_output="result" />
	<Node group="[]" id="2687" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="1675" dst_node_input="a" src_node_id="2687" src_node_output="value" />
	<Node group="[]" id="1673" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1675" dst_node_input="b" src_node_id="1673" src_node_output="result" />
	<Node group="[]" id="1675" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1676" dst_node_input="b" src_node_id="1675" src_node_output="result" />
	<Node group="[]" id="1676" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1677" dst_node_input="b" src_node_id="1676" src_node_output="result" />
	<Node group="[]" id="1677" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:97)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1678" dst_node_input="b" src_node_id="1677" src_node_output="result" />
	<Node group="[]" id="1678" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:98)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="1679" dst_node_input="b" src_node_id="1678" src_node_output="result" />
	<Node group="[]" id="1679" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:98)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2191" dst_node_input="a" src_node_id="1679" src_node_output="result" />
	<Edge dst_node_id="2461" dst_node_input="a" src_node_id="1679" src_node_output="result" />
	<Edge dst_node_id="2463" dst_node_input="b" src_node_id="1679" src_node_output="result" />
	<Node group="[]" id="2191" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2192" dst_node_input="a" src_node_id="2191" src_node_output="result" />
	<Edge dst_node_id="2207" dst_node_input="a" src_node_id="2191" src_node_output="result" />
	<Node group="[]" id="2207" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge dst_node_id="2209" dst_node_input="in1" src_node_id="2207" src_node_output="result" />
	<Node group="[]" id="2209" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2210" dst_node_input="input" src_node_id="2209" src_node_output="result" />
	<Node group="[]" id="2210" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(9)" />
		<Output latency="0" name="output" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:9, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2212" dst_node_input="a" src_node_id="2210" src_node_output="output" />
	<Node group="[]" id="2686" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="2212" dst_node_input="b" src_node_id="2686" src_node_output="value" />
	<Node group="[]" id="2212" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2216" dst_node_input="a" src_node_id="2212" src_node_output="result" />
	<Node group="[]" id="2192" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge dst_node_id="2193" dst_node_input="input" src_node_id="2192" src_node_output="result" />
	<Node group="[]" id="2193" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(23)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:23, -23, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2195" dst_node_input="input" src_node_id="2193" src_node_output="output" />
	<Node group="[]" id="2194" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2195" dst_node_input="doubt" src_node_id="2194" src_node_output="value" />
	<Node group="[]" id="2195" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2196" dst_node_input="i" src_node_id="2195" src_node_output="output" />
	<Node group="[]" id="2196" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2197" dst_node_input="input" src_node_id="2196" src_node_output="o" />
	<Edge dst_node_id="2199" dst_node_input="a" src_node_id="2196" src_node_output="o" />
	<Edge dst_node_id="2201" dst_node_input="input" src_node_id="2196" src_node_output="o" />
	<Node group="[]" id="2197" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2200" dst_node_input="a" src_node_id="2197" src_node_output="output" />
	<Node group="[]" id="2685" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2199" dst_node_input="b" src_node_id="2685" src_node_output="value" />
	<Node group="[]" id="2199" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2200" dst_node_input="b" src_node_id="2199" src_node_output="result" />
	<Node group="[]" id="2200" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2202" dst_node_input="input" src_node_id="2200" src_node_output="result" />
	<Node group="[]" id="2202" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2205" dst_node_input="sel" src_node_id="2202" src_node_output="output" />
	<Edge dst_node_id="2215" dst_node_input="sel" src_node_id="2202" src_node_output="output" />
	<Node group="[]" id="2214" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2215" dst_node_input="option0" src_node_id="2214" src_node_output="value" />
	<Node group="[]" id="2213" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2215" dst_node_input="option1" src_node_id="2213" src_node_output="value" />
	<Node group="[]" id="2215" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2216" dst_node_input="b" src_node_id="2215" src_node_output="result" />
	<Node group="[]" id="2216" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2242" dst_node_input="a" src_node_id="2216" src_node_output="result" />
	<Node group="[]" id="2201" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2206" dst_node_input="a" src_node_id="2201" src_node_output="output" />
	<Node group="[]" id="2204" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x0000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0000000000000000000000000000</Value>
		<HexValue>0x0000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2205" dst_node_input="option0" src_node_id="2204" src_node_output="value" />
	<Node group="[]" id="2203" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2205" dst_node_input="option1" src_node_id="2203" src_node_output="value" />
	<Node group="[]" id="2205" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2206" dst_node_input="b" src_node_id="2205" src_node_output="result" />
	<Node group="[]" id="2206" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2219" dst_node_input="input" src_node_id="2206" src_node_output="result" />
	<Node group="[]" id="2219" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(28)" />
		<Text>&lt;{HWRawBits:28}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2220" dst_node_input="input" src_node_id="2219" src_node_output="output" />
	<Node group="[]" id="2220" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(28)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:28, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2221" dst_node_input="a" src_node_id="2220" src_node_output="output" />
	<Edge dst_node_id="2222" dst_node_input="a" src_node_id="2220" src_node_output="output" />
	<Node group="[]" id="2222" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[25:19]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>19</Base>
		<Width>7</Width>
	</Node>
	<Edge dst_node_id="2223" dst_node_input="input" src_node_id="2222" src_node_output="result" />
	<Node group="[]" id="2223" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2226" dst_node_input="addr" src_node_id="2223" src_node_output="output" />
	<Edge dst_node_id="2227" dst_node_input="addr" src_node_id="2223" src_node_output="output" />
	<Edge dst_node_id="2228" dst_node_input="addr" src_node_id="2223" src_node_output="output" />
	<Edge dst_node_id="2229" dst_node_input="addr" src_node_id="2223" src_node_output="output" />
	<Node group="[]" id="2226" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x79ae1d8
0x76e20af
0x742bc04
0x718a6b1
0x6efd426
0x6c83865
0x6a1c7f5
0x67c77e1
0x6583dab
0x6350f4a
0x612e324
0x5f1b010
0x5d16d39
0x5b21234
0x59396ed
0x575f3a7
0x55920f4
0x53d17b7
0x521d11c
0x5074694
0x4ed71d8
0x4d44cd9
0x4bbd1cf
0x4a3fb23
0x48cc380
0x47625bc
0x4601ce5
0x44aa43a
0x435b726
0x4215145
0x40d6e58
0x3fa0a4a
0x3e7212e
0x3d4af3b
0x3c2b0cd
0x3b12262
0x3a00096
0x38f4826
0x37ef5ee
0x36f06e6
0x35f7820
0x35046c9
0x3417027
0x332f19b
0x324c89b
0x316f2b2
0x3096d83
0x2fc36c5
0x2ef4c40
0x2e2abd4
0x2d65370
0x2ca4116
0x2be72d4
0x2b2e6d3
0x2a79b3e
0x29c8e5b
0x291be78
0x28729f0
0x27ccf33
0x272acb4
0x268c0f8
0x25f0a91
0x2558819
0x24c3836
0x243199b
0x23a2b02
0x2316b32
0x228d8fb
0x2207333
0x21838be
0x2102884
0x2084179
0x2008297
0x1f8eadf
0x1f1795c
0x1ea2d1e
0x1e3053e
0x1dc00da
0x1d51f15
0x1ce5f1f
0x1c7c025
0x1c14161
0x1bae20e
0x1b4a171
0x1ae7ed1
0x1a8797c
0x1a290c1
0x19cc3f9
0x1971281
0x1917bb6
0x18bfefb
0x1869bc2
0x181516c
0x17c1f70
0x1770543
0x172025a
0x16d1634
0x168404f
0x163802c
0x15ed552
0x15a3f4f
0x155bdaa
0x1514ff3
0x14cf5bf
0x148ae9f
0x1447a2e
0x1405805
0x13c47c3
0x1384905
0x1345b6e
0x1307ea4
0x12cb24a
0x128f60b
0x1254994
0x121ac8e
0x11e1eab
0x11a9f9a
0x1172f10
0x113ccc0
0x1107864
0x10d31b1
0x109f863
0x106cc34
0x103ace4
0x1009a2f
0x0fd93d8
0x0fa99a1
0x0f7ab4d</MemoryData>
	</Node>
	<Edge dst_node_id="2230" dst_node_input="a" src_node_id="2226" src_node_output="dout" />
	<Node group="[]" id="2221" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>[18:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>19</Width>
	</Node>
	<Edge dst_node_id="2225" dst_node_input="input" src_node_id="2221" src_node_output="result" />
	<Node group="[]" id="2225" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(19)" />
		<Output latency="0" name="output" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:19, -19, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2230" dst_node_input="b" src_node_id="2225" src_node_output="output" />
	<Edge dst_node_id="2233" dst_node_input="b" src_node_id="2225" src_node_output="output" />
	<Edge dst_node_id="2236" dst_node_input="b" src_node_id="2225" src_node_output="output" />
	<Node group="[]" id="2230" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2231" dst_node_input="a" src_node_id="2230" src_node_output="result" />
	<Node group="[]" id="2227" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xa3abc67
0xa518cb6
0xa67d6c5
0xa7d9ea9
0xa92e850
0xaa7b782
0xabc0fe4
0xacff4f6
0xae36a1c
0xaf67294
0xb091184
0xb1b49f2
0xb2d1ec9
0xb3e92d9
0xb4fa8da
0xb60636b
0xb70c514
0xb80d047
0xb90875f
0xb9feca6
0xbaf024e
0xbbdca79
0xbcc4737
0xbda7a85
0xbe86650
0xbf60c76
0xc036ec3
0xc108ef7
0xc1d6ec3
0xc2a0fc8
0xc36739c
0xc429bc9
0xc4e89ca
0xc5a3f11
0xc65bd03
0xc7104fa
0xc7c1847
0xc86f830
0xc91a5f0
0xc9c22ba
0xca66fb7
0xcb08e09
0xcba7ec8
0xcc44303
0xccddbc3
0xcd74a09
0xce08ece
0xce9ab04
0xcf29f96
0xcfb6d69
0xd04155b
0xd0c9844
0xd14f6f7
0xd1d3240
0xd254ae5
0xd2d41a7
0xd351744
0xd3ccc71
0xd4461e1
0xd4bd841
0xd53303a
0xd5a6a70
0xd618783
0xd68880f
0xd6f6cac
0xd7635ed
0xd7ce463
0xd83789a
0xd89f31a
0xd905469
0xd969d09
0xd9ccd79
0xda2e634
0xda8e7b2
0xdaed269
0xdb4a6cc
0xdba654b
0xdc00e52
0xdc5a24c
0xdcb21a1
0xdd08cb7
0xdd5e3f0
0xddb27ac
0xde0584b
0xde57628
0xdea819d
0xdef7b03
0xdf462ae
0xdf938f4
0xdfdfe25
0xe02b292
0xe075689
0xe0bea56
0xe106e44
0xe14e29d
0xe1947a7
0xe1d9da9
0xe21e4e6
0xe261da2
0xe2a481d
0xe2e6498
0xe327351
0xe367485
0xe3a6870
0xe3e4f4d
0xe422954
0xe45f6be
0xe49b7c2
0xe4d6c95
0xe51156c
0xe54b27a
0xe5843f2
0xe5bca05
0xe5f44e4
0xe62b4bd
0xe6619bf
0xe697417
0xe6cc3f2
0xe70097c
0xe7344df
0xe767645
0xe799dd7
0xe7cbbbd
0xe7fd01e
0xe82db22
0xe85dced
0xe88d5a6
0xe8bc570</MemoryData>
	</Node>
	<Edge dst_node_id="2231" dst_node_input="b" src_node_id="2227" src_node_output="dout" />
	<Node group="[]" id="2231" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2232" dst_node_input="i" src_node_id="2231" src_node_output="result" />
	<Node group="[]" id="2232" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -41, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2233" dst_node_input="a" src_node_id="2232" src_node_output="o" />
	<Node group="[]" id="2233" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2234" dst_node_input="a" src_node_id="2233" src_node_output="result" />
	<Node group="[]" id="2228" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x5c551d6
0x5b9de1a
0x5ae9779
0x5a37ce9
0x5988d6b
0x58dc807
0x5832bc9
0x578b7ca
0x56e6b25
0x56444fd
0x55a447d
0x55068d5
0x546b13a
0x53d1ce8
0x533ab20
0x52a5b29
0x5212c4e
0x5181de0
0x50f2f34
0x5065fa5
0x4fdae91
0x4f51b5b
0x4eca569
0x4e44c28
0x4dc0f06
0x4d3ed76
0x4cbe6ef
0x4c3faea
0x4bc28e6
0x4b47062
0x4acd0e3
0x4a549f0
0x49ddb13
0x49683da
0x48f43d4
0x4881a94
0x48107af
0x47a0abd
0x4732359
0x46c5120
0x46593b1
0x45eeaad
0x45855b8
0x451d478
0x44b6695
0x4450bb9
0x43ec390
0x4388dc9
0x4326a12
0x42c581d
0x426579e
0x420684b
0x41a89d8
0x414bc00
0x40efe7c
0x4095107
0x403b35f
0x3fe2541
0x3f8a66e
0x3f336a7
0x3edd5af
0x3e88348
0x3e33f39
0x3de0947
0x3d8e13b
0x3d3c6dc
0x3ceb9f6
0x3c9ba52
0x3c4c7bc
0x3bfe203
0x3bb08f3
0x3b63c5d
0x3b17c10
0x3acc7dd
0x3a81f96
0x3a3830e
0x39ef219
0x39a6c8c
0x395f23c
0x39182ff
0x38d1ead
0x388c51d
0x3847627
0x38031a7
0x37bf774
0x377c76b
0x373a167
0x36f8544
0x36b72df
0x3676a16
0x3636ac6
0x35f74ce
0x35b880e
0x357a466
0x353c9b7
0x34ff7e0
0x34c2ec5
0x3486e47
0x344b649
0x34106ae
0x33d5f5a
0x339c032
0x3362919
0x33299f5
0x32f12ad
0x32b9325
0x3281b44
0x324aaf2
0x3214216
0x31de098
0x31a865f
0x3173355
0x313e763
0x310a271
0x30d646a
0x30a2d38
0x306fcc6
0x303d2fd
0x300afca
0x2fd9318
0x2fa7cd3
0x2f76ce7
0x2f46340
0x2f15fcb
0x2ee6276
0x2eb6b2e
0x2e879e0
0x2e58e7b</MemoryData>
	</Node>
	<Edge dst_node_id="2234" dst_node_input="b" src_node_id="2228" src_node_output="dout" />
	<Node group="[]" id="2234" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2235" dst_node_input="i" src_node_id="2234" src_node_output="result" />
	<Node group="[]" id="2235" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -33, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2236" dst_node_input="a" src_node_id="2235" src_node_output="o" />
	<Node group="[]" id="2236" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2237" dst_node_input="a" src_node_id="2236" src_node_output="result" />
	<Node group="[]" id="2229" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x0000000
0x016fe51
0x02dcf2d
0x0447347
0x05aeb4e
0x07137eb
0x08759c5
0x09d517f
0x0b31fb8
0x0c8c50b
0x0de4212
0x0f39761
0x108c589
0x11dcd19
0x132ae9e
0x1476aa0
0x15c01a4
0x170742d
0x184c2bd
0x198edd0
0x1acf5e3
0x1c0db6d
0x1d49ee5
0x1e840be
0x1fbc16c
0x20f215b
0x22260fb
0x23580b6
0x24880f5
0x25b6220
0x26e249a
0x280c8c7
0x2934f09
0x2a5b7c0
0x2b80347
0x2ca31fd
0x2dc443a
0x2ee3a57
0x30014ac
0x311d38e
0x3237751
0x3350047
0x3466ec1
0x357c30f
0x368fd7f
0x37a1e5d
0x38b25f6
0x39c1492
0x3acea7c
0x3bda7fb
0x3ce4d54
0x3dedace
0x3ef50ad
0x3ffaf33
0x40ff6a3
0x420273d
0x4304140
0x44044ec
0x450327f
0x4600a34
0x46fcc48
0x47f78f5
0x48f1075
0x49e9301
0x4ae00d2
0x4bd5a1d
0x4cc9f1b
0x4dbcfff
0x4eaecff
0x4f9f64e
0x508ec20
0x517cea6
0x5269e13
0x5355a97
0x5440462
0x5529ba3
0x561208a
0x56f9343
0x57df3fd
0x58c42e4
0x59a8024
0x5a8abe8
0x5b6c65b
0x5c4cfa7
0x5d2c7f6
0x5e0af70
0x5ee863e
0x5fc4c88
0x60a0275
0x617a82c
0x6253dd3
0x632c38f
0x6403986
0x64d9fdb
0x65af6b5
0x6683e35
0x675767f
0x6829fb7
0x68fb9fd
0x69cc574
0x6a9c23d
0x6b6b07a
0x6c3904a
0x6d061cd
0x6dd2524
0x6e9da6d
0x6f681c7
0x7031b51
0x70fa729
0x71c256c
0x7289637
0x734f9a8
0x7414fdb
0x74d98ed
0x759d4f8
0x7660419
0x772266b
0x77e3c08
0x78a450c
0x796418f
0x7a231ad
0x7ae157e
0x7b9ed1c
0x7c5b8a0
0x7d17823
0x7dd2bbc
0x7e8d384
0x7f46f93</MemoryData>
	</Node>
	<Edge dst_node_id="2237" dst_node_input="b" src_node_id="2229" src_node_output="dout" />
	<Node group="[]" id="2237" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2238" dst_node_input="i" src_node_id="2237" src_node_output="result" />
	<Node group="[]" id="2238" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2242" dst_node_input="b" src_node_id="2238" src_node_output="o" />
	<Node group="[]" id="2242" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2243" dst_node_input="i" src_node_id="2242" src_node_output="result" />
	<Node group="[]" id="2243" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2246" dst_node_input="a" src_node_id="2243" src_node_output="o" />
	<Node group="[]" id="2684" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f317218; 0.6931471824645996</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111001100010111001000011000</Value>
		<HexValue>0x3f317218</HexValue>
		<NumericValue>0.6931471824645996</NumericValue>
	</Node>
	<Edge dst_node_id="2246" dst_node_input="b" src_node_id="2684" src_node_output="value" />
	<Node group="[]" id="2246" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2250" dst_node_input="a" src_node_id="2246" src_node_output="result" />
	<Node group="[]" id="2658" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:985)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2249" dst_node_input="a" src_node_id="2658" src_node_output="floatOut" />
	<Node group="[]" id="2249" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2250" dst_node_input="b" src_node_id="2249" src_node_output="result" />
	<Node group="[]" id="2250" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2252" dst_node_input="a" src_node_id="2250" src_node_output="result" />
	<Node group="[]" id="2251" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2252" dst_node_input="b" src_node_id="2251" src_node_output="result" />
	<Node group="[]" id="2252" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:132)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2352" dst_node_input="a" src_node_id="2252" src_node_output="result" />
	<Edge dst_node_id="2360" dst_node_input="a" src_node_id="2252" src_node_output="result" />
	<Edge dst_node_id="2454" dst_node_input="a" src_node_id="2252" src_node_output="result" />
	<Edge dst_node_id="2659" dst_node_input="floatIn" src_node_id="2252" src_node_output="result" />
	<Node group="[]" id="2683" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2454" dst_node_input="b" src_node_id="2683" src_node_output="value" />
	<Node group="[]" id="2454" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2457" dst_node_input="sel" src_node_id="2454" src_node_output="result" />
	<Node group="[]" id="2682" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2452" dst_node_input="a" src_node_id="2682" src_node_output="value" />
	<Node group="[]" id="2337" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ecc422a; 0.3989422917366028</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:21)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110110011000100001000101010</Value>
		<HexValue>0x3ecc422a</HexValue>
		<NumericValue>0.3989422917366028</NumericValue>
	</Node>
	<Edge dst_node_id="2440" dst_node_input="a" src_node_id="2337" src_node_output="value" />
	<Node group="[]" id="2360" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1062)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2363" dst_node_input="a" src_node_id="2360" src_node_output="result" />
	<Node group="[]" id="2659" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodePO2FPMult">
		<Input name="floatIn" type="dfeFloat(8, 24)" />
		<Output latency="1" name="floatOut" type="dfeFloat(8, 24)" />
		<Text>PO2FPMult_N-1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2363" dst_node_input="b" src_node_id="2659" src_node_output="floatOut" />
	<Node group="[]" id="2363" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2365" dst_node_input="input" src_node_id="2363" src_node_output="result" />
	<Edge dst_node_id="2370" dst_node_input="a" src_node_id="2363" src_node_output="result" />
	<Edge dst_node_id="2374" dst_node_input="a" src_node_id="2363" src_node_output="result" />
	<Node group="[]" id="2364" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2365" dst_node_input="doubt" src_node_id="2364" src_node_output="value" />
	<Node group="[]" id="2365" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2366" dst_node_input="i" src_node_id="2365" src_node_output="output" />
	<Node group="[]" id="2366" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2368" dst_node_input="a" src_node_id="2366" src_node_output="o" />
	<Node group="[]" id="2681" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="2368" dst_node_input="b" src_node_id="2681" src_node_output="value" />
	<Node group="[]" id="2368" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2371" dst_node_input="input" src_node_id="2368" src_node_output="result" />
	<Edge dst_node_id="2375" dst_node_input="input" src_node_id="2368" src_node_output="result" />
	<Edge dst_node_id="2377" dst_node_input="input" src_node_id="2368" src_node_output="result" />
	<Node group="[]" id="2377" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2378" dst_node_input="i" src_node_id="2377" src_node_output="output" />
	<Edge dst_node_id="2379" dst_node_input="i" src_node_id="2377" src_node_output="output" />
	<Edge dst_node_id="2380" dst_node_input="i" src_node_id="2377" src_node_output="output" />
	<Edge dst_node_id="2381" dst_node_input="i" src_node_id="2377" src_node_output="output" />
	<Node group="[]" id="2378" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2399" dst_node_input="i" src_node_id="2378" src_node_output="o" />
	<Node group="[]" id="2399" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2401" dst_node_input="a" src_node_id="2399" src_node_output="o" />
	<Node group="[]" id="2680" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="2401" dst_node_input="b" src_node_id="2680" src_node_output="value" />
	<Node group="[]" id="2401" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2405" dst_node_input="a" src_node_id="2401" src_node_output="result" />
	<Node group="[]" id="2380" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2437" dst_node_input="input" src_node_id="2380" src_node_output="o" />
	<Node group="[]" id="2437" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2438" dst_node_input="input" src_node_id="2437" src_node_output="output" />
	<Node group="[]" id="2438" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2439" dst_node_input="addr" src_node_id="2438" src_node_output="output" />
	<Node group="[]" id="2439" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="2389" dst_node_input="a" src_node_id="2439" src_node_output="dout" />
	<Edge dst_node_id="2390" dst_node_input="b" src_node_id="2439" src_node_output="dout" />
	<Node group="[]" id="2379" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2434" dst_node_input="input" src_node_id="2379" src_node_output="o" />
	<Node group="[]" id="2434" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2435" dst_node_input="input" src_node_id="2434" src_node_output="output" />
	<Node group="[]" id="2435" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2436" dst_node_input="addr" src_node_id="2435" src_node_output="output" />
	<Node group="[]" id="2436" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="2385" dst_node_input="a" src_node_id="2436" src_node_output="dout" />
	<Edge dst_node_id="2386" dst_node_input="b" src_node_id="2436" src_node_output="dout" />
	<Node group="[]" id="2382" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="2383" dst_node_input="a" src_node_id="2382" src_node_output="value" />
	<Node group="[]" id="2381" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2383" dst_node_input="b" src_node_id="2381" src_node_output="o" />
	<Node group="[]" id="2383" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2384" dst_node_input="i" src_node_id="2383" src_node_output="result" />
	<Node group="[]" id="2384" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2385" dst_node_input="b" src_node_id="2384" src_node_output="o" />
	<Edge dst_node_id="2386" dst_node_input="a" src_node_id="2384" src_node_output="o" />
	<Node group="[]" id="2385" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2387" dst_node_input="a" src_node_id="2385" src_node_output="result" />
	<Node group="[]" id="2386" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2387" dst_node_input="b" src_node_id="2386" src_node_output="result" />
	<Node group="[]" id="2387" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2388" dst_node_input="i" src_node_id="2387" src_node_output="result" />
	<Node group="[]" id="2388" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2389" dst_node_input="b" src_node_id="2388" src_node_output="o" />
	<Edge dst_node_id="2390" dst_node_input="a" src_node_id="2388" src_node_output="o" />
	<Node group="[]" id="2389" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2391" dst_node_input="a" src_node_id="2389" src_node_output="result" />
	<Node group="[]" id="2390" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2391" dst_node_input="b" src_node_id="2390" src_node_output="result" />
	<Node group="[]" id="2391" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2392" dst_node_input="i" src_node_id="2391" src_node_output="result" />
	<Node group="[]" id="2392" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2393" dst_node_input="i" src_node_id="2392" src_node_output="o" />
	<Node group="[]" id="2393" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2395" dst_node_input="a" src_node_id="2393" src_node_output="o" />
	<Edge dst_node_id="2397" dst_node_input="option0" src_node_id="2393" src_node_output="o" />
	<Node group="[]" id="2679" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2395" dst_node_input="b" src_node_id="2679" src_node_output="value" />
	<Node group="[]" id="2395" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2397" dst_node_input="sel" src_node_id="2395" src_node_output="result" />
	<Edge dst_node_id="2404" dst_node_input="sel" src_node_id="2395" src_node_output="result" />
	<Node group="[]" id="2403" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2404" dst_node_input="option0" src_node_id="2403" src_node_output="value" />
	<Node group="[]" id="2402" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2404" dst_node_input="option1" src_node_id="2402" src_node_output="value" />
	<Node group="[]" id="2404" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2405" dst_node_input="b" src_node_id="2404" src_node_output="result" />
	<Node group="[]" id="2405" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2407" dst_node_input="a" src_node_id="2405" src_node_output="result" />
	<Edge dst_node_id="2412" dst_node_input="a" src_node_id="2405" src_node_output="result" />
	<Edge dst_node_id="2416" dst_node_input="i" src_node_id="2405" src_node_output="result" />
	<Node group="[]" id="2678" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2407" dst_node_input="b" src_node_id="2678" src_node_output="value" />
	<Node group="[]" id="2407" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2409" dst_node_input="a" src_node_id="2407" src_node_output="result" />
	<Node group="[]" id="2677" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2370" dst_node_input="b" src_node_id="2677" src_node_output="value" />
	<Node group="[]" id="2370" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2372" dst_node_input="a" src_node_id="2370" src_node_output="result" />
	<Node group="[]" id="2371" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2372" dst_node_input="b" src_node_id="2371" src_node_output="output" />
	<Node group="[]" id="2372" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2408" dst_node_input="a" src_node_id="2372" src_node_output="result" />
	<Edge dst_node_id="2415" dst_node_input="b" src_node_id="2372" src_node_output="result" />
	<Node group="[]" id="2408" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2409" dst_node_input="b" src_node_id="2408" src_node_output="result" />
	<Node group="[]" id="2409" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2410" dst_node_input="a" src_node_id="2409" src_node_output="result" />
	<Node group="[]" id="2676" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2374" dst_node_input="b" src_node_id="2676" src_node_output="value" />
	<Node group="[]" id="2374" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2376" dst_node_input="a" src_node_id="2374" src_node_output="result" />
	<Node group="[]" id="2375" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2376" dst_node_input="b" src_node_id="2375" src_node_output="output" />
	<Node group="[]" id="2376" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2410" dst_node_input="b" src_node_id="2376" src_node_output="result" />
	<Edge dst_node_id="2413" dst_node_input="a" src_node_id="2376" src_node_output="result" />
	<Node group="[]" id="2410" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2424" dst_node_input="in0" src_node_id="2410" src_node_output="result" />
	<Node group="[]" id="2675" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2412" dst_node_input="b" src_node_id="2675" src_node_output="value" />
	<Node group="[]" id="2412" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2414" dst_node_input="a" src_node_id="2412" src_node_output="result" />
	<Node group="[]" id="2413" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2414" dst_node_input="b" src_node_id="2413" src_node_output="result" />
	<Node group="[]" id="2414" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2415" dst_node_input="a" src_node_id="2414" src_node_output="result" />
	<Node group="[]" id="2415" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2424" dst_node_input="in1" src_node_id="2415" src_node_output="result" />
	<Node group="[]" id="2424" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2432" dst_node_input="sel" src_node_id="2424" src_node_output="result" />
	<Node group="[]" id="2636" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="2420" dst_node_input="in0" src_node_id="2636" src_node_output="value" />
	<Node group="[]" id="2416" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2419" dst_node_input="input" src_node_id="2416" src_node_output="o" />
	<Node group="[]" id="2419" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2420" dst_node_input="in1" src_node_id="2419" src_node_output="output" />
	<Node group="[]" id="2420" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2422" dst_node_input="in0" src_node_id="2420" src_node_output="result" />
	<Node group="[]" id="2396" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2397" dst_node_input="option1" src_node_id="2396" src_node_output="value" />
	<Node group="[]" id="2397" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2398" dst_node_input="i" src_node_id="2397" src_node_output="result" />
	<Node group="[]" id="2398" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2421" dst_node_input="input" src_node_id="2398" src_node_output="o" />
	<Node group="[]" id="2421" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2422" dst_node_input="in1" src_node_id="2421" src_node_output="output" />
	<Node group="[]" id="2422" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2423" dst_node_input="input" src_node_id="2422" src_node_output="result" />
	<Node group="[]" id="2423" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2432" dst_node_input="option0" src_node_id="2423" src_node_output="output" />
	<Node group="[]" id="2425" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2427" dst_node_input="in0" src_node_id="2425" src_node_output="value" />
	<Node group="[]" id="2426" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2427" dst_node_input="in1" src_node_id="2426" src_node_output="value" />
	<Node group="[]" id="2427" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2429" dst_node_input="in0" src_node_id="2427" src_node_output="result" />
	<Node group="[]" id="2428" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2429" dst_node_input="in1" src_node_id="2428" src_node_output="value" />
	<Node group="[]" id="2429" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2430" dst_node_input="input" src_node_id="2429" src_node_output="result" />
	<Node group="[]" id="2430" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2432" dst_node_input="option1" src_node_id="2430" src_node_output="output" />
	<Edge dst_node_id="2432" dst_node_input="option3" src_node_id="2430" src_node_output="output" />
	<Node group="[]" id="2431" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2432" dst_node_input="option2" src_node_id="2431" src_node_output="value" />
	<Node group="[]" id="2432" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2440" dst_node_input="b" src_node_id="2432" src_node_output="result" />
	<Node group="[]" id="2440" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:41)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2450" dst_node_input="a" src_node_id="2440" src_node_output="result" />
	<Node group="[]" id="2335" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3faa466f; 1.3302744626998901</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:19)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111101010100100011001101111</Value>
		<HexValue>0x3faa466f</HexValue>
		<NumericValue>1.3302744626998901</NumericValue>
	</Node>
	<Edge dst_node_id="2441" dst_node_input="a" src_node_id="2335" src_node_output="value" />
	<Node group="[]" id="2674" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2359" dst_node_input="a" src_node_id="2674" src_node_output="value" />
	<Node group="[]" id="2673" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2357" dst_node_input="a" src_node_id="2673" src_node_output="value" />
	<Node group="[]" id="2351" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:336)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="2353" dst_node_input="in0" src_node_id="2351" src_node_output="value" />
	<Node group="[]" id="2352" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:337)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge dst_node_id="2353" dst_node_input="in1" src_node_id="2352" src_node_output="result" />
	<Node group="[]" id="2353" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:338)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2354" dst_node_input="input" src_node_id="2353" src_node_output="result" />
	<Node group="[]" id="2354" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:339)
simple.SimpleKernel.cdf(SimpleKernel.maxj:39)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2355" dst_node_input="a" src_node_id="2354" src_node_output="output" />
	<Node group="[]" id="2336" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3e6d3389; 0.23164190351963043</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:20)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110011011010011001110001001</Value>
		<HexValue>0x3e6d3389</HexValue>
		<NumericValue>0.23164190351963043</NumericValue>
	</Node>
	<Edge dst_node_id="2355" dst_node_input="b" src_node_id="2336" src_node_output="value" />
	<Node group="[]" id="2355" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2357" dst_node_input="b" src_node_id="2355" src_node_output="result" />
	<Node group="[]" id="2357" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:893)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2359" dst_node_input="b" src_node_id="2357" src_node_output="result" />
	<Node group="[]" id="2359" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.divAsRHS(DFEVar.java:1031)
simple.SimpleKernel.cdf(SimpleKernel.maxj:40)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2441" dst_node_input="b" src_node_id="2359" src_node_output="result" />
	<Edge dst_node_id="2443" dst_node_input="b" src_node_id="2359" src_node_output="result" />
	<Edge dst_node_id="2445" dst_node_input="b" src_node_id="2359" src_node_output="result" />
	<Edge dst_node_id="2447" dst_node_input="b" src_node_id="2359" src_node_output="result" />
	<Edge dst_node_id="2449" dst_node_input="b" src_node_id="2359" src_node_output="result" />
	<Node group="[]" id="2441" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2442" dst_node_input="a" src_node_id="2441" src_node_output="result" />
	<Node group="[]" id="2334" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbfe91eea; -1.8212559223175049</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:18)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111111111010010001111011101010</Value>
		<HexValue>0xbfe91eea</HexValue>
		<NumericValue>-1.8212559223175049</NumericValue>
	</Node>
	<Edge dst_node_id="2442" dst_node_input="b" src_node_id="2334" src_node_output="value" />
	<Node group="[]" id="2442" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2443" dst_node_input="a" src_node_id="2442" src_node_output="result" />
	<Node group="[]" id="2443" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2444" dst_node_input="a" src_node_id="2443" src_node_output="result" />
	<Node group="[]" id="2333" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3fe40778; 1.781477928161621</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:17)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111111001000000011101111000</Value>
		<HexValue>0x3fe40778</HexValue>
		<NumericValue>1.781477928161621</NumericValue>
	</Node>
	<Edge dst_node_id="2444" dst_node_input="b" src_node_id="2333" src_node_output="value" />
	<Node group="[]" id="2444" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2445" dst_node_input="a" src_node_id="2444" src_node_output="result" />
	<Node group="[]" id="2445" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2446" dst_node_input="a" src_node_id="2445" src_node_output="result" />
	<Node group="[]" id="2332" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbeb68f87; -0.3565637767314911</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:16)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10111110101101101000111110000111</Value>
		<HexValue>0xbeb68f87</HexValue>
		<NumericValue>-0.3565637767314911</NumericValue>
	</Node>
	<Edge dst_node_id="2446" dst_node_input="b" src_node_id="2332" src_node_output="value" />
	<Node group="[]" id="2446" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2447" dst_node_input="a" src_node_id="2446" src_node_output="result" />
	<Node group="[]" id="2447" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2448" dst_node_input="a" src_node_id="2447" src_node_output="result" />
	<Node group="[]" id="2331" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3ea385fa; 0.3193815350532532</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
simple.SimpleKernel.cdf(SimpleKernel.maxj:15)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111110101000111000010111111010</Value>
		<HexValue>0x3ea385fa</HexValue>
		<NumericValue>0.3193815350532532</NumericValue>
	</Node>
	<Edge dst_node_id="2448" dst_node_input="b" src_node_id="2331" src_node_output="value" />
	<Node group="[]" id="2448" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2449" dst_node_input="a" src_node_id="2448" src_node_output="result" />
	<Node group="[]" id="2449" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:42)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2450" dst_node_input="b" src_node_id="2449" src_node_output="result" />
	<Node group="[]" id="2450" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2452" dst_node_input="b" src_node_id="2450" src_node_output="result" />
	<Node group="[]" id="2452" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.cdf(SimpleKernel.maxj:43)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2456" dst_node_input="b" src_node_id="2452" src_node_output="result" />
	<Edge dst_node_id="2457" dst_node_input="option0" src_node_id="2452" src_node_output="result" />
	<Node group="[]" id="2672" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2456" dst_node_input="a" src_node_id="2672" src_node_output="value" />
	<Node group="[]" id="2456" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2457" dst_node_input="option1" src_node_id="2456" src_node_output="result" />
	<Node group="[]" id="2457" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
simple.SimpleKernel.cdf(SimpleKernel.maxj:45)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2458" dst_node_input="b" src_node_id="2457" src_node_output="result" />
	<Node group="[]" id="2458" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2460" dst_node_input="b" src_node_id="2458" src_node_output="result" />
	<Node group="[]" id="2460" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:939)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2462" dst_node_input="a" src_node_id="2460" src_node_output="result" />
	<Node group="[]" id="2461" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2462" dst_node_input="b" src_node_id="2461" src_node_output="result" />
	<Node group="[]" id="2462" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:133)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2596" dst_node_input="a" src_node_id="2462" src_node_output="result" />
	<Node group="[]" id="2480" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="2481" dst_node_input="in0" src_node_id="2480" src_node_output="value" />
	<Node group="[]" id="2463" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2464" dst_node_input="a" src_node_id="2463" src_node_output="result" />
	<Edge dst_node_id="2479" dst_node_input="a" src_node_id="2463" src_node_output="result" />
	<Node group="[]" id="2479" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge dst_node_id="2481" dst_node_input="in1" src_node_id="2479" src_node_output="result" />
	<Node group="[]" id="2481" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2482" dst_node_input="input" src_node_id="2481" src_node_output="result" />
	<Node group="[]" id="2482" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(9)" />
		<Output latency="0" name="output" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:9, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2484" dst_node_input="a" src_node_id="2482" src_node_output="output" />
	<Node group="[]" id="2671" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="2484" dst_node_input="b" src_node_id="2671" src_node_output="value" />
	<Node group="[]" id="2484" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2488" dst_node_input="a" src_node_id="2484" src_node_output="result" />
	<Node group="[]" id="2464" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge dst_node_id="2465" dst_node_input="input" src_node_id="2464" src_node_output="result" />
	<Node group="[]" id="2465" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(23)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:23, -23, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2467" dst_node_input="input" src_node_id="2465" src_node_output="output" />
	<Node group="[]" id="2466" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2467" dst_node_input="doubt" src_node_id="2466" src_node_output="value" />
	<Node group="[]" id="2467" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2468" dst_node_input="i" src_node_id="2467" src_node_output="output" />
	<Node group="[]" id="2468" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2469" dst_node_input="input" src_node_id="2468" src_node_output="o" />
	<Edge dst_node_id="2471" dst_node_input="a" src_node_id="2468" src_node_output="o" />
	<Edge dst_node_id="2473" dst_node_input="input" src_node_id="2468" src_node_output="o" />
	<Node group="[]" id="2469" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2472" dst_node_input="a" src_node_id="2469" src_node_output="output" />
	<Node group="[]" id="2670" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2471" dst_node_input="b" src_node_id="2670" src_node_output="value" />
	<Node group="[]" id="2471" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2472" dst_node_input="b" src_node_id="2471" src_node_output="result" />
	<Node group="[]" id="2472" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2474" dst_node_input="input" src_node_id="2472" src_node_output="result" />
	<Node group="[]" id="2474" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2477" dst_node_input="sel" src_node_id="2474" src_node_output="output" />
	<Edge dst_node_id="2487" dst_node_input="sel" src_node_id="2474" src_node_output="output" />
	<Node group="[]" id="2486" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2487" dst_node_input="option0" src_node_id="2486" src_node_output="value" />
	<Node group="[]" id="2485" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:9, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2487" dst_node_input="option1" src_node_id="2485" src_node_output="value" />
	<Node group="[]" id="2487" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2488" dst_node_input="b" src_node_id="2487" src_node_output="result" />
	<Node group="[]" id="2488" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2514" dst_node_input="a" src_node_id="2488" src_node_output="result" />
	<Node group="[]" id="2473" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2478" dst_node_input="a" src_node_id="2473" src_node_output="output" />
	<Node group="[]" id="2476" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x0000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0000000000000000000000000000</Value>
		<HexValue>0x0000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2477" dst_node_input="option0" src_node_id="2476" src_node_output="value" />
	<Node group="[]" id="2475" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}\n0x4000000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0100000000000000000000000000</Value>
		<HexValue>0x4000000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2477" dst_node_input="option1" src_node_id="2475" src_node_output="value" />
	<Node group="[]" id="2477" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2478" dst_node_input="b" src_node_id="2477" src_node_output="result" />
	<Node group="[]" id="2478" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2491" dst_node_input="input" src_node_id="2478" src_node_output="result" />
	<Node group="[]" id="2491" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(28)" />
		<Text>&lt;{HWRawBits:28}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2492" dst_node_input="input" src_node_id="2491" src_node_output="output" />
	<Node group="[]" id="2492" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(28)" />
		<Output latency="0" name="output" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:28, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2493" dst_node_input="a" src_node_id="2492" src_node_output="output" />
	<Edge dst_node_id="2494" dst_node_input="a" src_node_id="2492" src_node_output="output" />
	<Node group="[]" id="2494" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[25:19]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>19</Base>
		<Width>7</Width>
	</Node>
	<Edge dst_node_id="2495" dst_node_input="input" src_node_id="2494" src_node_output="result" />
	<Node group="[]" id="2495" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2498" dst_node_input="addr" src_node_id="2495" src_node_output="output" />
	<Edge dst_node_id="2499" dst_node_input="addr" src_node_id="2495" src_node_output="output" />
	<Edge dst_node_id="2500" dst_node_input="addr" src_node_id="2495" src_node_output="output" />
	<Edge dst_node_id="2501" dst_node_input="addr" src_node_id="2495" src_node_output="output" />
	<Node group="[]" id="2498" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x79ae1d8
0x76e20af
0x742bc04
0x718a6b1
0x6efd426
0x6c83865
0x6a1c7f5
0x67c77e1
0x6583dab
0x6350f4a
0x612e324
0x5f1b010
0x5d16d39
0x5b21234
0x59396ed
0x575f3a7
0x55920f4
0x53d17b7
0x521d11c
0x5074694
0x4ed71d8
0x4d44cd9
0x4bbd1cf
0x4a3fb23
0x48cc380
0x47625bc
0x4601ce5
0x44aa43a
0x435b726
0x4215145
0x40d6e58
0x3fa0a4a
0x3e7212e
0x3d4af3b
0x3c2b0cd
0x3b12262
0x3a00096
0x38f4826
0x37ef5ee
0x36f06e6
0x35f7820
0x35046c9
0x3417027
0x332f19b
0x324c89b
0x316f2b2
0x3096d83
0x2fc36c5
0x2ef4c40
0x2e2abd4
0x2d65370
0x2ca4116
0x2be72d4
0x2b2e6d3
0x2a79b3e
0x29c8e5b
0x291be78
0x28729f0
0x27ccf33
0x272acb4
0x268c0f8
0x25f0a91
0x2558819
0x24c3836
0x243199b
0x23a2b02
0x2316b32
0x228d8fb
0x2207333
0x21838be
0x2102884
0x2084179
0x2008297
0x1f8eadf
0x1f1795c
0x1ea2d1e
0x1e3053e
0x1dc00da
0x1d51f15
0x1ce5f1f
0x1c7c025
0x1c14161
0x1bae20e
0x1b4a171
0x1ae7ed1
0x1a8797c
0x1a290c1
0x19cc3f9
0x1971281
0x1917bb6
0x18bfefb
0x1869bc2
0x181516c
0x17c1f70
0x1770543
0x172025a
0x16d1634
0x168404f
0x163802c
0x15ed552
0x15a3f4f
0x155bdaa
0x1514ff3
0x14cf5bf
0x148ae9f
0x1447a2e
0x1405805
0x13c47c3
0x1384905
0x1345b6e
0x1307ea4
0x12cb24a
0x128f60b
0x1254994
0x121ac8e
0x11e1eab
0x11a9f9a
0x1172f10
0x113ccc0
0x1107864
0x10d31b1
0x109f863
0x106cc34
0x103ace4
0x1009a2f
0x0fd93d8
0x0fa99a1
0x0f7ab4d</MemoryData>
	</Node>
	<Edge dst_node_id="2502" dst_node_input="a" src_node_id="2498" src_node_output="dout" />
	<Node group="[]" id="2493" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>[18:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Base>0</Base>
		<Width>19</Width>
	</Node>
	<Edge dst_node_id="2497" dst_node_input="input" src_node_id="2493" src_node_output="result" />
	<Node group="[]" id="2497" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(19)" />
		<Output latency="0" name="output" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:19, -19, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2502" dst_node_input="b" src_node_id="2497" src_node_output="output" />
	<Edge dst_node_id="2505" dst_node_input="b" src_node_id="2497" src_node_output="output" />
	<Edge dst_node_id="2508" dst_node_input="b" src_node_id="2497" src_node_output="output" />
	<Node group="[]" id="2502" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -49, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2503" dst_node_input="a" src_node_id="2502" src_node_output="result" />
	<Node group="[]" id="2499" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xa3abc67
0xa518cb6
0xa67d6c5
0xa7d9ea9
0xa92e850
0xaa7b782
0xabc0fe4
0xacff4f6
0xae36a1c
0xaf67294
0xb091184
0xb1b49f2
0xb2d1ec9
0xb3e92d9
0xb4fa8da
0xb60636b
0xb70c514
0xb80d047
0xb90875f
0xb9feca6
0xbaf024e
0xbbdca79
0xbcc4737
0xbda7a85
0xbe86650
0xbf60c76
0xc036ec3
0xc108ef7
0xc1d6ec3
0xc2a0fc8
0xc36739c
0xc429bc9
0xc4e89ca
0xc5a3f11
0xc65bd03
0xc7104fa
0xc7c1847
0xc86f830
0xc91a5f0
0xc9c22ba
0xca66fb7
0xcb08e09
0xcba7ec8
0xcc44303
0xccddbc3
0xcd74a09
0xce08ece
0xce9ab04
0xcf29f96
0xcfb6d69
0xd04155b
0xd0c9844
0xd14f6f7
0xd1d3240
0xd254ae5
0xd2d41a7
0xd351744
0xd3ccc71
0xd4461e1
0xd4bd841
0xd53303a
0xd5a6a70
0xd618783
0xd68880f
0xd6f6cac
0xd7635ed
0xd7ce463
0xd83789a
0xd89f31a
0xd905469
0xd969d09
0xd9ccd79
0xda2e634
0xda8e7b2
0xdaed269
0xdb4a6cc
0xdba654b
0xdc00e52
0xdc5a24c
0xdcb21a1
0xdd08cb7
0xdd5e3f0
0xddb27ac
0xde0584b
0xde57628
0xdea819d
0xdef7b03
0xdf462ae
0xdf938f4
0xdfdfe25
0xe02b292
0xe075689
0xe0bea56
0xe106e44
0xe14e29d
0xe1947a7
0xe1d9da9
0xe21e4e6
0xe261da2
0xe2a481d
0xe2e6498
0xe327351
0xe367485
0xe3a6870
0xe3e4f4d
0xe422954
0xe45f6be
0xe49b7c2
0xe4d6c95
0xe51156c
0xe54b27a
0xe5843f2
0xe5bca05
0xe5f44e4
0xe62b4bd
0xe6619bf
0xe697417
0xe6cc3f2
0xe70097c
0xe7344df
0xe767645
0xe799dd7
0xe7cbbbd
0xe7fd01e
0xe82db22
0xe85dced
0xe88d5a6
0xe8bc570</MemoryData>
	</Node>
	<Edge dst_node_id="2503" dst_node_input="b" src_node_id="2499" src_node_output="dout" />
	<Node group="[]" id="2503" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -68, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2504" dst_node_input="i" src_node_id="2503" src_node_output="result" />
	<Node group="[]" id="2504" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -68, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -41, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2505" dst_node_input="a" src_node_id="2504" src_node_output="o" />
	<Node group="[]" id="2505" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -41, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2506" dst_node_input="a" src_node_id="2505" src_node_output="result" />
	<Node group="[]" id="2500" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x5c551d6
0x5b9de1a
0x5ae9779
0x5a37ce9
0x5988d6b
0x58dc807
0x5832bc9
0x578b7ca
0x56e6b25
0x56444fd
0x55a447d
0x55068d5
0x546b13a
0x53d1ce8
0x533ab20
0x52a5b29
0x5212c4e
0x5181de0
0x50f2f34
0x5065fa5
0x4fdae91
0x4f51b5b
0x4eca569
0x4e44c28
0x4dc0f06
0x4d3ed76
0x4cbe6ef
0x4c3faea
0x4bc28e6
0x4b47062
0x4acd0e3
0x4a549f0
0x49ddb13
0x49683da
0x48f43d4
0x4881a94
0x48107af
0x47a0abd
0x4732359
0x46c5120
0x46593b1
0x45eeaad
0x45855b8
0x451d478
0x44b6695
0x4450bb9
0x43ec390
0x4388dc9
0x4326a12
0x42c581d
0x426579e
0x420684b
0x41a89d8
0x414bc00
0x40efe7c
0x4095107
0x403b35f
0x3fe2541
0x3f8a66e
0x3f336a7
0x3edd5af
0x3e88348
0x3e33f39
0x3de0947
0x3d8e13b
0x3d3c6dc
0x3ceb9f6
0x3c9ba52
0x3c4c7bc
0x3bfe203
0x3bb08f3
0x3b63c5d
0x3b17c10
0x3acc7dd
0x3a81f96
0x3a3830e
0x39ef219
0x39a6c8c
0x395f23c
0x39182ff
0x38d1ead
0x388c51d
0x3847627
0x38031a7
0x37bf774
0x377c76b
0x373a167
0x36f8544
0x36b72df
0x3676a16
0x3636ac6
0x35f74ce
0x35b880e
0x357a466
0x353c9b7
0x34ff7e0
0x34c2ec5
0x3486e47
0x344b649
0x34106ae
0x33d5f5a
0x339c032
0x3362919
0x33299f5
0x32f12ad
0x32b9325
0x3281b44
0x324aaf2
0x3214216
0x31de098
0x31a865f
0x3173355
0x313e763
0x310a271
0x30d646a
0x30a2d38
0x306fcc6
0x303d2fd
0x300afca
0x2fd9318
0x2fa7cd3
0x2f76ce7
0x2f46340
0x2f15fcb
0x2ee6276
0x2eb6b2e
0x2e879e0
0x2e58e7b</MemoryData>
	</Node>
	<Edge dst_node_id="2506" dst_node_input="b" src_node_id="2500" src_node_output="dout" />
	<Node group="[]" id="2506" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -60, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2507" dst_node_input="i" src_node_id="2506" src_node_output="result" />
	<Node group="[]" id="2507" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(56, -60, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -33, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2508" dst_node_input="a" src_node_id="2507" src_node_output="o" />
	<Node group="[]" id="2508" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(28, -33, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(19, -19, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2509" dst_node_input="a" src_node_id="2508" src_node_output="result" />
	<Node group="[]" id="2501" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x0000000
0x016fe51
0x02dcf2d
0x0447347
0x05aeb4e
0x07137eb
0x08759c5
0x09d517f
0x0b31fb8
0x0c8c50b
0x0de4212
0x0f39761
0x108c589
0x11dcd19
0x132ae9e
0x1476aa0
0x15c01a4
0x170742d
0x184c2bd
0x198edd0
0x1acf5e3
0x1c0db6d
0x1d49ee5
0x1e840be
0x1fbc16c
0x20f215b
0x22260fb
0x23580b6
0x24880f5
0x25b6220
0x26e249a
0x280c8c7
0x2934f09
0x2a5b7c0
0x2b80347
0x2ca31fd
0x2dc443a
0x2ee3a57
0x30014ac
0x311d38e
0x3237751
0x3350047
0x3466ec1
0x357c30f
0x368fd7f
0x37a1e5d
0x38b25f6
0x39c1492
0x3acea7c
0x3bda7fb
0x3ce4d54
0x3dedace
0x3ef50ad
0x3ffaf33
0x40ff6a3
0x420273d
0x4304140
0x44044ec
0x450327f
0x4600a34
0x46fcc48
0x47f78f5
0x48f1075
0x49e9301
0x4ae00d2
0x4bd5a1d
0x4cc9f1b
0x4dbcfff
0x4eaecff
0x4f9f64e
0x508ec20
0x517cea6
0x5269e13
0x5355a97
0x5440462
0x5529ba3
0x561208a
0x56f9343
0x57df3fd
0x58c42e4
0x59a8024
0x5a8abe8
0x5b6c65b
0x5c4cfa7
0x5d2c7f6
0x5e0af70
0x5ee863e
0x5fc4c88
0x60a0275
0x617a82c
0x6253dd3
0x632c38f
0x6403986
0x64d9fdb
0x65af6b5
0x6683e35
0x675767f
0x6829fb7
0x68fb9fd
0x69cc574
0x6a9c23d
0x6b6b07a
0x6c3904a
0x6d061cd
0x6dd2524
0x6e9da6d
0x6f681c7
0x7031b51
0x70fa729
0x71c256c
0x7289637
0x734f9a8
0x7414fdb
0x74d98ed
0x759d4f8
0x7660419
0x772266b
0x77e3c08
0x78a450c
0x796418f
0x7a231ad
0x7ae157e
0x7b9ed1c
0x7c5b8a0
0x7d17823
0x7dd2bbc
0x7e8d384
0x7f46f93</MemoryData>
	</Node>
	<Edge dst_node_id="2509" dst_node_input="b" src_node_id="2501" src_node_output="dout" />
	<Node group="[]" id="2509" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(47, -52, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -27, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2510" dst_node_input="i" src_node_id="2509" src_node_output="result" />
	<Node group="[]" id="2510" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(54, -52, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:28, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2514" dst_node_input="b" src_node_id="2510" src_node_output="o" />
	<Node group="[]" id="2514" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(28, -26, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2515" dst_node_input="i" src_node_id="2514" src_node_output="result" />
	<Node group="[]" id="2515" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2518" dst_node_input="a" src_node_id="2515" src_node_output="o" />
	<Node group="[]" id="2669" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f317218; 0.6931471824645996</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00111111001100010111001000011000</Value>
		<HexValue>0x3f317218</HexValue>
		<NumericValue>0.6931471824645996</NumericValue>
	</Node>
	<Edge dst_node_id="2518" dst_node_input="b" src_node_id="2669" src_node_output="value" />
	<Node group="[]" id="2518" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.log(KernelMath.java:514)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2519" dst_node_input="b" src_node_id="2518" src_node_output="result" />
	<Node group="[]" id="2519" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2521" dst_node_input="input" src_node_id="2519" src_node_output="result" />
	<Edge dst_node_id="2526" dst_node_input="a" src_node_id="2519" src_node_output="result" />
	<Edge dst_node_id="2530" dst_node_input="a" src_node_id="2519" src_node_output="result" />
	<Node group="[]" id="2520" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2521" dst_node_input="doubt" src_node_id="2520" src_node_output="value" />
	<Node group="[]" id="2521" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Input name="doubt" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>DoubtBitOp(ADD_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2522" dst_node_input="i" src_node_id="2521" src_node_output="output" />
	<Node group="[]" id="2522" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="6" name="o" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2524" dst_node_input="a" src_node_id="2522" src_node_output="o" />
	<Node group="[]" id="2668" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:36, -26, TWOSCOMPLEMENT}\n0x005c551d9; 1.4426950365304947</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000101110001010101000111011001</Value>
		<HexValue>0x005c551d9</HexValue>
		<NumericValue>1.4426950365304947</NumericValue>
	</Node>
	<Edge dst_node_id="2524" dst_node_input="b" src_node_id="2668" src_node_output="value" />
	<Node group="[]" id="2524" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="7" name="result" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2527" dst_node_input="input" src_node_id="2524" src_node_output="result" />
	<Edge dst_node_id="2531" dst_node_input="input" src_node_id="2524" src_node_output="result" />
	<Edge dst_node_id="2533" dst_node_input="input" src_node_id="2524" src_node_output="result" />
	<Node group="[]" id="2533" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Text>DoubtBitOp(REMOVE_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2534" dst_node_input="i" src_node_id="2533" src_node_output="output" />
	<Edge dst_node_id="2535" dst_node_input="i" src_node_id="2533" src_node_output="output" />
	<Edge dst_node_id="2536" dst_node_input="i" src_node_id="2533" src_node_output="output" />
	<Edge dst_node_id="2537" dst_node_input="i" src_node_id="2533" src_node_output="output" />
	<Node group="[]" id="2534" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:10, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2555" dst_node_input="i" src_node_id="2534" src_node_output="o" />
	<Node group="[]" id="2555" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(10, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2557" dst_node_input="a" src_node_id="2555" src_node_output="o" />
	<Node group="[]" id="2667" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x07f; 127.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00001111111</Value>
		<HexValue>0x07f</HexValue>
		<NumericValue>127.0</NumericValue>
	</Node>
	<Edge dst_node_id="2557" dst_node_input="b" src_node_id="2667" src_node_output="value" />
	<Node group="[]" id="2557" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2561" dst_node_input="a" src_node_id="2557" src_node_output="result" />
	<Node group="[]" id="2536" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Text>{HWOffsetFix:10, -12, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2593" dst_node_input="input" src_node_id="2536" src_node_output="o" />
	<Node group="[]" id="2593" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(10, -12, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(10)" />
		<Text>&lt;{HWRawBits:10}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2594" dst_node_input="input" src_node_id="2593" src_node_output="output" />
	<Node group="[]" id="2594" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(10)" />
		<Output latency="0" name="output" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:10, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2595" dst_node_input="addr" src_node_id="2594" src_node_output="output" />
	<Node group="[]" id="2595" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(10, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>1024</Depth>
		<MemoryData>0x000000
0x000b17
0x00162f
0x002148
0x002c60
0x00377a
0x004293
0x004dae
0x0058c8
0x0063e4
0x006eff
0x007a1c
0x008538
0x009055
0x009b73
0x00a691
0x00b1b0
0x00bccf
0x00c7ee
0x00d30e
0x00de2f
0x00e950
0x00f471
0x00ff93
0x010ab6
0x0115d9
0x0120fc
0x012c20
0x013744
0x014269
0x014d8e
0x0158b4
0x0163db
0x016f01
0x017a29
0x018550
0x019079
0x019ba1
0x01a6cb
0x01b1f4
0x01bd1e
0x01c849
0x01d374
0x01dea0
0x01e9cc
0x01f4f9
0x020026
0x020b53
0x021681
0x0221b0
0x022cdf
0x02380e
0x02433e
0x024e6f
0x0259a0
0x0264d1
0x027003
0x027b35
0x028668
0x02919c
0x029cd0
0x02a804
0x02b339
0x02be6e
0x02c9a4
0x02d4da
0x02e011
0x02eb48
0x02f680
0x0301b8
0x030cf1
0x03182a
0x032364
0x032e9e
0x0339d9
0x034514
0x03504f
0x035b8c
0x0366c8
0x037205
0x037d43
0x038881
0x0393c0
0x039eff
0x03aa3e
0x03b57e
0x03c0bf
0x03cc00
0x03d741
0x03e283
0x03edc6
0x03f908
0x04044c
0x040f90
0x041ad4
0x042619
0x04315f
0x043ca4
0x0447eb
0x045332
0x045e79
0x0469c1
0x047509
0x048052
0x048b9b
0x0496e5
0x04a22f
0x04ad7a
0x04b8c5
0x04c411
0x04cf5d
0x04daaa
0x04e5f7
0x04f145
0x04fc93
0x0507e2
0x051331
0x051e81
0x0529d1
0x053521
0x054072
0x054bc4
0x055716
0x056269
0x056dbc
0x057910
0x058464
0x058fb8
0x059b0d
0x05a663
0x05b1b9
0x05bd0f
0x05c866
0x05d3be
0x05df16
0x05ea6e
0x05f5c7
0x060121
0x060c7b
0x0617d5
0x062330
0x062e8c
0x0639e8
0x064544
0x0650a1
0x065bfe
0x06675c
0x0672bb
0x067e19
0x068979
0x0694d9
0x06a039
0x06ab9a
0x06b6fb
0x06c25d
0x06cdc0
0x06d922
0x06e486
0x06efe9
0x06fb4e
0x0706b3
0x071218
0x071d7e
0x0728e4
0x07344b
0x073fb2
0x074b1a
0x075682
0x0761eb
0x076d54
0x0778be
0x078428
0x078f93
0x079afe
0x07a66a
0x07b1d6
0x07bd43
0x07c8b0
0x07d41e
0x07df8c
0x07eafb
0x07f66a
0x0801d9
0x080d4a
0x0818ba
0x08242b
0x082f9d
0x083b0f
0x084682
0x0851f5
0x085d69
0x0868dd
0x087452
0x087fc7
0x088b3c
0x0896b2
0x08a229
0x08ada0
0x08b918
0x08c490
0x08d009
0x08db82
0x08e6fb
0x08f275
0x08fdf0
0x09096b
0x0914e7
0x092063
0x092bdf
0x09375c
0x0942da
0x094e58
0x0959d7
0x096556
0x0970d5
0x097c56
0x0987d6
0x099357
0x099ed9
0x09aa5b
0x09b5dd
0x09c160
0x09cce4
0x09d868
0x09e3ed
0x09ef72
0x09faf7
0x0a067d
0x0a1204
0x0a1d8b
0x0a2913
0x0a349b
0x0a4023
0x0a4bac
0x0a5736
0x0a62c0
0x0a6e4a
0x0a79d6
0x0a8561
0x0a90ed
0x0a9c7a
0x0aa807
0x0ab394
0x0abf22
0x0acab1
0x0ad640
0x0ae1d0
0x0aed60
0x0af8f0
0x0b0481
0x0b1013
0x0b1ba5
0x0b2738
0x0b32cb
0x0b3e5e
0x0b49f2
0x0b5587
0x0b611c
0x0b6cb1
0x0b7848
0x0b83de
0x0b8f75
0x0b9b0d
0x0ba6a5
0x0bb23e
0x0bbdd7
0x0bc970
0x0bd50a
0x0be0a5
0x0bec40
0x0bf7dc
0x0c0378
0x0c0f14
0x0c1ab1
0x0c264f
0x0c31ed
0x0c3d8c
0x0c492b
0x0c54cb
0x0c606b
0x0c6c0b
0x0c77ad
0x0c834e
0x0c8ef0
0x0c9a93
0x0ca636
0x0cb1da
0x0cbd7e
0x0cc923
0x0cd4c8
0x0ce06e
0x0cec14
0x0cf7ba
0x0d0362
0x0d0f09
0x0d1ab2
0x0d265a
0x0d3204
0x0d3dad
0x0d4957
0x0d5502
0x0d60ad
0x0d6c59
0x0d7805
0x0d83b2
0x0d8f5f
0x0d9b0d
0x0da6bc
0x0db26a
0x0dbe1a
0x0dc9c9
0x0dd57a
0x0de12a
0x0decdc
0x0df88e
0x0e0440
0x0e0ff3
0x0e1ba6
0x0e275a
0x0e330e
0x0e3ec3
0x0e4a79
0x0e562e
0x0e61e5
0x0e6d9c
0x0e7953
0x0e850b
0x0e90c3
0x0e9c7c
0x0ea836
0x0eb3f0
0x0ebfaa
0x0ecb65
0x0ed721
0x0ee2dd
0x0eee99
0x0efa56
0x0f0613
0x0f11d1
0x0f1d90
0x0f294f
0x0f350f
0x0f40cf
0x0f4c8f
0x0f5850
0x0f6412
0x0f6fd4
0x0f7b96
0x0f875a
0x0f931d
0x0f9ee1
0x0faaa6
0x0fb66b
0x0fc231
0x0fcdf7
0x0fd9bd
0x0fe585
0x0ff14c
0x0ffd15
0x1008dd
0x1014a6
0x102070
0x102c3a
0x103805
0x1043d0
0x104f9c
0x105b68
0x106735
0x107303
0x107ed0
0x108a9f
0x10966e
0x10a23d
0x10ae0d
0x10b9dd
0x10c5ae
0x10d17f
0x10dd51
0x10e924
0x10f4f7
0x1100ca
0x110c9e
0x111873
0x112448
0x11301d
0x113bf3
0x1147ca
0x1153a1
0x115f78
0x116b50
0x117729
0x118302
0x118edb
0x119ab6
0x11a690
0x11b26b
0x11be47
0x11ca23
0x11d600
0x11e1dd
0x11edbb
0x11f999
0x120578
0x121157
0x121d37
0x122917
0x1234f8
0x1240d9
0x124cbb
0x12589d
0x126480
0x127063
0x127c47
0x12882c
0x129411
0x129ff6
0x12abdc
0x12b7c2
0x12c3a9
0x12cf91
0x12db79
0x12e761
0x12f34b
0x12ff34
0x130b1e
0x131709
0x1322f4
0x132edf
0x133acc
0x1346b8
0x1352a5
0x135e93
0x136a81
0x137670
0x13825f
0x138e4f
0x139a3f
0x13a630
0x13b221
0x13be13
0x13ca06
0x13d5f8
0x13e1ec
0x13ede0
0x13f9d4
0x1405c9
0x1411be
0x141db4
0x1429ab
0x1435a2
0x144199
0x144d91
0x14598a
0x146583
0x14717d
0x147d77
0x148971
0x14956d
0x14a168
0x14ad64
0x14b961
0x14c55e
0x14d15c
0x14dd5a
0x14e959
0x14f559
0x150158
0x150d59
0x15195a
0x15255b
0x15315d
0x153d5f
0x154962
0x155566
0x15616a
0x156d6e
0x157973
0x158579
0x15917f
0x159d85
0x15a98d
0x15b594
0x15c19c
0x15cda5
0x15d9ae
0x15e5b8
0x15f1c2
0x15fdcd
0x1609d8
0x1615e4
0x1621f0
0x162dfd
0x163a0b
0x164618
0x165227
0x165e36
0x166a45
0x167655
0x168266
0x168e77
0x169a88
0x16a69a
0x16b2ad
0x16bec0
0x16cad4
0x16d6e8
0x16e2fd
0x16ef12
0x16fb28
0x17073e
0x171355
0x171f6c
0x172b84
0x17379c
0x1743b5
0x174fce
0x175be8
0x176803
0x17741e
0x178039
0x178c55
0x179872
0x17a48f
0x17b0ad
0x17bccb
0x17c8e9
0x17d508
0x17e128
0x17ed48
0x17f969
0x18058a
0x1811ac
0x181dcf
0x1829f1
0x183615
0x184239
0x184e5d
0x185a82
0x1866a8
0x1872ce
0x187ef4
0x188b1b
0x189743
0x18a36b
0x18af94
0x18bbbd
0x18c7e6
0x18d411
0x18e03b
0x18ec67
0x18f892
0x1904bf
0x1910ec
0x191d19
0x192947
0x193575
0x1941a4
0x194dd4
0x195a04
0x196634
0x197266
0x197e97
0x198ac9
0x1996fc
0x19a32f
0x19af63
0x19bb97
0x19c7cc
0x19d401
0x19e037
0x19ec6d
0x19f8a4
0x1a04dc
0x1a1114
0x1a1d4c
0x1a2985
0x1a35bf
0x1a41f9
0x1a4e33
0x1a5a6f
0x1a66aa
0x1a72e6
0x1a7f23
0x1a8b60
0x1a979e
0x1aa3dc
0x1ab01b
0x1abc5b
0x1ac89b
0x1ad4db
0x1ae11c
0x1aed5d
0x1af9a0
0x1b05e2
0x1b1225
0x1b1e69
0x1b2aad
0x1b36f2
0x1b4337
0x1b4f7d
0x1b5bc3
0x1b680a
0x1b7451
0x1b8099
0x1b8ce1
0x1b992a
0x1ba574
0x1bb1be
0x1bbe08
0x1bca53
0x1bd69f
0x1be2eb
0x1bef38
0x1bfb85
0x1c07d3
0x1c1421
0x1c2070
0x1c2cbf
0x1c390f
0x1c455f
0x1c51b0
0x1c5e02
0x1c6a54
0x1c76a6
0x1c82f9
0x1c8f4d
0x1c9ba1
0x1ca7f6
0x1cb44b
0x1cc0a1
0x1cccf7
0x1cd94e
0x1ce5a5
0x1cf1fd
0x1cfe55
0x1d0aae
0x1d1708
0x1d2362
0x1d2fbc
0x1d3c17
0x1d4873
0x1d54cf
0x1d612c
0x1d6d89
0x1d79e7
0x1d8645
0x1d92a4
0x1d9f03
0x1dab63
0x1db7c4
0x1dc425
0x1dd086
0x1ddce8
0x1de94b
0x1df5ae
0x1e0212
0x1e0e76
0x1e1adb
0x1e2740
0x1e33a6
0x1e400c
0x1e4c73
0x1e58da
0x1e6542
0x1e71ab
0x1e7e14
0x1e8a7d
0x1e96e8
0x1ea352
0x1eafbd
0x1ebc29
0x1ec895
0x1ed502
0x1ee170
0x1eeddd
0x1efa4c
0x1f06bb
0x1f132a
0x1f1f9a
0x1f2c0b
0x1f387c
0x1f44ee
0x1f5160
0x1f5dd3
0x1f6a46
0x1f76ba
0x1f832e
0x1f8fa3
0x1f9c18
0x1fa88e
0x1fb505
0x1fc17c
0x1fcdf3
0x1fda6b
0x1fe6e4
0x1ff35d
0x1fffd7
0x200c51
0x2018cc
0x202548
0x2031c3
0x203e40
0x204abd
0x20573a
0x2063b9
0x207037
0x207cb6
0x208936
0x2095b6
0x20a237
0x20aeb8
0x20bb3a
0x20c7bd
0x20d440
0x20e0c3
0x20ed47
0x20f9cc
0x210651
0x2112d6
0x211f5d
0x212be3
0x21386b
0x2144f2
0x21517b
0x215e04
0x216a8d
0x217717
0x2183a2
0x21902d
0x219cb8
0x21a945
0x21b5d1
0x21c25f
0x21ceec
0x21db7b
0x21e80a
0x21f499
0x220129
0x220dba
0x221a4b
0x2226dc
0x22336e
0x224001
0x224c94
0x225928
0x2265bd
0x227251
0x227ee7
0x228b7d
0x229813
0x22a4aa
0x22b142
0x22bdda
0x22ca73
0x22d70c
0x22e3a6
0x22f040
0x22fcdb
0x230977
0x231613
0x2322af
0x232f4c
0x233bea
0x234888
0x235527
0x2361c6
0x236e66
0x237b06
0x2387a7
0x239448
0x23a0ea
0x23ad8d
0x23ba30
0x23c6d4
0x23d378
0x23e01d
0x23ecc2
0x23f968
0x24060e
0x2412b5
0x241f5c
0x242c04
0x2438ad
0x244556
0x245200
0x245eaa
0x246b55
0x247800
0x2484ac
0x249158
0x249e05
0x24aab3
0x24b761
0x24c40f
0x24d0bf
0x24dd6e
0x24ea1e
0x24f6cf
0x250381
0x251033
0x251ce5
0x252998
0x25364c
0x254300
0x254fb4
0x255c69
0x25691f
0x2575d6
0x25828c
0x258f44
0x259bfc
0x25a8b4
0x25b56d
0x25c227
0x25cee1
0x25db9c
0x25e857
0x25f513
0x2601cf
0x260e8c
0x261b4a
0x262808
0x2634c6
0x264185
0x264e45
0x265b05
0x2667c6
0x267487
0x268149
0x268e0c
0x269acf
0x26a792
0x26b456
0x26c11b
0x26cde0
0x26daa6
0x26e76c
0x26f433
0x2700fb
0x270dc3
0x271a8b
0x272754
0x27341e
0x2740e8
0x274db3
0x275a7e
0x27674a
0x277416
0x2780e3
0x278db1
0x279a7f
0x27a74d
0x27b41d
0x27c0ec
0x27cdbd
0x27da8e
0x27e75f
0x27f431
0x280103
0x280dd6
0x281aaa
0x28277e
0x283453
0x284128
0x284dfe
0x285ad5
0x2867ab
0x287483
0x28815b
0x288e34
0x289b0d
0x28a7e7
0x28b4c1
0x28c19c
0x28ce77
0x28db53
0x28e830
0x28f50d
0x2901ea
0x290ec9
0x291ba7
0x292887
0x293567
0x294247
0x294f28
0x295c09
0x2968ec
0x2975ce
0x2982b1
0x298f95
0x299c7a
0x29a95e
0x29b644
0x29c32a
0x29d011
0x29dcf8
0x29e9df
0x29f6c8
0x2a03b0
0x2a109a
0x2a1d84
0x2a2a6e
0x2a3759
0x2a4445
0x2a5131
0x2a5e1e
0x2a6b0b
0x2a77f9
0x2a84e7
0x2a91d6
0x2a9ec6
0x2aabb6
0x2ab8a6
0x2ac598
0x2ad289
0x2adf7c
0x2aec6f
0x2af962
0x2b0656
0x2b134b
0x2b2040
0x2b2d35
0x2b3a2c
0x2b4723
0x2b541a
0x2b6112
0x2b6e0a
0x2b7b03
0x2b87fd
0x2b94f7
0x2ba1f2
0x2baeed
0x2bbbe9
0x2bc8e6
0x2bd5e3
0x2be2e0
0x2befde
0x2bfcdd
0x2c09dc
0x2c16dc
0x2c23dc
0x2c30dd
0x2c3ddf
0x2c4ae1
0x2c57e4
0x2c64e7
0x2c71eb
0x2c7eef
0x2c8bf4
0x2c98f9
0x2ca5ff
0x2cb306
0x2cc00d
0x2ccd15
0x2cda1d
0x2ce726
0x2cf42f
0x2d0139
0x2d0e44
0x2d1b4f
0x2d285a
0x2d3567
0x2d4273
0x2d4f81
0x2d5c8f
0x2d699d
0x2d76ac
0x2d83bc
0x2d90cc
0x2d9ddd
0x2daaee
0x2db800
0x2dc512
0x2dd226
0x2ddf39
0x2dec4d
0x2df962
0x2e0677
0x2e138d
0x2e20a4
0x2e2dba
0x2e3ad2
0x2e47ea
0x2e5503
0x2e621c
0x2e6f36
0x2e7c50
0x2e896b
0x2e9687
0x2ea3a3
0x2eb0c0
0x2ebddd
0x2ecafb
0x2ed819
0x2ee538
0x2ef257
0x2eff77
0x2f0c98
0x2f19b9
0x2f26db
0x2f33fd
0x2f4120
0x2f4e44
0x2f5b68
0x2f688c
0x2f75b2
0x2f82d7
0x2f8ffe
0x2f9d25
0x2faa4c
0x2fb774
0x2fc49d
0x2fd1c6
0x2fdef0
0x2fec1a
0x2ff945
0x300670
0x30139c
0x3020c9
0x302df6
0x303b24
0x304852
0x305581
0x3062b1</MemoryData>
	</Node>
	<Edge dst_node_id="2545" dst_node_input="a" src_node_id="2595" src_node_output="dout" />
	<Edge dst_node_id="2546" dst_node_input="b" src_node_id="2595" src_node_output="dout" />
	<Node group="[]" id="2535" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Text>{HWOffsetFix:2, -2, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2590" dst_node_input="input" src_node_id="2535" src_node_output="o" />
	<Node group="[]" id="2590" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(2, -2, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(2)" />
		<Text>&lt;{HWRawBits:2}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2591" dst_node_input="input" src_node_id="2590" src_node_output="output" />
	<Node group="[]" id="2591" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2592" dst_node_input="addr" src_node_id="2591" src_node_output="output" />
	<Node group="[]" id="2592" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>ROM</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Depth>4</Depth>
		<MemoryData>0x000000
0x306fe1
0x6a09e6
0xae89fa</MemoryData>
	</Node>
	<Edge dst_node_id="2541" dst_node_input="a" src_node_id="2592" src_node_output="dout" />
	<Edge dst_node_id="2542" dst_node_input="b" src_node_id="2592" src_node_output="dout" />
	<Node group="[]" id="2538" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -14, UNSIGNED}\n0x2c5d; 0.69317626953125</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>10110001011101</Value>
		<HexValue>0x2c5d</HexValue>
		<NumericValue>0.69317626953125</NumericValue>
	</Node>
	<Edge dst_node_id="2539" dst_node_input="a" src_node_id="2538" src_node_output="value" />
	<Node group="[]" id="2537" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2539" dst_node_input="b" src_node_id="2537" src_node_output="o" />
	<Node group="[]" id="2539" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -14, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2540" dst_node_input="i" src_node_id="2539" src_node_output="result" />
	<Node group="[]" id="2540" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -40, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:14, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2541" dst_node_input="b" src_node_id="2540" src_node_output="o" />
	<Edge dst_node_id="2542" dst_node_input="a" src_node_id="2540" src_node_output="o" />
	<Node group="[]" id="2541" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2543" dst_node_input="a" src_node_id="2541" src_node_output="result" />
	<Node group="[]" id="2542" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(14, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="3" name="result" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2543" dst_node_input="b" src_node_id="2542" src_node_output="result" />
	<Node group="[]" id="2543" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(38, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2544" dst_node_input="i" src_node_id="2543" src_node_output="result" />
	<Node group="[]" id="2544" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(51, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:27, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2545" dst_node_input="b" src_node_id="2544" src_node_output="o" />
	<Edge dst_node_id="2546" dst_node_input="a" src_node_id="2544" src_node_output="o" />
	<Node group="[]" id="2545" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2547" dst_node_input="a" src_node_id="2545" src_node_output="result" />
	<Node group="[]" id="2546" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(22, -24, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2547" dst_node_input="b" src_node_id="2546" src_node_output="result" />
	<Node group="[]" id="2547" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(49, -50, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2548" dst_node_input="i" src_node_id="2547" src_node_output="result" />
	<Node group="[]" id="2548" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(52, -50, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Text>{HWOffsetFix:28, -26, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2549" dst_node_input="i" src_node_id="2548" src_node_output="o" />
	<Node group="[]" id="2549" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, -26, UNSIGNED)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2551" dst_node_input="a" src_node_id="2549" src_node_output="o" />
	<Edge dst_node_id="2553" dst_node_input="option0" src_node_id="2549" src_node_output="o" />
	<Node group="[]" id="2666" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x800000; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>100000000000000000000000</Value>
		<HexValue>0x800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2551" dst_node_input="b" src_node_id="2666" src_node_output="value" />
	<Node group="[]" id="2551" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2553" dst_node_input="sel" src_node_id="2551" src_node_output="result" />
	<Edge dst_node_id="2560" dst_node_input="sel" src_node_id="2551" src_node_output="result" />
	<Node group="[]" id="2559" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2560" dst_node_input="option0" src_node_id="2559" src_node_output="value" />
	<Node group="[]" id="2558" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000001</Value>
		<HexValue>0x001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2560" dst_node_input="option1" src_node_id="2558" src_node_output="value" />
	<Node group="[]" id="2560" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2561" dst_node_input="b" src_node_id="2560" src_node_output="result" />
	<Node group="[]" id="2561" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2563" dst_node_input="a" src_node_id="2561" src_node_output="result" />
	<Edge dst_node_id="2568" dst_node_input="a" src_node_id="2561" src_node_output="result" />
	<Edge dst_node_id="2572" dst_node_input="i" src_node_id="2561" src_node_output="result" />
	<Node group="[]" id="2665" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000</Value>
		<HexValue>0x000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2563" dst_node_input="b" src_node_id="2665" src_node_output="value" />
	<Node group="[]" id="2563" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2565" dst_node_input="a" src_node_id="2563" src_node_output="result" />
	<Node group="[]" id="2664" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2526" dst_node_input="b" src_node_id="2664" src_node_output="value" />
	<Node group="[]" id="2526" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2528" dst_node_input="a" src_node_id="2526" src_node_output="result" />
	<Node group="[]" id="2527" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2528" dst_node_input="b" src_node_id="2527" src_node_output="output" />
	<Node group="[]" id="2528" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2564" dst_node_input="a" src_node_id="2528" src_node_output="result" />
	<Edge dst_node_id="2571" dst_node_input="b" src_node_id="2528" src_node_output="result" />
	<Node group="[]" id="2564" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2565" dst_node_input="b" src_node_id="2564" src_node_output="result" />
	<Node group="[]" id="2565" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2566" dst_node_input="a" src_node_id="2565" src_node_output="result" />
	<Node group="[]" id="2663" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2530" dst_node_input="b" src_node_id="2663" src_node_output="value" />
	<Node group="[]" id="2530" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2532" dst_node_input="a" src_node_id="2530" src_node_output="result" />
	<Node group="[]" id="2531" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDoubtBitOp">
		<Input name="input" type="dfeOffsetFix(36, -26, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>DoubtBitOp(GET_DOUBT)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2532" dst_node_input="b" src_node_id="2531" src_node_output="output" />
	<Node group="[]" id="2532" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2566" dst_node_input="b" src_node_id="2532" src_node_output="result" />
	<Edge dst_node_id="2569" dst_node_input="a" src_node_id="2532" src_node_output="result" />
	<Node group="[]" id="2566" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2580" dst_node_input="in0" src_node_id="2566" src_node_output="result" />
	<Node group="[]" id="2662" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:11, 0, TWOSCOMPLEMENT}\n0x0ff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00011111111</Value>
		<HexValue>0x0ff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2568" dst_node_input="b" src_node_id="2662" src_node_output="value" />
	<Node group="[]" id="2568" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2570" dst_node_input="a" src_node_id="2568" src_node_output="result" />
	<Node group="[]" id="2569" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2570" dst_node_input="b" src_node_id="2569" src_node_output="result" />
	<Node group="[]" id="2570" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2571" dst_node_input="a" src_node_id="2570" src_node_output="result" />
	<Node group="[]" id="2571" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2580" dst_node_input="in1" src_node_id="2571" src_node_output="result" />
	<Node group="[]" id="2580" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2588" dst_node_input="sel" src_node_id="2580" src_node_output="result" />
	<Node group="[]" id="2637" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge dst_node_id="2576" dst_node_input="in0" src_node_id="2637" src_node_output="value" />
	<Node group="[]" id="2572" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(11, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2575" dst_node_input="input" src_node_id="2572" src_node_output="o" />
	<Node group="[]" id="2575" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2576" dst_node_input="in1" src_node_id="2575" src_node_output="output" />
	<Node group="[]" id="2576" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2578" dst_node_input="in0" src_node_id="2576" src_node_output="result" />
	<Node group="[]" id="2552" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:24, -23, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>000000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2553" dst_node_input="option1" src_node_id="2552" src_node_output="value" />
	<Node group="[]" id="2553" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2554" dst_node_input="i" src_node_id="2553" src_node_output="result" />
	<Node group="[]" id="2554" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>{HWOffsetFix:23, -23, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2577" dst_node_input="input" src_node_id="2554" src_node_output="o" />
	<Node group="[]" id="2577" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2578" dst_node_input="in1" src_node_id="2577" src_node_output="output" />
	<Node group="[]" id="2578" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2579" dst_node_input="input" src_node_id="2578" src_node_output="result" />
	<Node group="[]" id="2579" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2588" dst_node_input="option0" src_node_id="2579" src_node_output="output" />
	<Node group="[]" id="2581" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2583" dst_node_input="in0" src_node_id="2581" src_node_output="value" />
	<Node group="[]" id="2582" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0xff; 255.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
		<NumericValue>255.0</NumericValue>
	</Node>
	<Edge dst_node_id="2583" dst_node_input="in1" src_node_id="2582" src_node_output="value" />
	<Node group="[]" id="2583" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2585" dst_node_input="in0" src_node_id="2583" src_node_output="result" />
	<Node group="[]" id="2584" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:23, 0, UNSIGNED}\n0x000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000</Value>
		<HexValue>0x000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2585" dst_node_input="in1" src_node_id="2584" src_node_output="value" />
	<Node group="[]" id="2585" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeOffsetFix(23, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2586" dst_node_input="input" src_node_id="2585" src_node_output="result" />
	<Node group="[]" id="2586" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2588" dst_node_input="option1" src_node_id="2586" src_node_output="output" />
	<Edge dst_node_id="2588" dst_node_input="option3" src_node_id="2586" src_node_output="output" />
	<Node group="[]" id="2587" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="2588" dst_node_input="option2" src_node_id="2587" src_node_output="value" />
	<Node group="[]" id="2588" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeBits(2)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Input name="option2" type="dfeFloat(8, 24)" />
		<Input name="option3" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.exp(KernelMath.java:727)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2596" dst_node_input="b" src_node_id="2588" src_node_output="result" />
	<Node group="[]" id="2596" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2597" dst_node_input="b" src_node_id="2596" src_node_output="result" />
	<Node group="[]" id="2597" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:134)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2598" dst_node_input="a" src_node_id="2597" src_node_output="result" />
	<Edge dst_node_id="2599" dst_node_input="option1" src_node_id="2597" src_node_output="result" />
	<Node group="[]" id="2598" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.max(KernelMath.java:864)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:137)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2599" dst_node_input="sel" src_node_id="2598" src_node_output="result" />
	<Node group="[]" id="2599" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.max(KernelMath.java:864)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:137)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2604" dst_node_input="data" src_node_id="2599" src_node_output="result" />
	<Node group="[]" id="2604" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOutput">
		<Input name="output_control" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="dfeFloat(8, 24)" />
		<Text>Output(y)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:816)
simple.SimpleKernel.&lt;init&gt;(SimpleKernel.maxj:139)
simple.SimpleManager.main(SimpleManager.maxj:23)</OriginStackTrace>
		<Name>y</Name>
	</Node>
	<Node group="[]" id="2609" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2610" dst_node_input="load" src_node_id="2609" src_node_output="value" />
	<Node group="[]" id="2661" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2607" dst_node_input="enable" src_node_id="2661" src_node_output="value" />
	<Node group="[]" id="2606" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
		<HexValue>0x1000000000000</HexValue>
		<NumericValue>2.81474976710656E14</NumericValue>
	</Node>
	<Edge dst_node_id="2607" dst_node_input="max" src_node_id="2606" src_node_output="value" />
	<Node group="[]" id="2607" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="2608" dst_node_input="input" src_node_id="2607" src_node_output="count" />
	<Node group="[]" id="2608" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="output" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>stream offset: 1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2610" dst_node_input="data" src_node_id="2608" src_node_output="output" />
	<Node group="[]" id="2610" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeOutputMappedReg">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar output (current_run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
		<Name>current_run_cycle_count</Name>
	</Node>
	<Node group="[]" id="2660" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="2613" dst_node_input="enable" src_node_id="2660" src_node_output="value" />
	<Node group="[]" id="2612" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
		<HexValue>0x1000000000000</HexValue>
		<NumericValue>2.81474976710656E14</NumericValue>
	</Node>
	<Edge dst_node_id="2613" dst_node_input="max" src_node_id="2612" src_node_output="value" />
	<Node group="[]" id="2613" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="2616" dst_node_input="a" src_node_id="2613" src_node_output="count" />
	<Node group="[]" id="2615" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="run_cycle_count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar input (run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
		<Name>run_cycle_count</Name>
	</Node>
	<Edge dst_node_id="2616" dst_node_input="b" src_node_id="2615" src_node_output="run_cycle_count" />
	<Node group="[]" id="2616" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="2614" dst_node_input="start" src_node_id="2616" src_node_output="result" />
	<Node group="[]" id="2614" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeFlush">
		<Input name="start" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>flush on trigger</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:359)
simple.SimpleManager.main(SimpleManager.maxj:27)</OriginStackTrace>
	</Node>
</Graph>
